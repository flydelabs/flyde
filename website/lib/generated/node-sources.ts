// Auto-generated file. Do not edit manually.
// Generated by bundle-node-sources.ts

export const flydeSources: Record<string, string> = {
  "Accumulate Some Values by Count": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgQWNjdW11bGF0ZVNvbWVWYWx1ZXNCeUNvdW50OiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiQWNjdW11bGF0ZSBTb21lIFZhbHVlcyBieSBDb3VudCIsCiAgaWNvbjogImZhLWJhc2tldC1zaG9wcGluZyIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOgogICAgJ0FjY3VtdWxhdGVzIHZhbHVlcyBzZW50IHRvIHRoZSAiYWNjZXB0IiBpbnB1dC4gRW1pdHMgdGhlIGxpc3QgYWZ0ZXIgdGhlIHRvdGFsIGl0ZW1zIHBhc3NlZCB0byBib3RoICJhY2NlcHQiIGFuZCAiaWdub3JlIiBpbnB1dHMgcmVhY2ggdGhlIHNwZWNpZmllZCBjb3VudC4nLAogIGlucHV0czogewogICAgYWNjZXB0OiB7IGRlc2NyaXB0aW9uOiAiVmFsdWVzIHRvIGFjY3VtdWxhdGUiIH0sCiAgICBpZ25vcmU6IHsgZGVzY3JpcHRpb246ICJWYWx1ZXMgdG8gaWdub3JlIiB9LAogICAgY291bnQ6IHsKICAgICAgZGVzY3JpcHRpb246ICJOdW1iZXIgb2YgdmFsdWVzIHRvIGFjY3VtdWxhdGUgYmVmb3JlIGVtaXR0aW5nIHRoZW0iLAogICAgfSwKICB9LAogIHJlYWN0aXZlSW5wdXRzOiBbImFjY2VwdCIsICJpZ25vcmUiXSwKICBvdXRwdXRzOiB7CiAgICBhY2N1bXVsYXRlZDogeyBkZXNjcmlwdGlvbjogIlRoZSBhY2N1bXVsYXRlZCBhY2NlcHRlZCB2YWx1ZXMiIH0sCiAgICBpZ25vcmVkOiB7IGRlc2NyaXB0aW9uOiAiVGhlIGFjY3VtdWxhdGVkIGlnbm9yZWQgdmFsdWVzIiB9LAogIH0sCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgYWNjZXB0LCBpZ25vcmUsIGNvdW50IH0gPSBpbnB1dHM7CiAgICBjb25zdCB7IGFjY3VtdWxhdGVkLCBpZ25vcmVkIH0gPSBvdXRwdXRzOwogICAgY29uc3QgeyBzdGF0ZSB9ID0gYWR2OwoKICAgIGNvbnN0IGxpc3QgPSBzdGF0ZS5nZXQoImxpc3QiKSB8fCBbXTsKICAgIGNvbnN0IGlnbm9yZWRMaXN0ID0gc3RhdGUuZ2V0KCJpZ25vcmVkIikgfHwgW107CgogICAgaWYgKHR5cGVvZiBhY2NlcHQgIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgIGxpc3QucHVzaChhY2NlcHQpOwogICAgICBzdGF0ZS5zZXQoImxpc3QiLCBsaXN0KTsKICAgIH0KCiAgICBpZiAodHlwZW9mIGlnbm9yZSAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgaWdub3JlZExpc3QucHVzaChpZ25vcmUpOwogICAgICBzdGF0ZS5zZXQoImlnbm9yZWQiLCBpZ25vcmVkKTsKICAgIH0KCiAgICBpZiAobGlzdC5sZW5ndGggKyBpZ25vcmVkTGlzdC5sZW5ndGggPj0gY291bnQpIHsKICAgICAgYWNjdW11bGF0ZWQubmV4dChsaXN0KTsKICAgICAgaWdub3JlZC5uZXh0KGlnbm9yZWQpOwogICAgfQogIH0sCn07Cg==",
  "Add": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgovLyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkKZXhwb3J0IGNvbnN0IEFkZDogQ29kZU5vZGUgPSB7CiAgaWQ6ICJBZGQiLAogIGRlc2NyaXB0aW9uOiAiQWRkIHR3byBudW1iZXJzIiwKICBpbnB1dHM6IHsKICAgIG4xOiB7fSwKICAgIG4yOiB7fSwKICB9LAogIG91dHB1dHM6IHsKICAgIHN1bTogewogICAgICBkZXNjcmlwdGlvbjogIlRoZSBzdW0gb2YgdGhlIHR3byBudW1iZXJzIiwKICAgIH0sCiAgfSwKICBydW46IChpbnB1dHMsIHsgc3VtIH0pID0+IHsKICAgIHN1bS5uZXh0KGlucHV0cy5uMSArIGlucHV0cy5uMik7CiAgfSwKfTsK",
  "Airtable": "",
  "Anthropic": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgppbnRlcmZhY2UgQW50aHJvcGljRXJyb3JSZXNwb25zZSB7CiAgZXJyb3I/OiB7CiAgICBtZXNzYWdlOiBzdHJpbmc7CiAgICB0eXBlPzogc3RyaW5nOwogIH07Cn0KCmV4cG9ydCBjb25zdCBBbnRocm9waWM6IENvZGVOb2RlID0gewogIGlkOiAiQW50aHJvcGljIiwKICBkaXNwbGF5TmFtZTogIkFudGhyb3BpYyIsCiAgbmFtZXNwYWNlOiAiYWkiLAogIG1lbnVEaXNwbGF5TmFtZTogIkFudGhyb3BpYyIsCiAgZGVzY3JpcHRpb246ICJHZW5lcmF0ZSB0ZXh0IHVzaW5nIEFudGhyb3BpYydzIENsYXVkZSBtb2RlbHMiLAogIGljb246IGAKPHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxuczp4PSJuc19leHRlbmQ7IiB4bWxuczppPSJuc19haTsiIHhtbG5zOmdyYXBoPSJuc19ncmFwaHM7IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDkyLjIgNjUiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDkyLjIgNjU7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgLnN0MHtmaWxsOiBjdXJyZW50Q29sb3I7fQogPC9zdHlsZT4KIDxtZXRhZGF0YT4KICA8c2Z3IHhtbG5zPSJuc19zZnc7Ij4KICAgPHNsaWNlcz4KICAgPC9zbGljZXM+CiAgIDxzbGljZVNvdXJjZUJvdW5kcyBib3R0b21MZWZ0T3JpZ2luPSJ0cnVlIiBoZWlnaHQ9IjY1IiB3aWR0aD0iOTIuMiIgeD0iLTQzLjciIHk9Ii05OCI+CiAgIDwvc2xpY2VTb3VyY2VCb3VuZHM+CiAgPC9zZnc+CiA8L21ldGFkYXRhPgogPHBhdGggY2xhc3M9InN0MCIgZD0iTTY2LjUsMEg1Mi40bDI1LjcsNjVoMTQuMUw2Ni41LDB6IE0yNS43LDBMMCw2NWgxNC40bDUuMy0xMy42aDI2LjlMNTEuOCw2NWgxNC40TDQwLjUsMEM0MC41LDAsMjUuNywwLDI1LjcsMHoKCSBNMjQuMywzOS4zbDguOC0yMi44bDguOCwyMi44SDI0LjN6Ij4KIDwvcGF0aD4KPC9zdmc+YCwKICBpbnB1dHM6IHsKICAgIGFwaUtleTogewogICAgICBlZGl0b3JUeXBlOiAic2VjcmV0IiwKICAgICAgZWRpdG9yVHlwZURhdGE6IHsKICAgICAgICBkZWZhdWx0TmFtZTogIkFOVEhST1BJQ19BUElfS0VZIiwKICAgICAgfSwKICAgICAgZGVzY3JpcHRpb246ICJBbnRocm9waWMgQVBJIEtleSIsCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiY2xhdWRlLTMtNy1zb25uZXQtbGF0ZXN0IiwKICAgICAgZWRpdG9yVHlwZTogInNlbGVjdCIsCiAgICAgIGVkaXRvclR5cGVEYXRhOiB7CiAgICAgICAgb3B0aW9uczogWwogICAgICAgICAgImNsYXVkZS1vcHVzLTQtMjAyNTA1MTQiLAogICAgICAgICAgImNsYXVkZS1zb25uZXQtNC0yMDI1MDUxNCIsCiAgICAgICAgICAiY2xhdWRlLTMtNy1zb25uZXQtMjAyNTAyMTkiLAogICAgICAgICAgImNsYXVkZS0zLTctc29ubmV0LWxhdGVzdCIsCiAgICAgICAgICAiY2xhdWRlLTMtNS1zb25uZXQtMjAyNDEwMjIiLAogICAgICAgICAgImNsYXVkZS0zLTUtc29ubmV0LWxhdGVzdCIsCiAgICAgICAgICAiY2xhdWRlLTMtNS1zb25uZXQtMjAyNDA2MjAiLAogICAgICAgICAgImNsYXVkZS0zLTUtaGFpa3UtMjAyNDEwMjIiLAogICAgICAgICAgImNsYXVkZS0zLTUtaGFpa3UtbGF0ZXN0IiwKICAgICAgICAgICJjbGF1ZGUtMy1vcHVzLTIwMjQwMjI5IiwKICAgICAgICAgICJjbGF1ZGUtMy1vcHVzLWxhdGVzdCIsCiAgICAgICAgICAiY2xhdWRlLTMtc29ubmV0LTIwMjQwMjI5IiwKICAgICAgICAgICJjbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNyIsCiAgICAgICAgXSwKICAgICAgfSwKICAgICAgZGVzY3JpcHRpb246ICJBbnRocm9waWMgbW9kZWwgdG8gdXNlIiwKICAgIH0sCiAgICBwcm9tcHQ6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiR2VuZXJhdGUgYSByZXNwb25zZSB0byB0aGUgZm9sbG93aW5nOiB7e3RleHR9fSIsCiAgICAgIGVkaXRvclR5cGU6ICJsb25ndGV4dCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiUHJvbXB0IGZvciB0ZXh0IGdlbmVyYXRpb24iLAogICAgfSwKICAgIHRlbXBlcmF0dXJlOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogMC43LAogICAgICBlZGl0b3JUeXBlOiAibnVtYmVyIiwKICAgICAgZGVzY3JpcHRpb246ICJUZW1wZXJhdHVyZSBmb3IgcmVzcG9uc2UgZ2VuZXJhdGlvbiAoMC0xKSIsCiAgICB9LAogICAgbWF4VG9rZW5zOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogMTAwMCwKICAgICAgZWRpdG9yVHlwZTogIm51bWJlciIsCiAgICAgIGRlc2NyaXB0aW9uOiAiTWF4aW11bSBudW1iZXIgb2YgdG9rZW5zIHRvIGdlbmVyYXRlIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICByZXNwb25zZTogewogICAgICBkZXNjcmlwdGlvbjogIkdlbmVyYXRlZCB0ZXh0IHJlc3BvbnNlIiwKICAgIH0sCiAgfSwKICBydW46IGFzeW5jIChpbnB1dHMsIG91dHB1dHMpID0+IHsKICAgIGNvbnN0IHsgYXBpS2V5LCBtb2RlbCwgcHJvbXB0LCB0ZW1wZXJhdHVyZSwgbWF4VG9rZW5zIH0gPSBpbnB1dHM7CgogICAgY29uc3QgaGVhZGVycyA9IHsKICAgICAgIngtYXBpLWtleSI6IGFwaUtleSwKICAgICAgImFudGhyb3BpYy12ZXJzaW9uIjogIjIwMjMtMDYtMDEiLAogICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgfTsKCiAgICBjb25zdCBkYXRhID0gewogICAgICBtb2RlbCwKICAgICAgbWVzc2FnZXM6IFsKICAgICAgICB7IHJvbGU6ICJ1c2VyIiwgY29udGVudDogcHJvbXB0IH0KICAgICAgXSwKICAgICAgdGVtcGVyYXR1cmU6IHBhcnNlRmxvYXQodGVtcGVyYXR1cmUpLAogICAgICBtYXhfdG9rZW5zOiBtYXhUb2tlbnMsCiAgICB9OwoKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLnBvc3QoCiAgICAgICAgImh0dHBzOi8vYXBpLmFudGhyb3BpYy5jb20vdjEvbWVzc2FnZXMiLAogICAgICAgIGRhdGEsCiAgICAgICAgeyBoZWFkZXJzIH0KICAgICAgKTsKICAgICAgb3V0cHV0cy5yZXNwb25zZS5uZXh0KHJlcy5kYXRhPy5jb250ZW50WzBdPy50ZXh0KTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIGlmIChheGlvcy5pc0F4aW9zRXJyb3IoZXJyb3IpICYmIGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gZXJyb3IucmVzcG9uc2UuZGF0YSBhcyBBbnRocm9waWNFcnJvclJlc3BvbnNlOwogICAgICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgICAgIGBBbnRocm9waWMgQVBJIEVycm9yICR7ZXJyb3IucmVzcG9uc2Uuc3RhdHVzfTogJHtlcnJvckRhdGEuZXJyb3I/Lm1lc3NhZ2UgfHwgZXJyb3IucmVzcG9uc2Uuc3RhdHVzVGV4dAogICAgICAgICAgfWAKICAgICAgICApOwogICAgICB9CiAgICAgIHRocm93IGVycm9yOwogICAgfQogIH0sCn07Cg==",
  "AnthropicStub": "",
  "Append": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgQXBwZW5kOiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiQXBwZW5kIiwKICBuYW1lc3BhY2UsCiAgZGVzY3JpcHRpb246ICJBcHBlbmRzIGFuIGl0ZW0gdG8gYSBsaXN0IiwKICBpbnB1dHM6IHsKICAgIGxpc3Q6IHsgZGVzY3JpcHRpb246ICJUaGUgbGlzdCIgfSwKICAgIGl0ZW06IHsgZGVzY3JpcHRpb246ICJUaGUgaXRlbSB0byBhcHBlbmQiIH0sCiAgfSwKICBvdXRwdXRzOiB7IGxpc3Q6IHsgZGVzY3JpcHRpb246ICJUaGUgcmVzdWx0aW5nIGxpc3QiIH0gfSwKICBydW46ICh7IGxpc3QsIGl0ZW0gfSwgeyBsaXN0OiBvdXRwdXRMaXN0IH0pID0+IHsKICAgIG91dHB1dExpc3QubmV4dChbLi4ubGlzdCwgaXRlbV0pOwogIH0sCiAgaWNvbjogImZhLXBsdXMiLAp9Owo=",
  "Append File": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0ICogYXMgZnMgZnJvbSAiZnMiOwoKZXhwb3J0IGNvbnN0IEFwcGVuZEZpbGU6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJBcHBlbmQgRmlsZSIsCiAgaWNvbjogImZhLWZpbGUiLAogIG5hbWVzcGFjZTogIkZpbGUgU3lzdGVtIiwKICBkZXNjcmlwdGlvbjogIkFwcGVuZHMgYSBmaWxlIHRvIHRoZSBmaWxlIHN5c3RlbSIsCiAgaW5wdXRzOiB7CiAgICBwYXRoOiB7IGRlc2NyaXB0aW9uOiAiUGF0aCB0byB0aGUgZmlsZSIgfSwKICAgIGNvbnRlbnRzOiB7IGRlc2NyaXB0aW9uOiAiQ29udGVudHMgb2YgdGhlIGZpbGUiIH0sCiAgICBlbmNvZGluZzogewogICAgICBkZXNjcmlwdGlvbjogIkVuY29kaW5nIG9mIHRoZSBmaWxlIiwKICAgICAgbW9kZTogIm9wdGlvbmFsIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7fSwKICBydW46ICh7IHBhdGgsIGNvbnRlbnRzLCBlbmNvZGluZyB9KSA9PiB7CiAgICByZXR1cm4gZnMucHJvbWlzZXMuYXBwZW5kRmlsZShwYXRoLCBjb250ZW50cywgZW5jb2RpbmcpOwogIH0sCn07Cg==",
  "CodeExpression": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBnZXRWYXJpYWJsZXMgPSAoY29kZTogc3RyaW5nKSA9PiB7CiAgcmV0dXJuIChjb2RlLm1hdGNoKC9pbnB1dHNcLihbYS16QS1aXVx3KikvZykgfHwgW10pLm1hcCgodikgPT4KICAgIHYucmVwbGFjZSgvaW5wdXRzXC4vLCAiIikKICApOwp9OwoKCmV4cG9ydCBpbnRlcmZhY2UgQ29kZUV4cHJlc3Npb25Db25maWcgewogIHZhbHVlOiBzdHJpbmc7Cn0KCmV4cG9ydCBjb25zdCBDb2RlRXhwcmVzc2lvbjogQ29kZU5vZGU8Q29kZUV4cHJlc3Npb25Db25maWc+ID0gewogIGlkOiAiQ29kZUV4cHJlc3Npb24iLAogIG5hbWVzcGFjZTogIlZhbHVlcyIsCiAgbW9kZTogImFkdmFuY2VkIiwKICBpY29uOiAiY29kZSIsCiAgbWVudURpc3BsYXlOYW1lOiAiSlMgRXhwcmVzc2lvbiIsCiAgbWVudURlc2NyaXB0aW9uOiAiRXZhbHVhdGVzIGEgSlMgZXhwcmVzc2lvbi4gU3VwcG9ydHMgZHluYW1pYyB2YXJpYWJsZXMiLAogIGRpc3BsYXlOYW1lOiAoKSA9PiAiQ29kZSBFeHByZXNzaW9uIiwKICBkZXNjcmlwdGlvbjogKGNvbmZpZykgPT4gYEV2YWx1YXRlcyB0aGUgZXhwcmVzc2lvbiBcYCR7Y29uZmlnLnZhbHVlfVxgYCwKICBhbGlhc2VzOiBbIkpTIiwgIkphdmFTY3JpcHQiLCAiQ3VzdG9tIl0sCiAgZGVmYXVsdENvbmZpZzogewogICAgdmFsdWU6ICJgSGVsbG8gJHtpbnB1dHMuZmlyc3ROYW1lfSAke2lucHV0cy5sYXN0TmFtZX1gIiwKICB9LAogIGlucHV0czogKGNvbmZpZykgPT4gewogICAgY29uc3QgaW5wdXROYW1lcyA9IGdldFZhcmlhYmxlcyhjb25maWcudmFsdWUgPz8gIiIpOwogICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhpbnB1dE5hbWVzLm1hcCgoaW5wdXQpID0+IFtpbnB1dCwge31dKSA/PyBbXSk7CiAgfSwKICBvdXRwdXRzOiAoKSA9PiAoewogICAgdmFsdWU6IHsKICAgICAgZGlzcGxheU5hbWU6ICJWYWx1ZSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIHJlc3VsdCBvZiB0aGUgZXhwcmVzc2lvbiBldmFsdWF0aW9uIiwKICAgIH0sCiAgfSksCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJlc0ZuID0gZXZhbChgKGlucHV0cywgYWR2KSA9PiAoJHthZHYuY29udGV4dC5jb25maWcudmFsdWV9KWApOwogICAgICBvdXRwdXRzLnZhbHVlLm5leHQocmVzRm4oaW5wdXRzLCBhZHYpKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgYWR2Lm9uRXJyb3IoZSk7CiAgICB9CiAgfSwKICBlZGl0b3JDb25maWc6IHsKICAgIHR5cGU6ICJjdXN0b20iLAogICAgZWRpdG9yQ29tcG9uZW50QnVuZGxlUGF0aDogIi4uLy4uL2Rpc3QvdWkvQ29kZUV4cHJlc3Npb24uanMiLAogIH0sCn07Cg==",
  "Collect": "aW1wb3J0IHsgQ29kZU5vZGUsIGlzRGVmaW5lZCB9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0IHsgdGltZVRvU3RyaW5nIH0gZnJvbSAiLi4vLi4vVGltaW5nL2NvbW1vbiI7CmltcG9ydCB0eXBlIHsgQ29uZmlndXJhYmxlSW5wdXQgfSBmcm9tICJAZmx5ZGUvZWRpdG9yIjsKCmV4cG9ydCB0eXBlIENvbGxlY3RDb25maWdUaW1lID0gewogIHN0cmF0ZWd5OiAidGltZSI7CiAgdGltZTogQ29uZmlndXJhYmxlSW5wdXQ8bnVtYmVyPjsKfTsKCmV4cG9ydCB0eXBlIENvbGxlY3RDb25maWdDb3VudCA9IHsKICBzdHJhdGVneTogImNvdW50IjsKICBjb3VudDogQ29uZmlndXJhYmxlSW5wdXQ8bnVtYmVyPjsKfTsKCmV4cG9ydCB0eXBlIENvbGxlY3RDb25maWdUcmlnZ2VyID0gewogIHN0cmF0ZWd5OiAidHJpZ2dlciI7Cn07CgpleHBvcnQgdHlwZSBDb2xsZWN0Q29uZmlnID0KICB8IENvbGxlY3RDb25maWdUaW1lCiAgfCBDb2xsZWN0Q29uZmlnQ291bnQKICB8IENvbGxlY3RDb25maWdUcmlnZ2VyOwoKZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUoY29uZmlnOiBDb2xsZWN0Q29uZmlnKTogc3RyaW5nIHsKICBpZiAoY29uZmlnLnN0cmF0ZWd5ID09PSAidGltZSIpIHsKICAgIGlmIChjb25maWcudGltZS5tb2RlID09PSAic3RhdGljIikgewogICAgICByZXR1cm4gYENvbGxlY3Qgb3ZlciAke3RpbWVUb1N0cmluZyhjb25maWcudGltZS52YWx1ZSl9YDsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiAiQ29sbGVjdCBvdmVyIHRpbWUiOwogICAgfQogIH0gZWxzZSBpZiAoY29uZmlnLnN0cmF0ZWd5ID09PSAiY291bnQiKSB7CiAgICBpZiAoY29uZmlnLmNvdW50Lm1vZGUgPT09ICJzdGF0aWMiKSB7CiAgICAgIHJldHVybiBgQ29sbGVjdCAke2NvbmZpZy5jb3VudC52YWx1ZX0gdmFsdWVzYDsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiAiQ29sbGVjdCB2YWx1ZXMiOwogICAgfQogIH0gZWxzZSB7CiAgICByZXR1cm4gIkNvbGxlY3Qgb24gdHJpZ2dlciI7CiAgfQp9CgpmdW5jdGlvbiBnZXREZXNjcmlwdGlvbihjb25maWc6IENvbGxlY3RDb25maWcpOiBzdHJpbmcgewogIGlmIChjb25maWcuc3RyYXRlZ3kgPT09ICJ0aW1lIikgewogICAgaWYgKGNvbmZpZy50aW1lLm1vZGUgPT09ICJzdGF0aWMiKSB7CiAgICAgIHJldHVybiBgRW1pdHMgYSBsaXN0IG9mIGFsbCB2YWx1ZXMgcmVjZWl2ZWQsIGZyb20gdGhlIGZpcnN0IHZhbHVlIGFuZCB1bnRpbCAke3RpbWVUb1N0cmluZygKICAgICAgICBjb25maWcudGltZS52YWx1ZQogICAgICApfSBwYXNzLmA7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gIkVtaXRzIGEgbGlzdCBvZiBhbGwgdmFsdWVzIHJlY2VpdmVkLCBmcm9tIHRoZSBmaXJzdCB2YWx1ZSBhbmQgdW50aWwgdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdGltZSBwYXNzZXMuIjsKICAgIH0KICB9IGVsc2UgaWYgKGNvbmZpZy5zdHJhdGVneSA9PT0gImNvdW50IikgewogICAgaWYgKGNvbmZpZy5jb3VudC5tb2RlID09PSAic3RhdGljIikgewogICAgICByZXR1cm4gYENvbGxlY3QgJHtjb25maWcuY291bnQudmFsdWV9IHZhbHVlcyBhbmQgZW1pdCBhIGxpc3Qgb2YgdGhlbS5gOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuICJDb2xsZWN0IGEgc3BlY2lmaWVkIGFtb3VudCBvZiB2YWx1ZXMgYW5kIGVtaXQgYSBsaXN0IG9mIHRoZW0uIjsKICAgIH0KICB9IGVsc2UgewogICAgcmV0dXJuICJFbWl0cyBhIGxpc3Qgb2YgYWxsIHZhbHVlcyByZWNlaXZlZCB1cCB1bnRpbCBhbnkgdmFsdWUgaXMgcmVjZWl2ZWQgdG8gdGhlICd0cmlnZ2VyJyBpbnB1dC4iOwogIH0KfQoKZXhwb3J0IGNvbnN0IENvbGxlY3Q6IENvZGVOb2RlPENvbGxlY3RDb25maWc+ID0gewogIGlkOiAiQ29sbGVjdCIsCiAgbmFtZXNwYWNlOiAiTGlzdHMiLAogIG1vZGU6ICJhZHZhbmNlZCIsCiAgaWNvbjogImJ1Y2tldCIsCiAgYWxpYXNlczogWyJhZ2dyZWdhdGUiLCAiY29tYmluZSJdLAogIG1lbnVEaXNwbGF5TmFtZTogIkNvbGxlY3QiLAogIG1lbnVEZXNjcmlwdGlvbjogIkNvbGxlY3RzIHZhbHVlcyBpbnRvIGEgbGlzdC4gT3ZlciB0aW1lLCBjb3VudCwgb3IgdHJpZ2dlci4iLAogIGRpc3BsYXlOYW1lOiAoY29uZmlnKSA9PiBnZXREaXNwbGF5TmFtZShjb25maWcpLAogIGRlc2NyaXB0aW9uOiAoY29uZmlnKSA9PiBnZXREZXNjcmlwdGlvbihjb25maWcpLAogIGRlZmF1bHRDb25maWc6IHsgc3RyYXRlZ3k6ICJjb3VudCIsIGNvdW50OiB7IG1vZGU6ICJzdGF0aWMiLCB2YWx1ZTogMyB9IH0sCiAgaW5wdXRzOiAoY29uZmlnKSA9PiB7CiAgICBjb25zdCBpbnB1dHMgPSB7CiAgICAgIHZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiVmFsdWUgdG8gY29sbGVjdCIgfSwKICAgIH07CgogICAgaWYgKGNvbmZpZy5zdHJhdGVneSA9PT0gInRpbWUiICYmIGNvbmZpZy50aW1lLm1vZGUgPT09ICJkeW5hbWljIikgewogICAgICBpbnB1dHNbInRpbWUiXSA9IHsgZGVzY3JpcHRpb246ICJUaW1lIGluIG1pbGxpc2Vjb25kcyIgfTsKICAgIH0gZWxzZSBpZiAoY29uZmlnLnN0cmF0ZWd5ID09PSAiY291bnQiICYmIGNvbmZpZy5jb3VudC5tb2RlID09PSAiZHluYW1pYyIpIHsKICAgICAgaW5wdXRzWyJjb3VudCJdID0geyBkZXNjcmlwdGlvbjogIk51bWJlciBvZiB2YWx1ZXMgdG8gY29sbGVjdCIgfTsKICAgIH0gZWxzZSBpZiAoY29uZmlnLnN0cmF0ZWd5ID09PSAidHJpZ2dlciIpIHsKICAgICAgaW5wdXRzWyJ0cmlnZ2VyIl0gPSB7CiAgICAgICAgbW9kZTogIm9wdGlvbmFsIiwKICAgICAgICBkZXNjcmlwdGlvbjoKICAgICAgICAgICJFbWl0IGEgdmFsdWUgaGVyZSB0byBvdXRwdXQgYSBsaXN0IG91dCBvZiBjb2xsZWN0ZWQgdmFsdWVzIiwKICAgICAgfTsKICAgIH0KCiAgICByZXR1cm4gaW5wdXRzOwogIH0sCiAgcmVhY3RpdmVJbnB1dHM6IChjb25maWcpID0+IFsKICAgICJ2YWx1ZSIsCiAgICAuLi4oY29uZmlnLnN0cmF0ZWd5ID09PSAidHJpZ2dlciIgPyBbInRyaWdnZXIiXSA6IFtdKSwKICBdLAogIG91dHB1dHM6ICgpID0+ICh7CiAgICBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiQ29sbGVjdGVkIHZhbHVlcyIgfSwKICB9KSwKICBjb21wbGV0aW9uT3V0cHV0czogKCkgPT4gWyJsaXN0Il0sCiAgcnVuOiBhc3luYyAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgdmFsdWUsIHRpbWUsIGNvdW50LCB0cmlnZ2VyIH0gPSBpbnB1dHM7CiAgICBjb25zdCBjb25maWcgPSBhZHYuY29udGV4dC5jb25maWc7CiAgICBjb25zdCBsaXN0ID0gYWR2LnN0YXRlLmdldCgibGlzdCIpIHx8IFtdOwoKICAgIGlmIChpc0RlZmluZWQodmFsdWUpKSB7CiAgICAgIGxpc3QucHVzaCh2YWx1ZSk7CiAgICAgIGFkdi5zdGF0ZS5zZXQoImxpc3QiLCBsaXN0KTsKICAgIH0KCiAgICBpZiAoY29uZmlnLnN0cmF0ZWd5ID09PSAidGltZSIpIHsKICAgICAgY29uc3QgdGltZVZhbHVlID0KICAgICAgICBjb25maWcudGltZS5tb2RlID09PSAiZHluYW1pYyIgPyB0aW1lIDogY29uZmlnLnRpbWUudmFsdWU7CgogICAgICBjb25zdCB0aW1lciA9IGFkdi5zdGF0ZS5nZXQoInRpbWVyIik7CiAgICAgIGlmICghdGltZXIpIHsKICAgICAgICBjb25zdCBuZXdUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgb3V0cHV0cy5saXN0Lm5leHQobGlzdCk7CiAgICAgICAgICBhZHYuc3RhdGUuc2V0KCJsaXN0IiwgW10pOwogICAgICAgIH0sIHRpbWVWYWx1ZSk7CgogICAgICAgIGFkdi5zdGF0ZS5zZXQoInRpbWVyIiwgbmV3VGltZXIpOwogICAgICB9CiAgICB9IGVsc2UgaWYgKGNvbmZpZy5zdHJhdGVneSA9PT0gImNvdW50IikgewogICAgICBjb25zdCBjb3VudFZhbHVlID0KICAgICAgICBjb25maWcuY291bnQubW9kZSA9PT0gImR5bmFtaWMiID8gY291bnQgOiBjb25maWcuY291bnQudmFsdWU7CiAgICAgIGlmIChsaXN0Lmxlbmd0aCA+PSBjb3VudFZhbHVlKSB7CiAgICAgICAgb3V0cHV0cy5saXN0Lm5leHQobGlzdCk7CiAgICAgICAgYWR2LnN0YXRlLnNldCgibGlzdCIsIFtdKTsKICAgICAgfQogICAgfSBlbHNlIGlmIChjb25maWcuc3RyYXRlZ3kgPT09ICJ0cmlnZ2VyIikgewogICAgICBpZiAoaXNEZWZpbmVkKHRyaWdnZXIpKSB7CiAgICAgICAgb3V0cHV0cy5saXN0Lm5leHQobGlzdCk7CiAgICAgICAgYWR2LnN0YXRlLnNldCgibGlzdCIsIFtdKTsKICAgICAgfQogICAgfQogIH0sCiAgZWRpdG9yQ29uZmlnOiB7CiAgICB0eXBlOiAiY3VzdG9tIiwKICAgIGVkaXRvckNvbXBvbmVudEJ1bmRsZVBhdGg6ICIuLi8uLi8uLi9kaXN0L3VpL0NvbGxlY3QuanMiLAogIH0sCn07Cg==",
  "Concat": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgY29uc3QgQ29uY2F0OiBDb2RlTm9kZSA9IHsKICBpZDogIkNvbmNhdCIsCiAgZGVzY3JpcHRpb246ICJDb25jYXRlbmF0ZSB0d28gc3RyaW5ncyIsCiAgaW5wdXRzOiB7CiAgICBhOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIGZpcnN0IHN0cmluZyIsCiAgICB9LAogICAgYjogewogICAgICBkZXNjcmlwdGlvbjogIlRoZSBzZWNvbmQgc3RyaW5nIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICB2YWx1ZTogewogICAgICBkZXNjcmlwdGlvbjogIlRoZSBjb25jYXRlbmF0ZWQgc3RyaW5nIiwKICAgIH0sCiAgfSwKICBydW46IChpbnB1dHMsIHsgdmFsdWUgfSkgPT4gewogICAgdmFsdWUubmV4dChpbnB1dHMuYSArIGlucHV0cy5iKTsKICB9LAp9Owo=",
  "Concat Lists": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgQ29uY2F0TGlzdHM6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJDb25jYXQgTGlzdHMiLAogIGljb246ICJmYS1saXN0IiwKICBuYW1lc3BhY2UsCiAgZGVzY3JpcHRpb246ICJDb25jYXRlbmF0ZXMgdHdvIGxpc3RzIiwKICBpbnB1dHM6IHsKICAgIGxpc3QxOiB7IGRlc2NyaXB0aW9uOiAiRmlyc3QgbGlzdCIgfSwKICAgIGxpc3QyOiB7IGRlc2NyaXB0aW9uOiAiU2Vjb25kIGxpc3QiIH0sCiAgfSwKICBvdXRwdXRzOiB7IGxpc3Q6IHsgZGVzY3JpcHRpb246ICJDb25jYXRlbmF0ZWQgbGlzdCIgfSB9LAogIHJ1bjogKHsgbGlzdDEsIGxpc3QyIH0sIHsgbGlzdCB9KSA9PiBsaXN0Lm5leHQoWy4uLmxpc3QxLCAuLi5saXN0Ml0pLAp9Owo=",
  "Conditional": "aW1wb3J0IHsgY29uZmlndXJhYmxlVmFsdWUsIENvbmZpZ3VyYWJsZVZhbHVlIH0gZnJvbSAiQGZseWRlL2NvcmUiOwppbXBvcnQgewogIENvZGVOb2RlLAogIGV4dHJhY3RJbnB1dHNGcm9tVmFsdWUsCiAgcmVwbGFjZUlucHV0c0luVmFsdWUsCn0gZnJvbSAiQGZseWRlL2NvcmUiOwoKZW51bSBDb25kaXRpb25UeXBlIHsKICBFcXVhbCA9ICJFUVVBTCIsCiAgTm90RXF1YWwgPSAiTk9UX0VRVUFMIiwKICBDb250YWlucyA9ICJDT05UQUlOUyIsCiAgTm90Q29udGFpbnMgPSAiTk9UX0NPTlRBSU5TIiwKICBSZWdleE1hdGNoZXMgPSAiUkVHRVhfTUFUQ0hFUyIsCiAgRXhpc3RzID0gIkVYSVNUUyIsCiAgTm90RXhpc3RzID0gIk5PVF9FWElTVFMiLAp9CgpleHBvcnQgaW50ZXJmYWNlIENvbmRpdGlvbmFsQ29uZmlnIHsKICBjb25kaXRpb246IHsgdHlwZTogQ29uZGl0aW9uVHlwZTsgZGF0YT86IHN0cmluZyB9OwogIGxlZnRPcGVyYW5kOiBDb25maWd1cmFibGVWYWx1ZTsKICByaWdodE9wZXJhbmQ6IENvbmZpZ3VyYWJsZVZhbHVlOwp9CgpmdW5jdGlvbiBjb25kaXRpb25hbENvbmZpZ1RvRGlzcGxheU5hbWUoY29uZmlnOiBDb25kaXRpb25hbENvbmZpZykgewogIGNvbnN0IHsgdHlwZSB9ID0gY29uZmlnLmNvbmRpdGlvbjsKICBjb25zdCByaWdodE9wZXJhbmQgPSBKU09OLnN0cmluZ2lmeShjb25maWcucmlnaHRPcGVyYW5kLnZhbHVlKTsKCiAgc3dpdGNoICh0eXBlKSB7CiAgICBjYXNlIENvbmRpdGlvblR5cGUuRXF1YWw6CiAgICAgIHJldHVybiBgRXF1YWxzICR7cmlnaHRPcGVyYW5kfWA7CiAgICBjYXNlIENvbmRpdGlvblR5cGUuTm90RXF1YWw6CiAgICAgIHJldHVybiBgRG9lcyBub3QgZXF1YWwgJHtyaWdodE9wZXJhbmR9YDsKICAgIGNhc2UgQ29uZGl0aW9uVHlwZS5Db250YWluczoKICAgICAgcmV0dXJuIGBDb250YWlucyAke3JpZ2h0T3BlcmFuZH1gOwogICAgY2FzZSBDb25kaXRpb25UeXBlLk5vdENvbnRhaW5zOgogICAgICByZXR1cm4gYERvZXMgbm90IGNvbnRhaW4gJHtyaWdodE9wZXJhbmR9YDsKICAgIGNhc2UgQ29uZGl0aW9uVHlwZS5SZWdleE1hdGNoZXM6CiAgICAgIHJldHVybiBgTWF0Y2hlcyByZWdleCAke3JpZ2h0T3BlcmFuZH1gOwogICAgY2FzZSBDb25kaXRpb25UeXBlLkV4aXN0czoKICAgICAgcmV0dXJuIGBFeGlzdHNgOwogICAgY2FzZSBDb25kaXRpb25UeXBlLk5vdEV4aXN0czoKICAgICAgcmV0dXJuIGBEb2VzIG5vdCBleGlzdGA7CiAgfQp9CgpleHBvcnQgY29uc3QgQ29uZGl0aW9uYWw6IENvZGVOb2RlPENvbmRpdGlvbmFsQ29uZmlnPiA9IHsKICBpZDogIkNvbmRpdGlvbmFsIiwKICBuYW1lc3BhY2U6ICJDb250cm9sIEZsb3ciLAogIG1vZGU6ICJhZHZhbmNlZCIsCiAgbWVudURpc3BsYXlOYW1lOiAiQ29uZGl0aW9uYWwiLAogIGRlZmF1bHRDb25maWc6IHsKICAgIGNvbmRpdGlvbjogewogICAgICB0eXBlOiBDb25kaXRpb25UeXBlLkVxdWFsLAogICAgfSwKICAgIGxlZnRPcGVyYW5kOiBjb25maWd1cmFibGVWYWx1ZSgic3RyaW5nIiwgInt7dmFsdWV9fSIpLAogICAgcmlnaHRPcGVyYW5kOiBjb25maWd1cmFibGVWYWx1ZSgic3RyaW5nIiwgIlNvbWUgdmFsdWUiKSwKICB9LAogIG1lbnVEZXNjcmlwdGlvbjoKICAgICJFdmFsdWF0ZXMgdGhlIGNvbmRpdGlvbiwgYW5kIGlmIGl0J3MgdHJ1ZSwgZW1pdHMgdGhlIGxlZnQgb3BlcmFuZCB2YWx1ZSB0byB0aGUgJ3RydWUnIG91dHB1dCwgb3RoZXJ3aXNlIGVtaXRzIHRoZSBsZWZ0IG9wZXJhbmQgdmFsdWUgdG8gdGhlICdmYWxzZScgb3V0cHV0IiwKICBkaXNwbGF5TmFtZTogKGNvbmZpZykgPT4gY29uZGl0aW9uYWxDb25maWdUb0Rpc3BsYXlOYW1lKGNvbmZpZyksCiAgZGVzY3JpcHRpb246IChjb25maWcpID0+CiAgICBgRXZhbHVhdGVzIGlmICR7SlNPTi5zdHJpbmdpZnkoCiAgICAgIGNvbmZpZy5sZWZ0T3BlcmFuZC52YWx1ZQogICAgKX0gJHtjb25kaXRpb25hbENvbmZpZ1RvRGlzcGxheU5hbWUoY29uZmlnKX1gLAogIGljb246ICJjaXJjbGUtcXVlc3Rpb24iLAoKICBpbnB1dHM6IChjb25maWcpID0+ICh7CiAgICAuLi5leHRyYWN0SW5wdXRzRnJvbVZhbHVlKGNvbmZpZy5sZWZ0T3BlcmFuZCwgImxlZnRPcGVyYW5kIiksCiAgICAuLi5leHRyYWN0SW5wdXRzRnJvbVZhbHVlKGNvbmZpZy5yaWdodE9wZXJhbmQsICJyaWdodE9wZXJhbmQiKSwKICB9KSwKICBvdXRwdXRzOiB7CiAgICB0cnVlOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiRW1pdHMgdGhlIGxlZnQgb3BlcmFuZCB2YWx1ZSBpZiB0aGUgY29uZGl0aW9uIGlzIHRydWUiLAogICAgfSwKICAgIGZhbHNlOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiRW1pdHMgdGhlIGxlZnQgb3BlcmFuZCB2YWx1ZSBpZiB0aGUgY29uZGl0aW9uIGlzIGZhbHNlIiwKICAgIH0sCiAgfSwKICBydW46IChpbnB1dHMsIG91dHB1dHMsIGFkdikgPT4gewogICAgY29uc3QgeyBjb25kaXRpb24sIGxlZnRPcGVyYW5kLCByaWdodE9wZXJhbmQgfSA9IGFkdi5jb250ZXh0LmNvbmZpZzsKICAgIGNvbnN0IHsgdHJ1ZTogdHJ1ZU91dHB1dCwgZmFsc2U6IGZhbHNlT3V0cHV0IH0gPSBvdXRwdXRzOwoKICAgIGNvbnN0IGxlZnRTaWRlID0gcmVwbGFjZUlucHV0c0luVmFsdWUoCiAgICAgIGlucHV0cywKICAgICAgbGVmdE9wZXJhbmQsCiAgICAgICJsZWZ0T3BlcmFuZCIsCiAgICAgIGZhbHNlCiAgICApOwogICAgY29uc3QgcmlnaHRTaWRlID0gcmVwbGFjZUlucHV0c0luVmFsdWUoCiAgICAgIGlucHV0cywKICAgICAgcmlnaHRPcGVyYW5kLAogICAgICAicmlnaHRPcGVyYW5kIiwKICAgICAgZmFsc2UKICAgICk7CgogICAgY29uc3QgcmVzdWx0ID0gY2FsY3VsYXRlQ29uZGl0aW9uKGxlZnRTaWRlLCByaWdodFNpZGUsIGNvbmRpdGlvbik7CgogICAgY29uc3Qgb3V0cHV0VG9Vc2UgPSByZXN1bHQgPyB0cnVlT3V0cHV0IDogZmFsc2VPdXRwdXQ7CiAgICBvdXRwdXRUb1VzZS5uZXh0KGxlZnRTaWRlKTsKICB9LAogIGVkaXRvckNvbmZpZzogewogICAgdHlwZTogImN1c3RvbSIsCiAgICBlZGl0b3JDb21wb25lbnRCdW5kbGVQYXRoOiAiLi4vLi4vLi4vZGlzdC91aS9Db25kaXRpb25hbC5qcyIsCiAgfSwKfTsKCmZ1bmN0aW9uIGNhbGN1bGF0ZUNvbmRpdGlvbigKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueQogIHZhbDE6IGFueSwKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueQogIHZhbDI6IGFueSwKICBjb25kaXRpb246IENvbmRpdGlvbmFsQ29uZmlnWyJjb25kaXRpb24iXQopIHsKICBzd2l0Y2ggKGNvbmRpdGlvbi50eXBlKSB7CiAgICBjYXNlIENvbmRpdGlvblR5cGUuRXF1YWw6CiAgICAgIHJldHVybiB2YWwxID09PSB2YWwyOwogICAgY2FzZSBDb25kaXRpb25UeXBlLk5vdEVxdWFsOgogICAgICByZXR1cm4gdmFsMSAhPT0gdmFsMjsKICAgIGNhc2UgQ29uZGl0aW9uVHlwZS5Db250YWluczoKICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsMSkpIHsKICAgICAgICByZXR1cm4gdmFsMS5pbmNsdWRlcyh2YWwyKTsKICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsMSA9PT0gInN0cmluZyIpIHsKICAgICAgICByZXR1cm4gdmFsMS5pbmNsdWRlcyh2YWwyKTsKICAgICAgfQogICAgICByZXR1cm4gZmFsc2U7CiAgICBjYXNlIENvbmRpdGlvblR5cGUuTm90Q29udGFpbnM6CiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbDEpKSB7CiAgICAgICAgcmV0dXJuICF2YWwxLmluY2x1ZGVzKHZhbDIpOwogICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwxID09PSAic3RyaW5nIikgewogICAgICAgIHJldHVybiAhdmFsMS5pbmNsdWRlcyh2YWwyKTsKICAgICAgfQogICAgICByZXR1cm4gdHJ1ZTsKICAgIGNhc2UgQ29uZGl0aW9uVHlwZS5SZWdleE1hdGNoZXM6IHsKICAgICAgcmV0dXJuIHR5cGVvZiB2YWwxID09PSAic3RyaW5nIiAmJiBuZXcgUmVnRXhwKHZhbDIpLnRlc3QodmFsMSk7CiAgICB9CiAgICBjYXNlIENvbmRpdGlvblR5cGUuRXhpc3RzOgogICAgICByZXR1cm4gdmFsMSAhPT0gbnVsbCAmJiB2YWwxICE9PSB1bmRlZmluZWQgJiYgdmFsMSAhPT0gIiI7CiAgICBjYXNlIENvbmRpdGlvblR5cGUuTm90RXhpc3RzOgogICAgICByZXR1cm4gdmFsMSA9PT0gbnVsbCB8fCB2YWwxID09PSB1bmRlZmluZWQgfHwgdmFsMSA9PT0gIiI7CiAgfQp9Cg==",
  "DateOps": "aW1wb3J0IHsgQ29kZU5vZGUsIG5vZGVPdXRwdXQgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgY29uc3QgRGF0ZU9wczogQ29kZU5vZGUgPSB7CiAgaWQ6ICJEYXRlT3BzIiwKICBkaXNwbGF5TmFtZTogIkRhdGUge3tvcGVyYXRpb259fSIsCiAgbWVudURpc3BsYXlOYW1lOiAiRGF0ZSBPcGVyYXRpb25zIiwKICBpY29uOiAiY2FsZW5kYXIiLAogIG5hbWVzcGFjZTogIkRhdGVzIiwKICBkZXNjcmlwdGlvbjogIlBlcmZvcm1zIHZhcmlvdXMgZGF0ZSBvcGVyYXRpb25zIiwKICBpbnB1dHM6IHsKICAgIG9wZXJhdGlvbjogewogICAgICBkZWZhdWx0VmFsdWU6ICJub3ciLAogICAgICBsYWJlbDogIk9wZXJhdGlvbiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIGRhdGUgb3BlcmF0aW9uIHRvIHBlcmZvcm0iLAogICAgICBlZGl0b3JUeXBlOiAic2VsZWN0IiwKICAgICAgdHlwZUNvbmZpZ3VyYWJsZTogZmFsc2UsCiAgICAgIGVkaXRvclR5cGVEYXRhOiB7CiAgICAgICAgb3B0aW9uczogWyJub3ciLCAibm93U3RyaW5nIiwgIm5vd0lTT1N0cmluZyIsICJub3dVbml4VGltZSJdLAogICAgICB9LAogICAgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIHZhbHVlOiBub2RlT3V0cHV0KCksCiAgfSwKICBydW46IChpbnB1dHMsIG91dHB1dHMsIGFkdikgPT4gewogICAgY29uc3QgeyBvcGVyYXRpb24gfSA9IGlucHV0czsKCiAgICB0cnkgewogICAgICBsZXQgcmVzdWx0OwoKICAgICAgc3dpdGNoIChvcGVyYXRpb24pIHsKICAgICAgICBjYXNlICJub3ciOgogICAgICAgICAgcmVzdWx0ID0gbmV3IERhdGUoKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgIm5vd1N0cmluZyI6CiAgICAgICAgICByZXN1bHQgPSBuZXcgRGF0ZSgpLnRvU3RyaW5nKCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJub3dJU09TdHJpbmciOgogICAgICAgICAgcmVzdWx0ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAibm93VW5peFRpbWUiOgogICAgICAgICAgcmVzdWx0ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG9wZXJhdGlvbjogJHtvcGVyYXRpb259YCk7CiAgICAgIH0KCiAgICAgIG91dHB1dHMudmFsdWUubmV4dChyZXN1bHQpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcigiRXJyb3IgaW4gRGF0ZU9wczoiLCBlcnJvcik7CiAgICAgIGFkdi5vbkVycm9yKGVycm9yKTsKICAgIH0KICB9LAp9Owo=",
  "Debounce": "aW1wb3J0IHsgVElNSU5HX05BTUVTUEFDRSwgdGltZVRvU3RyaW5nIH0gZnJvbSAiLi9jb21tb24iOwppbXBvcnQgeyBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9IFRJTUlOR19OQU1FU1BBQ0U7CgpleHBvcnQgY29uc3QgRGVib3VuY2U6IENvZGVOb2RlID0gewogIGlkOiAiRGVib3VuY2UiLAogIG5hbWVzcGFjZSwKICBtZW51RGlzcGxheU5hbWU6ICJEZWJvdW5jZSIsCiAgaWNvbjogImhvdXJnbGFzcyIsCiAgZGlzcGxheU5hbWU6ICJEZWJvdW5jZSB7e2RlbGF5TXN9fW1zIiwKICBtZW51RGVzY3JpcHRpb246CiAgICAiRW1pdHMgdGhlIGxhc3QgdmFsdWUgcmVjZWl2ZWQgYWZ0ZXIgYmVpbmcgaWRsZSBmb3IgYSBnaXZlbiBhbW91bnQgb2YgbWlsbGlzZWNvbmRzLiBTdXBwb3J0cyBib3RoIHN0YXRpYyBhbmQgZHluYW1pYyBkZWxheXMuIiwKICBkZXNjcmlwdGlvbjogKGNvbmZpZykgPT4gewogICAgcmV0dXJuIGBEZWJvdW5jZXMgaW5wdXQgdmFsdWVzIHdpdGggYSBkZWxheSBvZiAke3RpbWVUb1N0cmluZygKICAgICAgY29uZmlnLmRlbGF5TXMKICAgICl9LmA7CiAgfSwKICBpbnB1dHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiVmFsdWUgdG8gZGVib3VuY2UiLAogICAgICBtb2RlOiAicmVhY3RpdmUiLAogICAgfSwKICAgIGRlbGF5TXM6IHsKICAgICAgZGVmYXVsdFZhbHVlOiA0MjAsCiAgICAgIGRlc2NyaXB0aW9uOiAiRGVib3VuY2UgZGVsYXkgaW4gbWlsbGlzZWNvbmRzIiwKICAgICAgZWRpdG9yVHlwZTogIm51bWJlciIsCiAgICAgIGVkaXRvclR5cGVEYXRhOiB7IG1pbjogMCB9LAogICAgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIGRlYm91bmNlZFZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiRGVib3VuY2VkIHZhbHVlIiB9LAogIH0sCiAgY29tcGxldGlvbk91dHB1dHM6IFsiZGVib3VuY2VkVmFsdWUiXSwKICBydW46ICh7IHZhbHVlLCBkZWxheU1zIH0sIG91dHB1dHMsIGFkdikgPT4gewogICAgY29uc3QgeyBkZWJvdW5jZWRWYWx1ZSB9ID0gb3V0cHV0czsKCiAgICBjb25zdCB0aW1lciA9IGFkdi5zdGF0ZS5nZXQoInRpbWVyIik7CiAgICBpZiAodGltZXIpIHsKICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTsKICAgIH0KCiAgICBjb25zdCBuZXdUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICBkZWJvdW5jZWRWYWx1ZS5uZXh0KHZhbHVlKTsKICAgIH0sIGRlbGF5TXMpOwoKICAgIGFkdi5zdGF0ZS5zZXQoInRpbWVyIiwgbmV3VGltZXIpOwoKICAgIGFkdi5vbkNsZWFudXAoKCkgPT4gewogICAgICBjbGVhclRpbWVvdXQodGltZXIpOwogICAgfSk7CiAgfSwKfTsK",
  "Delay": "aW1wb3J0IHsgVElNSU5HX05BTUVTUEFDRSwgdGltZVRvU3RyaW5nIH0gZnJvbSAiLi9jb21tb24iOwppbXBvcnQgeyBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9IFRJTUlOR19OQU1FU1BBQ0U7CgpleHBvcnQgY29uc3QgRGVsYXk6IENvZGVOb2RlID0gewogIGlkOiAiRGVsYXkiLAogIG1lbnVEaXNwbGF5TmFtZTogIkRlbGF5IiwKICBuYW1lc3BhY2UsCiAgaWNvbjogImNsb2NrIiwKICBtZW51RGVzY3JpcHRpb246CiAgICAiRGVsYXlzIGEgdmFsdWUgYnkgYSBnaXZlbiBhbW91bnQgb2YgdGltZS4gU3VwcG9ydHMgYm90aCBzdGF0aWMgYW5kIGR5bmFtaWMgZGVsYXlzLiIsCiAgZGVzY3JpcHRpb246IChjb25maWcpID0+IHsKICAgIGlmICh0eXBlb2YgY29uZmlnLmRlbGF5TXMgPT09ICJudW1iZXIiKSB7CiAgICAgIHJldHVybiBgRGVsYXlzIGEgdmFsdWUgYnkgJHt0aW1lVG9TdHJpbmcoY29uZmlnLmRlbGF5TXMpfS5gOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIGBEZWxheXMgYSB2YWx1ZSBieSAke2NvbmZpZy5kZWxheU1zfS5gOwogICAgfQogIH0sCiAgaW5wdXRzOiB7CiAgICB2YWx1ZTogewogICAgICBsYWJlbDogIlZhbHVlIiwKICAgICAgZGVzY3JpcHRpb246ICJWYWx1ZSB0byBkZWxheSIsCiAgICB9LAogICAgZGVsYXlNczogewogICAgICBkZWZhdWx0VmFsdWU6IDEwMDAsCiAgICAgIGxhYmVsOiAiRGVsYXkgKG1zKSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiRGVsYXkgaW4gbWlsbGlzZWNvbmRzIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICBkZWxheWVkVmFsdWU6IHsgZGVzY3JpcHRpb246ICJEZWxheWVkIHZhbHVlIiB9LAogIH0sCiAgY29tcGxldGlvbk91dHB1dHM6IFsiZGVsYXllZFZhbHVlIl0sCiAgcnVuOiBhc3luYyAoaW5wdXRzLCBvdXRwdXRzKSA9PiB7CiAgICBjb25zdCB7IGRlbGF5ZWRWYWx1ZSB9ID0gb3V0cHV0czsKICAgIGNvbnN0IHsgZGVsYXlNcyB9ID0gaW5wdXRzOwoKICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIGRlbGF5TXMpKTsKICAgIGRlbGF5ZWRWYWx1ZS5uZXh0KGlucHV0cy52YWx1ZSk7CiAgfSwKfTsK",
  "Delete Attribute": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJPYmplY3RzIjsKCmV4cG9ydCBjb25zdCBEZWxldGVBdHRyaWJ1dGU6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJEZWxldGUgQXR0cmlidXRlIiwKICBpY29uOiAiZmEtYm94IiwKICBuYW1lc3BhY2UsCiAgZGVzY3JpcHRpb246ICJEZWxldGVzIGFuIGF0dHJpYnV0ZSBmcm9tIGFuIG9iamVjdCIsCiAgaW5wdXRzOiB7CiAgICBvYmplY3Q6IHsgZGVzY3JpcHRpb246ICJPYmplY3QgdG8gZGVsZXRlIGF0dHJpYnV0ZSBmcm9tIiB9LAogICAgYXR0cmlidXRlOiB7IGRlc2NyaXB0aW9uOiAiQXR0cmlidXRlIHRvIGRlbGV0ZSIgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIG9iamVjdDogewogICAgICBkZXNjcmlwdGlvbjogIlRoZSBvYmplY3Qgd2l0aCB0aGUgYXR0cmlidXRlIGRlbGV0ZWQiLAogICAgfSwKICB9LAogIHJ1bjogKHsgb2JqZWN0LCBhdHRyaWJ1dGUgfSwgeyBvYmplY3Q6IG91dHB1dE9iamVjdCB9KSA9PiB7CiAgICAvLyBkZWxldGUgYXR0cmlidXRlIGZyb20gb2JqZWN0IHdoaWxlIHN1cHBvcnRpbmcgZG90IG5vdGF0aW9uCiAgICBjb25zdCBhdHRyaWJ1dGVzID0gYXR0cmlidXRlLnZhbHVlLnNwbGl0KCIuIik7CiAgICBjb25zdCBsYXN0ID0gYXR0cmlidXRlcy5wb3AoKTsKICAgIGNvbnN0IHRhcmdldCA9IGF0dHJpYnV0ZXMucmVkdWNlKChvYmosIGkpID0+IG9ialtpXSwgb2JqZWN0LnZhbHVlKTsKICAgIGRlbGV0ZSB0YXJnZXRbbGFzdF07CiAgICBvdXRwdXRPYmplY3QubmV4dChvYmplY3QudmFsdWUpOwogIH0sCn07Cg==",
  "Delete File": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0ICogYXMgZnMgZnJvbSAiZnMiOwoKZXhwb3J0IGNvbnN0IERlbGV0ZUZpbGU6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJEZWxldGUgRmlsZSIsCiAgaWNvbjogImZhLWZpbGUiLAogIG5hbWVzcGFjZTogIkZpbGUgU3lzdGVtIiwKICBkZXNjcmlwdGlvbjogIkRlbGV0ZXMgYSBmaWxlIGZyb20gdGhlIGZpbGUgc3lzdGVtIiwKICBpbnB1dHM6IHsgcGF0aDogeyBkZXNjcmlwdGlvbjogIlBhdGggdG8gdGhlIGZpbGUiIH0gfSwKICBvdXRwdXRzOiB7fSwKICBydW46IGFzeW5jICh7IHBhdGggfSkgPT4gewogICAgYXdhaXQgZnMucHJvbWlzZXMudW5saW5rKHBhdGgpOwogIH0sCn07Cg==",
  "DiscordMessage": "aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgY29uc3QgRGlzY29yZE1lc3NhZ2U6IENvZGVOb2RlID0gewogIGlkOiAiRGlzY29yZE1lc3NhZ2UiLAogIG1lbnVEaXNwbGF5TmFtZTogIkRpc2NvcmQiLAogIG5hbWVzcGFjZTogImludGVncmF0aW9ucyIsCiAgaWNvbjogYAo8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8c3ZnIHdpZHRoPSIyNHB4IiBoZWlnaHQ9IjI0cHgiIHZpZXdCb3g9IjAgLTI4LjUgMjU2IDI1NiIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+CiAgICA8Zz4KICAgICAgICA8cGF0aCBkPSJNMjE2Ljg1NjMzOSwxNi41OTY2MDMxIEMyMDAuMjg1MDAyLDguODQzMjg2NjUgMTgyLjU2NjE0NCwzLjIwODQ5ODggMTY0LjA0MTU2NCwwIEMxNjEuNzY2NTIzLDQuMTEzMTgxMDYgMTU5LjEwODYyNCw5LjY0NTQ5OTA4IDE1Ny4yNzYwOTksMTQuMDQ2NDM3OSBDMTM3LjU4Mzk5NSwxMS4wODQ5ODk2IDExOC4wNzI5NjcsMTEuMDg0OTg5NiA5OC43NDMwMTYzLDE0LjA0NjQzNzkgQzk2LjkxMDg0MTcsOS42NDU0OTkwOCA5NC4xOTI1ODM4LDQuMTEzMTgxMDYgOTEuODk3MTg5NSwwIEM3My4zNTI2MDY4LDMuMjA4NDk4OCA1NS42MTMzOTQ5LDguODYzOTkxMTcgMzkuMDQyMDU4MywxNi42Mzc2NjEyIEM1LjYxNzUyMjkzLDY3LjE0NjUxNCAtMy40NDMzMTkxLDExNi40MDA4MTMgMS4wODcxMTA2OSwxNjQuOTU1NzIxIEMyMy4yNTYwMTk2LDE4MS41MTA5MTUgNDQuNzQwMzYzNCwxOTEuNTY3Njk3IDY1Ljg2MjEzMjUsMTk4LjE0ODU3NiBDNzEuMDc3MjE1MSwxOTAuOTcxMTI2IDc1LjcyODM2MjgsMTgzLjM0MTMzNSA3OS43MzUyMTM5LDE3NS4zMDAyNjEgQzcyLjEwNDAxOSwxNzIuNDAwNTc1IDY0Ljc5NDk3MjQsMTY4LjgyMjIwMiA1Ny44ODg3ODY2LDE2NC42Njc5NjMgQzU5LjcyMDk2MTIsMTYzLjMxMDU4OSA2MS41MTMxMzA0LDE2MS44OTE0NTIgNjMuMjQ0NTg5OCwxNjAuNDMxMjU3IEMxMDUuMzY3NDEsMTgwLjEzMzE4NyAxNTEuMTM0OTI4LDE4MC4xMzMxODcgMTkyLjc1NDUyMywxNjAuNDMxMjU3IEMxOTQuNTA2MzM2LDE2MS44OTE0NTIgMTk2LjI5ODE1NCwxNjMuMzEwNTg5IDE5OC4xMTAzMjYsMTY0LjY2Nzk2MyBDMTkxLjE4Mzc4NywxNjguODQyNTU2IDE4My44NTQ3MzcsMTcyLjQyMDkyOSAxNzYuMjIzNTQyLDE3NS4zMjA5NjUgQzE4MC4yMzAzOTMsMTgzLjM0MTMzNSAxODQuODYxNTM4LDE5MC45OTE4MzEgMTkwLjA5NjYyNCwxOTguMTY4OTMgQzIxMS4yMzg3NDYsMTkxLjU4ODA1MSAyMzIuNzQzMDIzLDE4MS41MzE2MTkgMjU0LjkxMTk0OSwxNjQuOTU1NzIxIEMyNjAuMjI3NzQ3LDEwOC42NjgyMDEgMjQ1LjgzMTA4Nyw1OS44NjYyNDMyIDIxNi44NTYzMzksMTYuNTk2NjAzMSBaIE04NS40NzM4NzUyLDEzNS4wOTQ4OSBDNzIuODI5MDI4MSwxMzUuMDk0ODkgNjIuNDU5MjIxNywxMjMuMjkwMTU1IDYyLjQ1OTIyMTcsMTA4LjkxNDkwMSBDNjIuNDU5MjIxNyw5NC41Mzk2NDcyIDcyLjYwNzU5NSw4Mi43MTQ1NTg3IDg1LjQ3Mzg3NTIsODIuNzE0NTU4NyBDOTguMzQwNTA2NCw4Mi43MTQ1NTg3IDEwOC43MDk5NjIsOTQuNTE4OTQyNyAxMDguNDg4NTI5LDEwOC45MTQ5MDEgQzEwOC41MDg1MzEsMTIzLjI5MDE1NSA5OC4zNDA1MDY0LDEzNS4wOTQ4OSA4NS40NzM4NzUyLDEzNS4wOTQ4OSBaIE0xNzAuNTI1MjM3LDEzNS4wOTQ4OSBDMTU3Ljg4MDM5LDEzNS4wOTQ4OSAxNDcuNTEwNTg0LDEyMy4yOTAxNTUgMTQ3LjUxMDU4NCwxMDguOTE0OTAxIEMxNDcuNTEwNTg0LDk0LjUzOTY0NzIgMTU3LjY1ODYwNiw4Mi43MTQ1NTg3IDE3MC41MjUyMzcsODIuNzE0NTU4NyBDMTgzLjM5MTUxOCw4Mi43MTQ1NTg3IDE5My43NjEzMjQsOTQuNTE4OTQyNyAxOTMuNTM5ODkxLDEwOC45MTQ5MDEgQzE5My41Mzk4OTEsMTIzLjI5MDE1NSAxODMuMzkxNTE4LDEzNS4wOTQ4OSAxNzAuNTI1MjM3LDEzNS4wOTQ4OSBaIiBmaWxsPSJjdXJyZW50Q29sb3IiIGZpbGwtcnVsZT0ibm9uemVybyI+Cgo8L3BhdGg+CiAgICA8L2c+Cjwvc3ZnPmAsCiAgZGlzcGxheU5hbWU6ICJEaXNjb3JkIiwKICBkZXNjcmlwdGlvbjogIlNlbmRzIGEgbWVzc2FnZSB0byBhIERpc2NvcmQgd2ViaG9vayIsCiAgaW5wdXRzOiB7CiAgICB3ZWJob29rVXJsOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIiIsCiAgICAgIGVkaXRvclR5cGU6ICJzdHJpbmciLAogICAgICBkZXNjcmlwdGlvbjogIkRpc2NvcmQgd2ViaG9vayBVUkwiLAogICAgfSwKICAgIHVzZXJuYW1lOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIkZsb3djb2RlIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVXNlcm5hbWUgZm9yIHRoZSBtZXNzYWdlIiwKICAgIH0sCiAgICBjb250ZW50OiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIkhlbGxvIGZyb20gaHR0cHM6Ly93d3cuZ2V0Zmxvd2NvZGUuaW8iLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJDb250ZW50IG9mIHRoZSBtZXNzYWdlIiwKICAgIH0sCiAgICBhdmF0YXJVcmw6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQXZhdGFyIFVSTCBmb3IgdGhlIG1lc3NhZ2UiLAogICAgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIHJlc3VsdDogewogICAgICBkZXNjcmlwdGlvbjogIlRoZSBzZW50IG1lc3NhZ2UgY29udGVudCIsCiAgICB9LAogIH0sCiAgcnVuOiBhc3luYyAoaW5wdXRzLCBvdXRwdXRzKSA9PiB7CiAgICBjb25zdCB7IHdlYmhvb2tVcmwsIHVzZXJuYW1lLCBjb250ZW50LCBhdmF0YXJVcmwgfSA9IGlucHV0czsKCiAgICB0cnkgewogICAgICBhd2FpdCBheGlvcy5wb3N0KHdlYmhvb2tVcmwsIHsKICAgICAgICB1c2VybmFtZSwKICAgICAgICBjb250ZW50LAogICAgICAgIGF2YXRhcl91cmw6IGF2YXRhclVybCwKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKCJEaXNjb3JkIG1lc3NhZ2Ugc2VudCIpOwogICAgfSBjYXRjaCAoZSkgewogICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBzZW5kaW5nIGRpc2NvcmQgbWVzc2FnZSIsIGUpOwogICAgfQoKICAgIGNvbnNvbGUubG9nKCJlbWl0dGluZyByZXN1bHQiLCBjb250ZW50KTsKICAgIG91dHB1dHMucmVzdWx0Lm5leHQoY29udGVudCk7CiAgICBjb25zb2xlLmxvZygicmVzdWx0IGVtaXR0ZWQiKTsKICB9LAp9Owo=",
  "Entries": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJPYmplY3RzIjsKCmV4cG9ydCBjb25zdCBPYmplY3RFbnRyaWVzOiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiRW50cmllcyIsCiAgaWNvbjogImZhLWJveCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiRW1pdHMgdGhlIGVudHJpZXMgb2YgYW4gb2JqZWN0IiwKICBpbnB1dHM6IHsgb2JqZWN0OiB7IGRlc2NyaXB0aW9uOiAiT2JqZWN0IHRvIGdldCBlbnRyaWVzIG9mIiB9IH0sCiAgb3V0cHV0czogeyBlbnRyaWVzOiB7IGRlc2NyaXB0aW9uOiAiVGhlIGVudHJpZXMgb2Ygb2JqZWN0IiB9IH0sCiAgcnVuOiAoeyBvYmplY3QgfSwgeyBlbnRyaWVzIH0pID0+IGVudHJpZXMubmV4dChPYmplY3QuZW50cmllcyhvYmplY3QpKSwKfTsK",
  "Exists": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0ICogYXMgZnMgZnJvbSAiZnMiOwoKZXhwb3J0IGNvbnN0IEV4aXN0czogSW50ZXJuYWxDb2RlTm9kZSA9IHsKICBpZDogIkV4aXN0cyIsCiAgaWNvbjogImZhLWZpbGUiLAogIG5hbWVzcGFjZTogIkZpbGUgU3lzdGVtIiwKICBkZXNjcmlwdGlvbjogIkNoZWNrcyBpZiBhIGZpbGUgZXhpc3RzIiwKICBpbnB1dHM6IHsgcGF0aDogeyBkZXNjcmlwdGlvbjogIlBhdGggdG8gdGhlIGZpbGUiIH0gfSwKICBvdXRwdXRzOiB7IGV4aXN0czogeyBkZXNjcmlwdGlvbjogIldoZXRoZXIgdGhlIGZpbGUgZXhpc3RzIiB9IH0sCiAgcnVuOiBhc3luYyAoeyBwYXRoIH0sIHsgZXhpc3RzIH0pID0+IHsKICAgIHJldHVybiBleGlzdHMubmV4dChhd2FpdCBmcy5wcm9taXNlcy5hY2Nlc3MocGF0aCwgZnMuY29uc3RhbnRzLkZfT0spKTsKICB9LAp9Owo=",
  "Firecrawl": "aW1wb3J0IHsKICBDb2RlTm9kZSwKICBjcmVhdGVJbnB1dEdyb3VwLAp9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKCmV4cG9ydCBpbnRlcmZhY2UgRmlyZWNyYXdsRXJyb3JSZXNwb25zZSB7CiAgZXJyb3I6IHsKICAgIG1lc3NhZ2U6IHN0cmluZzsKICAgIGNvZGU/OiBzdHJpbmc7CiAgICBzdGF0dXM/OiBudW1iZXI7CiAgfTsKfQoKZXhwb3J0IGNvbnN0IEZpcmVjcmF3bDogQ29kZU5vZGUgPSB7CiAgaWQ6ICJGaXJlY3Jhd2wiLAogIG1lbnVEaXNwbGF5TmFtZTogIkZpcmVjcmF3bCIsCiAgbmFtZXNwYWNlOiAid2Vic2NyYXBpbmciLAogIGljb246IGBmaXJlYCwKICBkaXNwbGF5TmFtZTogIkZpcmVjcmF3bCB7e2FjdGlvbn19IiwKICBkZXNjcmlwdGlvbjogIlR1cm4gd2Vic2l0ZXMgaW50byBMTE0tcmVhZHkgZGF0YSIsCiAgaW5wdXRzOiB7CiAgICBhdXRoZW50aWNhdGlvbjogewogICAgICBncm91cDogY3JlYXRlSW5wdXRHcm91cCgiQXV0aGVudGljYXRpb24iLCBbImFwaUtleSJdLCB7CiAgICAgICAgY29sbGFwc2libGU6IHRydWUsCiAgICAgICAgZGVmYXVsdENvbGxhcHNlZDogdHJ1ZSwKICAgICAgfSksCiAgICB9LAogICAgYXBpS2V5OiB7CiAgICAgIGVkaXRvclR5cGU6ICJzZWNyZXQiLAogICAgICBlZGl0b3JUeXBlRGF0YTogewogICAgICAgIGRlZmF1bHROYW1lOiAiRklSRUNSQVdMX0FQSV9LRVkiLAogICAgICB9LAogICAgICBkZXNjcmlwdGlvbjogIkZpcmVjcmF3bCBBUEkgS2V5IiwKICAgIH0sCiAgICBhY3Rpb246IHsKICAgICAgZGVmYXVsdFZhbHVlOiAic2NyYXBlIiwKICAgICAgbGFiZWw6ICJBY3Rpb24iLAogICAgICB0eXBlQ29uZmlndXJhYmxlOiB0cnVlLAogICAgICBkZXNjcmlwdGlvbjogIkFjdGlvbiB0byBwZXJmb3JtIHdpdGggRmlyZWNyYXdsIiwKICAgICAgZWRpdG9yVHlwZTogInNlbGVjdCIsCiAgICAgIGVkaXRvclR5cGVEYXRhOiB7CiAgICAgICAgb3B0aW9uczogWwogICAgICAgICAgeyBsYWJlbDogIlNjcmFwZSBVUkwiLCB2YWx1ZTogInNjcmFwZSIgfSwKICAgICAgICAgIHsgbGFiZWw6ICJDcmF3bCBXZWJzaXRlIiwgdmFsdWU6ICJjcmF3bCIgfSwKICAgICAgICAgIHsgbGFiZWw6ICJFeHRyYWN0IFN0cnVjdHVyZWQgRGF0YSIsIHZhbHVlOiAiZXh0cmFjdEpzb24iIH0sCiAgICAgICAgXSwKICAgICAgfSwKICAgIH0sCiAgICB1cmw6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVVJMIHRvIHNjcmFwZSBvciBjcmF3bCIsCiAgICB9LAogICAgbWF4UGFnZXM6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAxMCwKICAgICAgZWRpdG9yVHlwZTogIm51bWJlciIsCiAgICAgIGRlc2NyaXB0aW9uOiAiTWF4aW11bSBudW1iZXIgb2YgcGFnZXMgdG8gY3Jhd2wiLAogICAgICBjb25kaXRpb246ICJhY3Rpb24gPT09ICdjcmF3bCciLAogICAgfSwKICAgIHdhaXQ6IHsKICAgICAgZGVmYXVsdFZhbHVlOiB0cnVlLAogICAgICBlZGl0b3JUeXBlOiAiYm9vbGVhbiIsCiAgICAgIGRlc2NyaXB0aW9uOiAiV2hldGhlciB0byB3YWl0IGZvciBKYXZhU2NyaXB0IHRvIGxvYWQiLAogICAgfSwKICAgIGV4dHJhY3Rpb25Qcm9tcHQ6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogImxvbmd0ZXh0IiwKICAgICAgZGVzY3JpcHRpb246ICJQcm9tcHQgZm9yIHN0cnVjdHVyZWQgZGF0YSBleHRyYWN0aW9uIiwKICAgICAgY29uZGl0aW9uOiAiYWN0aW9uID09PSAnZXh0cmFjdEpzb24nIiwKICAgIH0sCiAgICBhZGRpdGlvbmFsT3B0aW9uczogewogICAgICBncm91cDogY3JlYXRlSW5wdXRHcm91cCgKICAgICAgICAiQWRkaXRpb25hbCBPcHRpb25zIiwKICAgICAgICBbIndhaXQiLCAibWF4UGFnZXMiLCAiZXh0cmFjdGlvblByb21wdCJdLAogICAgICAgIHsKICAgICAgICAgIGNvbGxhcHNpYmxlOiB0cnVlLAogICAgICAgICAgZGVmYXVsdENvbGxhcHNlZDogdHJ1ZSwKICAgICAgICB9CiAgICAgICksCiAgICB9LAogIH0sCiAgb3V0cHV0czogewogICAgcmVzdWx0OiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiT3BlcmF0aW9uIHJlc3VsdCBkYXRhIiwKICAgIH0sCiAgfSwKICBydW46IGFzeW5jIChpbnB1dHMsIG91dHB1dHMsIGFkdikgPT4gewogICAgY29uc3QgeyBhcGlLZXksIGFjdGlvbiwgdXJsLCBtYXhQYWdlcywgd2FpdCwgZXh0cmFjdGlvblByb21wdCB9ID0gaW5wdXRzOwoKICAgIGlmICghYXBpS2V5KSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiRmlyZWNyYXdsIEFQSSBrZXkgaXMgcmVxdWlyZWQiKTsKICAgIH0KCiAgICBpZiAoIXVybCkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoIlVSTCBpcyByZXF1aXJlZCIpOwogICAgfQoKICAgIGNvbnN0IGhlYWRlcnMgPSB7CiAgICAgICJ4LWFwaS1rZXkiOiBhcGlLZXksCiAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICB9OwoKICAgIGNvbnN0IGJhc2VVcmwgPSAiaHR0cHM6Ly9hcGkuZmlyZWNyYXdsLmRldi92MSI7CgogICAgbGV0IGVuZHBvaW50ID0gIiI7CiAgICBjb25zdCBtZXRob2QgPSAiUE9TVCI7CiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueQogICAgY29uc3QgZGF0YTogYW55ID0geyB1cmwgfTsKCiAgICB0cnkgewogICAgICBzd2l0Y2ggKGFjdGlvbikgewogICAgICAgIGNhc2UgInNjcmFwZSI6CiAgICAgICAgICBlbmRwb2ludCA9ICIvc2NyYXBlIjsKICAgICAgICAgIGlmICh3YWl0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgZGF0YS53YWl0ID0gd2FpdDsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJjcmF3bCI6CiAgICAgICAgICBlbmRwb2ludCA9ICIvY3Jhd2wiOwogICAgICAgICAgaWYgKG1heFBhZ2VzKSB7CiAgICAgICAgICAgIGRhdGEubWF4UGFnZXMgPSBtYXhQYWdlczsKICAgICAgICAgIH0KICAgICAgICAgIGlmICh3YWl0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgZGF0YS53YWl0ID0gd2FpdDsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJleHRyYWN0SnNvbiI6CiAgICAgICAgICBlbmRwb2ludCA9ICIvZXh0cmFjdC1qc29uIjsKICAgICAgICAgIGlmIChleHRyYWN0aW9uUHJvbXB0KSB7CiAgICAgICAgICAgIGRhdGEucHJvbXB0ID0gZXh0cmFjdGlvblByb21wdDsKICAgICAgICAgIH0KICAgICAgICAgIGlmICh3YWl0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgZGF0YS53YWl0ID0gd2FpdDsKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBhY3Rpb246ICR7YWN0aW9ufWApOwogICAgICB9CgogICAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcyh7CiAgICAgICAgbWV0aG9kLAogICAgICAgIHVybDogYmFzZVVybCArIGVuZHBvaW50LAogICAgICAgIGhlYWRlcnMsCiAgICAgICAgZGF0YSwKICAgICAgfSk7CgogICAgICBvdXRwdXRzLnJlc3VsdC5uZXh0KHJlcy5kYXRhKTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIGlmIChheGlvcy5pc0F4aW9zRXJyb3IoZXJyb3IpICYmIGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gZXJyb3IucmVzcG9uc2UuZGF0YSBhcyBGaXJlY3Jhd2xFcnJvclJlc3BvbnNlOwogICAgICAgIGFkdi5vbkVycm9yKAogICAgICAgICAgYEZpcmVjcmF3bCBBUEkgRXJyb3IgJHtlcnJvci5yZXNwb25zZS5zdGF0dXN9OiAke2Vycm9yRGF0YS5lcnJvcj8ubWVzc2FnZSB8fCBlcnJvci5yZXNwb25zZS5zdGF0dXNUZXh0CiAgICAgICAgICB9YAogICAgICAgICk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGFkdi5vbkVycm9yKGBFcnJvcjogJHsoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2V9YCk7CiAgICB9CiAgfQp9OwoK",
  "Flatten": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgRmxhdHRlbjogSW50ZXJuYWxDb2RlTm9kZSA9IHsKICBpZDogIkZsYXR0ZW4iLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIkZsYXR0ZW5zIGEgbGlzdCBvZiBsaXN0cyBpbnRvIGEgc2luZ2xlIGxpc3QiLAogIGlucHV0czogeyBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIGxpc3Qgb2YgbGlzdHMiIH0gfSwKICBvdXRwdXRzOiB7IGxpc3Q6IHsgZGVzY3JpcHRpb246ICJUaGUgcmVzdWx0aW5nIGxpc3QiIH0gfSwKICBydW46ICh7IGxpc3QgfSwgeyBsaXN0OiBvdXRwdXRMaXN0IH0pID0+IHsKICAgIG91dHB1dExpc3QubmV4dChsaXN0LnJlZHVjZSgoYWNjLCBpdGVtKSA9PiBbLi4uYWNjLCAuLi5pdGVtXSwgW10pKTsKICB9LAogIGljb246ICJmYS1jb21wcmVzcyIsCn07Cg==",
  "Get List Element": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgR2V0TGlzdEVsZW1lbnQ6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJHZXQgTGlzdCBFbGVtZW50IiwKICBpY29uOiAiZmEtbGlzdCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiUmV0dXJucyB0aGUgZWxlbWVudCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4IiwKICBpbnB1dHM6IHsKICAgIGxpc3Q6IHsgZGVzY3JpcHRpb246ICJMaXN0IiB9LAogICAgaW5kZXg6IHsgZGVzY3JpcHRpb246ICJJbmRleCIgfSwKICB9LAogIG91dHB1dHM6IHsgZWxlbWVudDogeyBkZXNjcmlwdGlvbjogIkVsZW1lbnQiIH0gfSwKICBydW46ICh7IGxpc3QsIGluZGV4IH0sIHsgZWxlbWVudCB9KSA9PiBlbGVtZW50Lm5leHQobGlzdFtpbmRleF0pLAp9Owo=",
  "Get State": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJTdGF0ZSI7CgpleHBvcnQgY29uc3QgR2V0R2xvYmFsU3RhdGU6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJHZXQgU3RhdGUiLAogIGljb246ICJmYS1leWUiLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIkdldHMgYSB2YWx1ZSBmcm9tIHRoZSBnbG9iYWwgc3RhdGUiLAogIGlucHV0czogewogICAga2V5OiB7IGRlc2NyaXB0aW9uOiAiS2V5IHRvIGdldCIgfSwKICAgIGRlZmF1bHRWYWx1ZTogewogICAgICBkZXNjcmlwdGlvbjogIkRlZmF1bHQgdmFsdWUgaWYga2V5IGlzIG5vdCBzZXQiLAogICAgICBtb2RlOiAicmVxdWlyZWQtaWYtY29ubmVjdGVkIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICB2YWx1ZTogeyBkZXNjcmlwdGlvbjogIlZhbHVlIG9mIHRoZSBrZXkiIH0sCiAgfSwKICBydW46ICh7IGtleSwgZGVmYXVsdFZhbHVlIH0sIHsgdmFsdWUgfSwgeyBnbG9iYWxTdGF0ZSwgb25FcnJvciB9KSA9PiB7CiAgICBjb25zdCB2YWwgPSBnbG9iYWxTdGF0ZS5nZXQoa2V5KTsKICAgIGlmICh2YWwgPT09IHVuZGVmaW5lZCAmJiBkZWZhdWx0VmFsdWUgPT09IHVuZGVmaW5lZCkgewogICAgICBvbkVycm9yKG5ldyBFcnJvcihgS2V5ICR7a2V5fSBpcyBub3Qgc2V0YCkpOwogICAgfSBlbHNlIHsKICAgICAgdmFsdWUubmV4dChnbG9iYWxTdGF0ZS5nZXQoa2V5KSA/PyBkZWZhdWx0VmFsdWUpOwogICAgfQogIH0sCn07Cg==",
  "GetAttribute": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgY29uc3QgR2V0QXR0cmlidXRlOiBDb2RlTm9kZSA9IHsKICBpZDogIkdldEF0dHJpYnV0ZSIsCiAgbmFtZXNwYWNlOiAiT2JqZWN0cyIsCiAgbWVudURpc3BsYXlOYW1lOiAiR2V0IFByb3BlcnR5IiwKICBtZW51RGVzY3JpcHRpb246ICJVc2VkIHRvIHJldHJpZXZlIGEgcHJvcGVydHkgZnJvbSBhbiBvYmplY3QuIiwKICBkaXNwbGF5TmFtZTogJ0dldCAie3trZXl9fSInLAogIGRlc2NyaXB0aW9uOiAiUmV0cmlldmVzIGEgcHJvcGVydHkgZnJvbSBhbiBvYmplY3QiLAogIGljb246ICJmYS1tYWduaWZ5aW5nLWdsYXNzIiwKICBpbnB1dHM6IHsKICAgIG9iamVjdDogewogICAgICBkZXNjcmlwdGlvbjogIk9iamVjdCB0byBnZXQgYXR0cmlidXRlIGZyb20iLAogICAgfSwKICAgIGtleTogewogICAgICBsYWJlbDogIktleSBvZiB0aGUgYXR0cmlidXRlIHRvIHJldHJpZXZlIiwKICAgICAgZGVmYXVsdFZhbHVlOiAic29tZVByb3BlcnR5IiwKICAgICAgZGVzY3JpcHRpb246ICJTdXBwb3J0cyBuZXN0ZWQgcHJvcGVydGllcyB3aXRoIGRvdCBub3RhdGlvbiIsCiAgICAgIGVkaXRvclR5cGU6ICJzdHJpbmciLAogICAgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIHZhbHVlIG9mIHRoZSBhdHRyaWJ1dGUiLAogICAgfSwKICB9LAogIHJ1bjogKGlucHV0cywgb3V0cHV0cykgPT4gewogICAgY29uc3QgeyBrZXksIG9iamVjdCB9ID0gaW5wdXRzOwogICAgb3V0cHV0cy52YWx1ZS5uZXh0KGtleS5zcGxpdCgiLiIpLnJlZHVjZSgob2JqLCBpKSA9PiBvYmpbaV0sIG9iamVjdCkpOwogIH0sCn07Cg==",
  "GoogleSheets": "",
  "Head and rest": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgSGVhZEFuZFJlc3Q6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJIZWFkIGFuZCByZXN0IiwKICBpY29uOiAiZmEtbGlzdCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOgogICAgIlJlY2VpdmVzIGEgbGlzdCBhbmQgZW1pdHMgdHdvIG91dHB1dHM6IHRoZSBmaXJzdCBpdGVtIGFuZCB0aGUgcmVzdCBvZiB0aGUgbGlzdCIsCiAgaW5wdXRzOiB7CiAgICBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIGxpc3QiIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICBoZWFkOiB7IGRlc2NyaXB0aW9uOiAiVGhlIGZpcnN0IGl0ZW0gaW4gdGhlIGxpc3QiIH0sCiAgICByZXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIHJlc3Qgb2YgdGhlIGxpc3QiIH0sCiAgfSwKICBydW46IChpbnB1dHMsIG91dHB1dHMpID0+IHsKICAgIGNvbnN0IHsgbGlzdCB9ID0gaW5wdXRzOwogICAgY29uc3QgeyBoZWFkLCByZXN0IH0gPSBvdXRwdXRzOwogICAgaGVhZC5uZXh0KGxpc3RbMF0pOwogICAgcmVzdC5uZXh0KGxpc3Quc2xpY2UoMSkpOwogIH0sCn07Cg==",
  "Http": "aW1wb3J0IGF4aW9zLCB7IEF4aW9zUmVxdWVzdENvbmZpZyB9IGZyb20gImF4aW9zIjsKaW1wb3J0IHsgQ29kZU5vZGUsIGNyZWF0ZUlucHV0R3JvdXAgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBuYW1lc3BhY2UgPSAiSFRUUCI7CgpleHBvcnQgY29uc3QgSHR0cDogQ29kZU5vZGUgPSB7CiAgaWQ6ICJIdHRwIiwKICBtZW51RGlzcGxheU5hbWU6ICJIVFRQIFJlcXVlc3QiLAogIG5hbWVzcGFjZSwKICBpY29uOiAiZ2xvYmUiLAogIGRpc3BsYXlOYW1lOiAiSFRUUCB7e21ldGhvZH19IHRvIHt7dXJsfX0iLAogIGRlc2NyaXB0aW9uOiAiU2VuZHMgYW4gSFRUUCByZXF1ZXN0IiwKICBhbGlhc2VzOiBbIkh0dHAiLCAiZ2V0IiwgInBvc3QiLCAicHV0IiwgImRlbGV0ZSIsICJwYXRjaCJdLAogIGlucHV0czogewogICAgbWV0aG9kOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIkdFVCIsCiAgICAgIGxhYmVsOiAiTWV0aG9kIiwKICAgICAgdHlwZUNvbmZpZ3VyYWJsZTogZmFsc2UsCiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIEhUVFAgbWV0aG9kIHRvIHVzZSIsCiAgICAgIGVkaXRvclR5cGU6ICJzZWxlY3QiLAogICAgICBlZGl0b3JUeXBlRGF0YTogewogICAgICAgIG9wdGlvbnM6IFsiR0VUIiwgIlBPU1QiLCAiUFVUIiwgIkRFTEVURSIsICJQQVRDSCJdLAogICAgICB9CiAgICB9LAogICAgdXJsOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogImh0dHBzOi8vd3d3LmV4YW1wbGUuY29tIiwKICAgICAgbGFiZWw6ICJVUkwiLAogICAgICBkZXNjcmlwdGlvbjogIlRoZSBVUkwgdG8gc2VuZCB0aGUgcmVxdWVzdCB0byIsCiAgICAgIGVkaXRvclR5cGU6ICJzdHJpbmciLAogICAgfSwKICAgIGRhdGE6IHsKICAgICAgZGVmYXVsdFZhbHVlOiB7fSwKICAgICAgbGFiZWw6ICJSZXF1ZXN0IEJvZHkiLAogICAgICBkZXNjcmlwdGlvbjogIlRoZSByZXF1ZXN0IGJvZHkgZGF0YSIsCiAgICAgIGVkaXRvclR5cGU6ICJqc29uIiwKICAgICAgY29uZGl0aW9uOiAibWV0aG9kICE9PSAnR0VUJyIsCiAgICAgIGFpQ29tcGxldGlvbjogewogICAgICAgIHByb21wdDogYFlvdSBhcmUgYW4gZXhwZXJ0IEhUVFAgcmVxdWVzdCBib2R5IGdlbmVyYXRvci4gVGhlIHVzZXIgd2lsbCBwcm92aWRlIGEgZGVzY3JpcHRpb24gb2YgdGhlIHJlcXVlc3QgYm9keSB0aGV5IHdhbnQgdG8gc2VuZCBhbmQgeW91IHNob3VsZCBjcmVhdGUgYSB2YWxpZCBKU09OIG9iamVjdCB0aGF0IG1hdGNoZXMgdGhlIGRlc2NyaXB0aW9uLgogICAgICAgIFlvdSBjYW4gZXhwb3NlIGR5bmFtaWMgdmFyaWFibGVzIHVzaW5nIHRoZSB7e3N5bnRheH19LCBmb3IgZXhhbXBsZSB7Im5hbWUiOiB7e25hbWV9fX0gd2lsbCBleHBvc2UgdGhlICJuYW1lIiBhcyBhIGR5bmFtaWMgaW5wdXQuCiAgICAgICAgVXNlcidzIHByb21wdDoKICAgICAgICB7e3Byb21wdH19CgogICAgICAgIEV4aXN0aW5nIHZhbHVlOgogICAgICAgIHt7dmFsdWV9fQogICAgICAKICAgICAgICBgLAogICAgICAgIGpzb25Nb2RlOiB0cnVlCiAgICAgIH0KICAgIH0sCgogICAgLy8gQWR2YW5jZWQgc2V0dGluZ3MgKGNvbGxhcHNpYmxlKQogICAgcGFyYW1zOiB7CiAgICAgIGRlZmF1bHRWYWx1ZToge30sCiAgICAgIGxhYmVsOiAiUXVlcnkgUGFyYW1ldGVycyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIHF1ZXJ5IHBhcmFtZXRlcnMgdG8gc2VuZCB3aXRoIHRoZSByZXF1ZXN0IiwKICAgICAgZWRpdG9yVHlwZTogImpzb24iLAogICAgfSwKICAgIGhlYWRlcnM6IHsKICAgICAgZGVmYXVsdFZhbHVlOiB7fSwKICAgICAgbGFiZWw6ICJIZWFkZXJzIiwKICAgICAgZGVzY3JpcHRpb246ICJUaGUgaGVhZGVycyB0byBzZW5kIHdpdGggdGhlIHJlcXVlc3QiLAogICAgICBlZGl0b3JUeXBlOiAianNvbiIsCiAgICAgIGFpQ29tcGxldGlvbjogewogICAgICAgIHByb21wdDogYFlvdSBhcmUgYW4gZXhwZXJ0IEhUVFAgcmVxdWVzdCBoZWFkZXJzIGdlbmVyYXRvci4gVGhlIHVzZXIgd2lsbCBwcm92aWRlIGEgZGVzY3JpcHRpb24gb2YgdGhlIHJlcXVlc3QgaGVhZGVycyB0aGV5IHdhbnQgdG8gc2VuZCBhbmQgeW91IHNob3VsZCBjcmVhdGUgYSB2YWxpZCBKU09OIG9iamVjdCB0aGF0IG1hdGNoZXMgdGhlIGRlc2NyaXB0aW9uLgogICAgICAgIFlvdSBjYW4gZXhwb3NlIGR5bmFtaWMgdmFyaWFibGVzIHVzaW5nIHRoZSB7e3N5bnRheH19LCBmb3IgZXhhbXBsZSB7IlgtVG9rZW4iOiB7e3Rva2VufX19IHdpbGwgZXhwb3NlIHRoZSAidG9rZW4iIGFzIGEgZHluYW1pYyBpbnB1dC4KICAgICAgICBVc2VyJ3MgcHJvbXB0OgogICAgICAgIHt7cHJvbXB0fX0KCiAgICAgICAgRXhpc3RpbmcgdmFsdWU6CiAgICAgICAge3t2YWx1ZX19CgogICAgICAgIHByZWZlciBsb3dlclBhc2NhbENhc2UgZm9yIGlucHV0IG5hbWVzCiAgICAgIAogICAgICAgIGAsCiAgICAgICAganNvbk1vZGU6IHRydWUKICAgICAgfQogICAgfSwKICAgIGFkdmFuY2VkU2V0dGluZ3M6IHsKICAgICAgZ3JvdXA6IGNyZWF0ZUlucHV0R3JvdXAoIkFkdmFuY2VkIFNldHRpbmdzIiwgWyJwYXJhbXMiLCAiaGVhZGVycyJdLCB7CiAgICAgICAgY29sbGFwc2libGU6IHRydWUsCiAgICAgICAgZGVmYXVsdENvbGxhcHNlZDogdHJ1ZSwKICAgICAgfSksCiAgICB9LAogIH0sCiAgb3V0cHV0czogewogICAgZGF0YTogewogICAgICBkZXNjcmlwdGlvbjogIkVtaXRzIHRoZSByZXNwb25zZSBkYXRhIiwKICAgIH0sCiAgfSwKICBydW46IChpbnB1dHMsIG91dHB1dHMsIGFkdikgPT4gewogICAgY29uc3QgeyBtZXRob2QsIHVybCwgaGVhZGVycywgcGFyYW1zLCBkYXRhIH0gPSBpbnB1dHM7CgogICAgY29uc3QgcmVxdWVzdENvbmZpZzogQXhpb3NSZXF1ZXN0Q29uZmlnID0gewogICAgICB1cmwsCiAgICAgIG1ldGhvZCwKICAgICAgaGVhZGVycywKICAgICAgcGFyYW1zLAogICAgfTsKCiAgICBpZiAobWV0aG9kICE9PSAiR0VUIikgewogICAgICByZXF1ZXN0Q29uZmlnLmRhdGEgPSBkYXRhOwogICAgfQogICAgcmV0dXJuIGF4aW9zCiAgICAgIC5yZXF1ZXN0KHJlcXVlc3RDb25maWcpCiAgICAgIC50aGVuKChyZXMpID0+IG91dHB1dHMuZGF0YS5uZXh0KHJlcy5kYXRhKSkKICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgaWYgKGUucmVzcG9uc2UpIHsKICAgICAgICAgIGFkdi5vbkVycm9yKAogICAgICAgICAgICBgSFRUUCBFcnJvciAke2UucmVzcG9uc2Uuc3RhdHVzfTogJHtlLnJlc3BvbnNlLnN0YXR1c1RleHR9YAogICAgICAgICAgKTsKICAgICAgICB9IGVsc2UgaWYgKGUucmVxdWVzdCkgewogICAgICAgICAgYWR2Lm9uRXJyb3IoIk5vIHJlc3BvbnNlIHJlY2VpdmVkIGZyb20gdGhlIHNlcnZlciIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhZHYub25FcnJvcihgRXJyb3I6ICR7ZS5tZXNzYWdlfWApOwogICAgICAgIH0KICAgICAgfSk7CiAgfSwKfTsK",
  "InlineValue": "aW1wb3J0IHsKICBjb25maWd1cmFibGVWYWx1ZSwKICBDb25maWd1cmFibGVWYWx1ZSwKICBDb2RlTm9kZSwKICBleHRyYWN0SW5wdXRzRnJvbVZhbHVlLAogIHJlcGxhY2VJbnB1dHNJblZhbHVlLAp9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmV4cG9ydCBpbnRlcmZhY2UgSW5saW5lVmFsdWVDb25maWcgewogIHZhbHVlOiBDb25maWd1cmFibGVWYWx1ZTsKfQoKZXhwb3J0IGNvbnN0IElubGluZVZhbHVlOiBDb2RlTm9kZTxJbmxpbmVWYWx1ZUNvbmZpZz4gPSB7CiAgaWQ6ICJJbmxpbmVWYWx1ZSIsCiAgbW9kZTogImFkdmFuY2VkIiwKICBkZWZhdWx0Q29uZmlnOiB7CiAgICB2YWx1ZTogY29uZmlndXJhYmxlVmFsdWUoInN0cmluZyIsICJIZWxsbywge3tuYW1lfX0iKSwKICB9LAogIGlucHV0czogKGNvbmZpZykgPT4gZXh0cmFjdElucHV0c0Zyb21WYWx1ZShjb25maWcudmFsdWUsICJ2YWx1ZSIpLAogIG91dHB1dHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiRW1pdHMgdGhlIHZhbHVlIGNvbmZpZ3VyZWQiLAogICAgfSwKICB9LAogIG1lbnVEaXNwbGF5TmFtZTogIklubGluZSBWYWx1ZSIsCiAgbWVudURlc2NyaXB0aW9uOgogICAgIkVtaXRzIGEgdmFsdWUgZWFjaCB0aW1lIGl0J3MgY2FsbGVkLiBTdXBwb3J0cyBkeW5hbWljIHZhcmlhYmxlcyIsCiAgaWNvbjogInBlbmNpbCIsCiAgZGlzcGxheU5hbWU6IChjb25maWcpID0+IEpTT04uc3RyaW5naWZ5KGNvbmZpZy52YWx1ZS52YWx1ZSksCiAgZGVzY3JpcHRpb246IChjb25maWcpID0+CiAgICBgRW1pdHMgdGhlIHZhbHVlIFxgJHtKU09OLnN0cmluZ2lmeShjb25maWcudmFsdWUudmFsdWUpfVxgYCwKICBydW46IChpbnB1dHMsIG91dHB1dHMsIGN0eCkgPT4gewogICAgY29uc3QgdmFsdWUgPSByZXBsYWNlSW5wdXRzSW5WYWx1ZSgKICAgICAgaW5wdXRzLAogICAgICBjdHguY29udGV4dC5jb25maWcudmFsdWUsCiAgICAgICJ2YWx1ZSIKICAgICk7CiAgICBvdXRwdXRzLnZhbHVlLm5leHQodmFsdWUpOwogIH0sCiAgZWRpdG9yQ29uZmlnOiB7CiAgICB0eXBlOiAic3RydWN0dXJlZCIsCiAgICBmaWVsZHM6IFsKICAgICAgewogICAgICAgIHR5cGU6ICJsb25ndGV4dCIsCiAgICAgICAgbGFiZWw6ICJWYWx1ZSIsCiAgICAgICAgY29uZmlnS2V5OiAidmFsdWUiLAogICAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIHZhbHVlIHRvIGVtaXQuIFN1cHBvcnRzIGR5bmFtaWMgdmFyaWFibGVzIHVzaW5nIHt7c3ludGF4fX0iLAogICAgICAgIGFpQ29tcGxldGlvbjogewogICAgICAgICAgcHJvbXB0OiBgWW91IGFyZSBhbiBleHBlcnQgYXQgZ2VuZXJhdGluZyB2YWx1ZXMgd2l0aCB2YXJpYWJsZXMuIFRoZSB1c2VyIHdpbGwgcHJvdmlkZSBhIGRlc2NyaXB0aW9uIG9mIHRoZSB2YWx1ZSB0aGV5IHdhbnQgdG8gdXNlLCBhbmQgeW91IHNob3VsZCBjcmVhdGUgYSB2YWxpZCByZXByZXNlbnRhdGlvbiB3aXRoIGFwcHJvcHJpYXRlIGR5bmFtaWMgdmFyaWFibGVzLgpZb3UgY2FuIGV4cG9zZSBkeW5hbWljIHZhcmlhYmxlcyB1c2luZyB0aGUge3tzeW50YXh9fSwgZm9yIGV4YW1wbGUgIkhlbGxvLCB7e25hbWV9fSIgd2lsbCBleHBvc2UgdGhlICJuYW1lIiBhcyBhIGR5bmFtaWMgaW5wdXQuCk9ubHkgZXhwb3NlIHZhcmlhYmxlcyBpZiBuZWVkZWQsIG90aGVyd2lzZSBhdm9pZCB0aGVtLgoKIyMgUHJldmlvdXMgdmFsdWU6Cnt7dmFsdWV9fQoKIyMgVXNlciByZXF1ZXN0Ogp7e3Byb21wdH19CgpQcmVmZXIgY2FtZWxDYXNlIGZvciB2YXJpYWJsZSBuYW1lcy4gUmV0dXJuIG9ubHkgdGhlIGdlbmVyYXRlZCB2YWx1ZSB3aXRoIG5vIGNvZGUgZm9ybWF0dGluZyBvciBiYWNrdGlja3MuYCwKICAgICAgICAgIHBsYWNlaG9sZGVyOiAiRGVzY3JpYmUgdGhlIHZhbHVlIHlvdSB3YW50IHRvIGdlbmVyYXRlIgogICAgICAgIH0KICAgICAgfQogICAgXQogIH0sCn07Cg==",
  "Interval": "aW1wb3J0IHsgVElNSU5HX05BTUVTUEFDRSB9IGZyb20gIi4vY29tbW9uIjsKaW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBuYW1lc3BhY2UgPSBUSU1JTkdfTkFNRVNQQUNFOwoKZXhwb3J0IGNvbnN0IEludGVydmFsOiBDb2RlTm9kZSA9IHsKICBpZDogIkludGVydmFsIiwKICBuYW1lc3BhY2UsCiAgbWVudURpc3BsYXlOYW1lOiAiSW50ZXJ2YWwiLAogIGljb246ICJzdG9wd2F0Y2giLAogIG1lbnVEZXNjcmlwdGlvbjogIkVtaXRzIGEgdmFsdWUgZXZlcnkgaW50ZXJ2YWwiLAogIGRlc2NyaXB0aW9uOiAiRW1pdHMgYSB2YWx1ZSBldmVyeSBpbnRlcnZhbCIsCiAgZGlzcGxheU5hbWU6ICJFbWl0cyB7e3ZhbHVlfX0gZXZlcnkge3t0aW1lfX1tcyIsCiAgaW5wdXRzOiB7CiAgICB2YWx1ZTogewogICAgICBkZXNjcmlwdGlvbjogIlZhbHVlIHRvIGVtaXQgKHN1cHBvcnRzIHRlbXBsYXRlcykiLAogICAgICBlZGl0b3JUeXBlOiAianNvbiIsCiAgICB9LAogICAgdGltZTogewogICAgICBkZWZhdWx0VmFsdWU6IDEwMDAsCiAgICAgIGRlc2NyaXB0aW9uOiAiSW50ZXJ2YWwiLAogICAgICBlZGl0b3JUeXBlOiAibnVtYmVyIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICB2YWx1ZTogeyBkZXNjcmlwdGlvbjogIkVtaXR0ZWQgdmFsdWUiIH0sCiAgfSwKICBjb21wbGV0aW9uT3V0cHV0czogW10sCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgdGltZSwgdmFsdWUgfSA9IGlucHV0czsKCiAgICBjb25zdCBleGlzdGluZ1RpbWVyID0gYWR2LnN0YXRlLmdldCgidGltZXIiKTsKICAgIGlmIChleGlzdGluZ1RpbWVyKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwoZXhpc3RpbmdUaW1lcik7CiAgICB9CgogICAgY29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgIG91dHB1dHMudmFsdWUubmV4dCh2YWx1ZSk7CiAgICB9LCB0aW1lKTsKCiAgICBhZHYuc3RhdGUuc2V0KCJ0aW1lciIsIHRpbWVyKTsKCiAgICBhZHYub25DbGVhbnVwKCgpID0+IHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7CiAgICB9KTsKICB9LAp9Owo=",
  "JSON Parse": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJPYmplY3RzIjsKCmV4cG9ydCBjb25zdCBKU09OUGFyc2U6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJKU09OIFBhcnNlIiwKICBpY29uOiAiZmEtZ2xhc3NlcyIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiUGFyc2VzIGEgSlNPTiBzdHJpbmcgaW50byBhbiBvYmplY3QiLAogIGlucHV0czogeyBqc29uOiB7IGRlc2NyaXB0aW9uOiAiSlNPTiBzdHJpbmcgdG8gcGFyc2UiIH0gfSwKICBvdXRwdXRzOiB7IG9iamVjdDogeyBkZXNjcmlwdGlvbjogIlRoZSBwYXJzZWQgb2JqZWN0IiB9IH0sCiAgcnVuOiAoeyBqc29uIH0sIHsgb2JqZWN0IH0pID0+IG9iamVjdC5uZXh0KEpTT04ucGFyc2UoanNvbikpLAp9Owo=",
  "JSON Stringify": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJPYmplY3RzIjsKCmV4cG9ydCBjb25zdCBKU09OU3RyaW5naWZ5OiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiSlNPTiBTdHJpbmdpZnkiLAogIGljb246ICJmYS1wZW4tZmFuY3kiLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIlN0cmluZ2lmaWVzIGFuIG9iamVjdCBpbnRvIGEgSlNPTiBzdHJpbmciLAogIGlucHV0czogeyBvYmplY3Q6IHsgZGVzY3JpcHRpb246ICJPYmplY3QgdG8gc3RyaW5naWZ5IiB9IH0sCiAgb3V0cHV0czogeyBqc29uOiB7IGRlc2NyaXB0aW9uOiAiVGhlIHN0cmluZ2lmaWVkIEpTT04iIH0gfSwKICBydW46ICh7IG9iamVjdCB9LCB7IGpzb24gfSkgPT4ganNvbi5uZXh0KEpTT04uc3RyaW5naWZ5KG9iamVjdCwgbnVsbCwgIlx0IikpLAp9Owo=",
  "Keys": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJPYmplY3RzIjsKCmV4cG9ydCBjb25zdCBPYmplY3RLZXlzOiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiS2V5cyIsCiAgaWNvbjogImZhLWtleSIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiRW1pdHMgdGhlIGtleXMgb2YgYW4gb2JqZWN0IiwKICBpbnB1dHM6IHsgb2JqZWN0OiB7IGRlc2NyaXB0aW9uOiAiT2JqZWN0IHRvIGdldCBrZXlzIG9mIiB9IH0sCiAgb3V0cHV0czogeyBrZXlzOiB7IGRlc2NyaXB0aW9uOiAiVGhlIGtleXMgb2Ygb2JqZWN0IiB9IH0sCiAgcnVuOiAoeyBvYmplY3QgfSwgeyBrZXlzIH0pID0+IGtleXMubmV4dChPYmplY3Qua2V5cyhvYmplY3QpKSwKfTsK",
  "LLMCondition": "aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBuYW1lc3BhY2UgPSAiYWkiOwoKZXhwb3J0IGNvbnN0IExMTUNvbmRpdGlvbjogQ29kZU5vZGUgPSB7CiAgaWQ6ICJMTE1Db25kaXRpb24iLAogIG1lbnVEaXNwbGF5TmFtZTogIkxMTSBDb25kaXRpb24iLAogIG5hbWVzcGFjZSwKICBpY29uOiAiYnJhaW4iLAogIGRpc3BsYXlOYW1lOiAiTExNIENvbmRpdGlvbiIsCiAgZGVzY3JpcHRpb246CiAgICAiRXZhbHVhdGVzIGEgY29uZGl0aW9uIHVzaW5nIGFuIExMTSBhbmQgZW1pdHMgdGhlIHZhbHVlIHRvIHRydWUvZmFsc2Ugb3V0cHV0cyIsCiAgaW5wdXRzOiB7CiAgICBhcGlLZXk6IHsKICAgICAgZWRpdG9yVHlwZTogInNlY3JldCIsCiAgICAgIGVkaXRvclR5cGVEYXRhOiB7CiAgICAgICAgZGVmYXVsdE5hbWU6ICJPUEVOQUlfQVBJX0tFWSIsCiAgICAgIH0sCiAgICAgIGRlc2NyaXB0aW9uOiAiT3BlbkFJIEFQSSBLZXkiLAogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogImdwdC00LXR1cmJvLXByZXZpZXciLAogICAgICBkZXNjcmlwdGlvbjogIlRoZSBtb2RlbCB0byB1c2UgZm9yIGV2YWx1YXRpb24iLAogICAgICBlZGl0b3JUeXBlOiAic2VsZWN0IiwKICAgICAgZWRpdG9yVHlwZURhdGE6IHsKICAgICAgICBvcHRpb25zOiBbImdwdC00byIsICJncHQtNCIsICJncHQtMy41Il0sCiAgICAgIH0sCiAgICB9LAogICAgcHJvbXB0OiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIklzIGl0IGEgcG9zaXRpdmUgbnVtYmVyPyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVGhlIGNvbmRpdGlvbiB0byBldmFsdWF0ZSIsCiAgICAgIGVkaXRvclR5cGU6ICJsb25ndGV4dCIsCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAie3t2YWx1ZX19IiwKICAgICAgZGVzY3JpcHRpb246ICJUaGUgdmFsdWUgdG8gY2hlY2sgYWdhaW5zdCB0aGUgY29uZGl0aW9uIiwKICAgICAgZWRpdG9yVHlwZTogImpzb24iLAogICAgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIHRydWU6IHsKICAgICAgZGVzY3JpcHRpb246ICJFbWl0cyB0aGUgdmFsdWUgd2hlbiBjb25kaXRpb24gaXMgdHJ1ZSIsCiAgICB9LAogICAgZmFsc2U6IHsKICAgICAgZGVzY3JpcHRpb246ICJFbWl0cyB0aGUgdmFsdWUgd2hlbiBjb25kaXRpb24gaXMgZmFsc2UiLAogICAgfSwKICB9LAogIHJ1bjogYXN5bmMgKGlucHV0cywgb3V0cHV0cywgYWR2KSA9PiB7CiAgICBjb25zdCB7IGFwaUtleSwgbW9kZWwsIHByb21wdCwgdmFsdWUgfSA9IGlucHV0czsKCiAgICBjb25zdCBkYXRhID0gewogICAgICBtb2RlbCwKICAgICAgbWVzc2FnZXM6IFsKICAgICAgICB7CiAgICAgICAgICByb2xlOiAic3lzdGVtIiwKICAgICAgICAgIGNvbnRlbnQ6IGBZb3UgYXJlIGEgY29uZGl0aW9uIGV2YWx1YXRvci4gWW91IG11c3QgcmVzcG9uZCB3aXRoIGV4YWN0bHkgJ3RydWUnIG9yICdmYWxzZScuIFlvdSBzaG91bGQgZXZhbHVhdGUgdGhlIGZvbGxvd2luZyBjb25kaXRpb24gb24gZWFjaCB1c2VyIHJlcGx5IGFuZCByZXBseSB3aXRoIGVpdGhlciAndHJ1ZScgb3IgJ2ZhbHNlJywgbm90aGluZyBlbHNlLiBOZXZlci4KICAgICAgICAgICAgQ09ORElUSU9OOiAke3Byb21wdH0KICAgICAgICAgICAgYCwKICAgICAgICB9LAogICAgICAgIHsgcm9sZTogInVzZXIiLCBjb250ZW50OiB2YWx1ZSB9LAogICAgICBdLAogICAgICB0ZW1wZXJhdHVyZTogMCwKICAgIH07CgogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucG9zdCgKICAgICAgICAiaHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MS9jaGF0L2NvbXBsZXRpb25zIiwKICAgICAgICBkYXRhLAogICAgICAgIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FwaUtleX1gLAogICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgfSwKICAgICAgICB9CiAgICAgICk7CgogICAgICBjb25zdCBvdXRwdXQgPSByZXMuZGF0YS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudC50b0xvd2VyQ2FzZSgpLnRyaW0oKTsKCiAgICAgIGlmIChvdXRwdXQgPT09ICJ0cnVlIikgewogICAgICAgIG91dHB1dHMudHJ1ZS5uZXh0KHZhbHVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBvdXRwdXRzLmZhbHNlLm5leHQodmFsdWUpOwogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc3QgZXJyb3IgPSBlcnIgYXMgRXJyb3I7CiAgICAgIGlmIChheGlvcy5pc0F4aW9zRXJyb3IoZXJyb3IpICYmIGVycm9yLnJlc3BvbnNlKSB7CiAgICAgICAgYWR2Lm9uRXJyb3IoCiAgICAgICAgICBgT3BlbkFJIEFQSSBFcnJvciAke2Vycm9yLnJlc3BvbnNlLnN0YXR1c306ICR7ZXJyb3IucmVzcG9uc2Uuc3RhdHVzVGV4dH1gCiAgICAgICAgKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhZHYub25FcnJvcihgRXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gKTsKICAgICAgfQogICAgfQogIH0sCn07Cgo=",
  "Limit Times": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJDb250cm9sIEZsb3ciOwoKZXhwb3J0IGNvbnN0IExpbWl0VGltZXM6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJMaW1pdCBUaW1lcyIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiSXRlbSB3aWxsIGJlIGVtaXR0ZWQgdW50aWwgdGhlIGxpbWl0IGlzIHJlYWNoZWQiLAogIGlucHV0czogewogICAgaXRlbTogeyBtb2RlOiAicmVxdWlyZWQiLCBkZXNjcmlwdGlvbjogIlRoZSBpdGVtIHRvIGVtaXQiIH0sCiAgICB0aW1lczogewogICAgICBtb2RlOiAicmVxdWlyZWQiLAogICAgICBkZXNjcmlwdGlvbjogIlRoZSBudW1iZXIgb2YgdGltZXMgdG8gZW1pdCB0aGUgaXRlbSIsCiAgICB9LAogICAgcmVzZXQ6IHsgbW9kZTogIm9wdGlvbmFsIiwgZGVzY3JpcHRpb246ICJSZXNldCB0aGUgY291bnRlciIgfSwKICB9LAogIG91dHB1dHM6IHsgb2s6IHt9IH0sCiAgcmVhY3RpdmVJbnB1dHM6IFsiaXRlbSIsICJyZXNldCJdLAogIGNvbXBsZXRpb25PdXRwdXRzOiBbXSwKICBydW46IGZ1bmN0aW9uIChpbnB1dHMsIG91dHB1dHMsIGFkdikgewogICAgY29uc3QgeyBzdGF0ZSB9ID0gYWR2OwogICAgY29uc3QgeyBpdGVtLCB0aW1lcywgcmVzZXQgfSA9IGlucHV0czsKICAgIGNvbnN0IHsgb2sgfSA9IG91dHB1dHM7CgogICAgaWYgKHR5cGVvZiByZXNldCAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgc3RhdGUuc2V0KCJ2YWwiLCAwKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGxldCBjdXJyID0gc3RhdGUuZ2V0KCJ2YWwiKSB8fCAwOwogICAgY3VycisrOwogICAgc3RhdGUuc2V0KCJ2YWwiLCBjdXJyKTsKICAgIGlmIChjdXJyID49IHRpbWVzKSB7CiAgICAgIGFkdi5vbkVycm9yKG5ldyBFcnJvcihgTGltaXQgb2YgJHt0aW1lc30gcmVhY2hlZGApKTsKICAgIH0gZWxzZSB7CiAgICAgIG9rLm5leHQoaXRlbSk7CiAgICB9CiAgfSwKfTsK",
  "List Is Empty": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgTGlzdElzRW1wdHk6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJMaXN0IElzIEVtcHR5IiwKICBpY29uOiAiZmEtbGlzdCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiUmV0dXJucyB0cnVlIGlmIHRoZSBsaXN0IGlzIGVtcHR5IiwKICBpbnB1dHM6IHsgbGlzdDogeyBkZXNjcmlwdGlvbjogIkxpc3QiIH0gfSwKICBvdXRwdXRzOiB7IGlzRW1wdHk6IHsgZGVzY3JpcHRpb246ICJJcyBlbXB0eSIgfSB9LAogIHJ1bjogKHsgbGlzdCB9LCB7IGlzRW1wdHkgfSkgPT4gaXNFbXB0eS5uZXh0KGxpc3QubGVuZ3RoID09PSAwKSwKfTsK",
  "List Length": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgTGlzdExlbmd0aDogSW50ZXJuYWxDb2RlTm9kZSA9IHsKICBpZDogIkxpc3QgTGVuZ3RoIiwKICBpY29uOiAiZmEtbGlzdCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiUmV0dXJucyB0aGUgbGVuZ3RoIG9mIGEgbGlzdCIsCiAgaW5wdXRzOiB7IGxpc3Q6IHsgZGVzY3JpcHRpb246ICJMaXN0IiB9IH0sCiAgb3V0cHV0czogeyBsZW5ndGg6IHsgZGVzY3JpcHRpb246ICJMZW5ndGgiIH0gfSwKICBydW46ICh7IGxpc3QgfSwgeyBsZW5ndGggfSkgPT4gbGVuZ3RoLm5leHQobGlzdC5sZW5ndGgpLAp9Owo=",
  "Log": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBuYW1lc3BhY2UgPSAiQ29uc29sZSI7CgpleHBvcnQgY29uc3QgTG9nOiBDb2RlTm9kZSA9IHsKICBpZDogIkxvZzIiLAogIG1lbnVEaXNwbGF5TmFtZTogIkNvbnNvbGUgTG9nIiwKICBuYW1lc3BhY2UsCiAgaWNvbjogInRlcm1pbmFsIiwKICBkaXNwbGF5TmFtZTogIkxvZyB7e3ZhbHVlfX0iLAogIGRlc2NyaXB0aW9uOiAiTG9ncyBhIHZhbHVlIHRvIHRoZSBjb25zb2xlIiwKICBpbnB1dHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiVmFsdWUgdG8gbG9nIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICBsb2dnZWRWYWx1ZTogewogICAgICBkZXNjcmlwdGlvbjogIlRoZSB2YWx1ZSB0aGF0IHdhcyBsb2dnZWQiLAogICAgfSwKICB9LAogIHJ1bjogKGlucHV0cywgb3V0cHV0cykgPT4gewogICAgY29uc3QgeyB2YWx1ZSB9ID0gaW5wdXRzOwogICAgY29uc29sZS5sb2codmFsdWUpOwogICAgb3V0cHV0cy5sb2dnZWRWYWx1ZS5uZXh0KHZhbHVlKTsKICB9LAp9Owo=",
  "Loop List": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgTG9vcExpc3Q6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJMb29wIExpc3QiLAogIGljb246ICJmYS1saXN0IiwKICBuYW1lc3BhY2UsCiAgYWxpYXNlczogWyJlYWNoIiwgInNwcmVhZCJdLAogIGRlc2NyaXB0aW9uOiAiRW1pdHMgYWxsIHZhbHVlcyBpbiBhIGxpc3QiLAogIGlucHV0czogewogICAgbGlzdDogeyBkZXNjcmlwdGlvbjogIlRoZSBsaXN0IHRvIGxvb3AiIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICBpdGVtOiB7IGRlc2NyaXB0aW9uOiAiV2lsbCBlbWl0IGEgdmFsdWUgZm9yIGVhY2ggaXRlbSBpbiB0aGUgbGlzdCIgfSwKICAgIGluZGV4OiB7IGRlc2NyaXB0aW9uOiAiV2lsbCBlbWl0IHRoZSBpbmRleCBvZiB0aGUgaXRlbSIgfSwKICAgIGxlbmd0aDogeyBkZXNjcmlwdGlvbjogIldpbGwgZW1pdCB0aGUgbGVuZ3RoIG9mIHRoZSBsaXN0IiB9LAogIH0sCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzKSA9PiB7CiAgICBjb25zdCB7IGxpc3QgfSA9IGlucHV0czsKICAgIGNvbnN0IHsgaXRlbSwgaW5kZXggfSA9IG91dHB1dHM7CiAgICBmb3IgKGNvbnN0IGkgb2YgbGlzdCkgewogICAgICBpdGVtLm5leHQoaSk7CiAgICAgIGluZGV4Lm5leHQobGlzdC5pbmRleE9mKGkpKTsKICAgIH0KICAgIG91dHB1dHMubGVuZ3RoLm5leHQobGlzdC5sZW5ndGgpOwogIH0sCn07Cg==",
  "MathNode": "aW1wb3J0IHsgQ29kZU5vZGUsIGNyZWF0ZUlucHV0R3JvdXAsIG5vZGVPdXRwdXQgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgY29uc3QgTWF0aE5vZGU6IENvZGVOb2RlID0gewogIGlkOiAiTWF0aCIsCiAgZGlzcGxheU5hbWU6ICJNYXRoIHt7b3BlcmF0aW9ufX0iLAogIG1lbnVEaXNwbGF5TmFtZTogIk1hdGggT3BlcmF0aW9ucyIsCiAgaWNvbjogImNhbGN1bGF0b3IiLAogIG5hbWVzcGFjZTogIk51bWJlcnMiLAogIGRlc2NyaXB0aW9uOiAiUGVyZm9ybXMgdmFyaW91cyBtYXRoZW1hdGljYWwgb3BlcmF0aW9ucyIsCiAgaW5wdXRzOiB7CiAgICBvcGVyYXRpb246IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiYWRkIiwKICAgICAgbGFiZWw6ICJPcGVyYXRpb24iLAogICAgICBkZXNjcmlwdGlvbjogIlRoZSBtYXRoIG9wZXJhdGlvbiB0byBwZXJmb3JtIiwKICAgICAgZWRpdG9yVHlwZTogInNlbGVjdCIsCiAgICAgIHR5cGVDb25maWd1cmFibGU6IGZhbHNlLAogICAgICBlZGl0b3JUeXBlRGF0YTogewogICAgICAgIG9wdGlvbnM6IFsKICAgICAgICAgIC8vIEJpbmFyeSBvcGVyYXRpb25zCiAgICAgICAgICAiYWRkIiwKICAgICAgICAgICJzdWJ0cmFjdCIsCiAgICAgICAgICAibXVsdGlwbHkiLAogICAgICAgICAgImRpdmlkZSIsCiAgICAgICAgICAibW9kdWxvIiwKICAgICAgICAgICJncmVhdGVyVGhhbiIsCiAgICAgICAgICAiZ3JlYXRlclRoYW5PckVxdWFsIiwKICAgICAgICAgICJsZXNzVGhhbiIsCiAgICAgICAgICAibGVzc1RoYW5PckVxdWFsIiwKICAgICAgICAgIC8vIFVuYXJ5IG9wZXJhdGlvbnMKICAgICAgICAgICJhYnMiLAogICAgICAgICAgImNlaWxpbmciLAogICAgICAgICAgImZsb29yIiwKICAgICAgICAgICJyb3VuZCIsCiAgICAgICAgICAidHJ1bmNhdGUiLAogICAgICAgICAgInNpbiIsCiAgICAgICAgICAiY29zIiwKICAgICAgICAgICJzcXJ0IiwKICAgICAgICAgICJwYXJzZUludCIsCiAgICAgICAgICAicGFyc2VGbG9hdCIsCiAgICAgICAgXSwKICAgICAgfSwKICAgIH0sCiAgICAvLyBCaW5hcnkgb3BlcmF0aW9uIGlucHV0cwogICAgYmluYXJ5SW5wdXRzOiB7CiAgICAgIGdyb3VwOiBjcmVhdGVJbnB1dEdyb3VwKCJCaW5hcnkgSW5wdXRzIiwgWyJuMSIsICJuMiJdLCB7CiAgICAgICAgY29sbGFwc2libGU6IHRydWUsCiAgICAgICAgZGVmYXVsdENvbGxhcHNlZDogZmFsc2UsCiAgICAgIH0pLAogICAgICBjb25kaXRpb246CiAgICAgICAgIlsnYWRkJywgJ3N1YnRyYWN0JywgJ211bHRpcGx5JywgJ2RpdmlkZScsICdtb2R1bG8nLCAnZ3JlYXRlclRoYW4nLCAnZ3JlYXRlclRoYW5PckVxdWFsJywgJ2xlc3NUaGFuJywgJ2xlc3NUaGFuT3JFcXVhbCddLmluY2x1ZGVzKG9wZXJhdGlvbikiLAogICAgfSwKICAgIG4xOiB7CiAgICAgIGVkaXRvclR5cGU6ICJudW1iZXIiLAogICAgICBkZXNjcmlwdGlvbjogIkZpcnN0IG51bWJlciBvcGVyYW5kIiwKICAgIH0sCiAgICBuMjogewogICAgICBlZGl0b3JUeXBlOiAibnVtYmVyIiwKICAgICAgZGVzY3JpcHRpb246ICJTZWNvbmQgbnVtYmVyIG9wZXJhbmQiLAogICAgfSwKICAgIC8vIFVuYXJ5IG9wZXJhdGlvbiBpbnB1dHMKICAgIHVuYXJ5SW5wdXRzOiB7CiAgICAgIGdyb3VwOiBjcmVhdGVJbnB1dEdyb3VwKCJVbmFyeSBJbnB1dHMiLCBbIm4iXSwgewogICAgICAgIGNvbGxhcHNpYmxlOiB0cnVlLAogICAgICAgIGRlZmF1bHRDb2xsYXBzZWQ6IGZhbHNlLAogICAgICB9KSwKICAgICAgY29uZGl0aW9uOgogICAgICAgICJbJ2FicycsICdjZWlsaW5nJywgJ2Zsb29yJywgJ3JvdW5kJywgJ3RydW5jYXRlJywgJ3NpbicsICdjb3MnLCAnc3FydCcsICdwYXJzZUludCcsICdwYXJzZUZsb2F0J10uaW5jbHVkZXMob3BlcmF0aW9uKSIsCiAgICB9LAogICAgbjogewogICAgICBlZGl0b3JUeXBlOiAibnVtYmVyIiwKICAgICAgZGVzY3JpcHRpb246ICJOdW1iZXIgZm9yIHVuYXJ5IG9wZXJhdGlvbnMiLAogICAgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIHJlc3VsdDogbm9kZU91dHB1dCgpLAogIH0sCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgb3BlcmF0aW9uLCBuMSwgbjIsIGxpc3QsIG4gfSA9IGlucHV0czsKCiAgICB0cnkgewogICAgICBsZXQgcmVzdWx0OwoKICAgICAgc3dpdGNoIChvcGVyYXRpb24pIHsKICAgICAgICAvLyBCaW5hcnkgb3BlcmF0aW9ucwogICAgICAgIGNhc2UgImFkZCI6CiAgICAgICAgICByZXN1bHQgPSBuMSArIG4yOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAic3VidHJhY3QiOgogICAgICAgICAgcmVzdWx0ID0gbjEgLSBuMjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgIm11bHRpcGx5IjoKICAgICAgICAgIHJlc3VsdCA9IG4xICogbjI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJkaXZpZGUiOgogICAgICAgICAgaWYgKG4yID09PSAwKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiRGl2aXNpb24gYnkgemVybyIpOwogICAgICAgICAgfQogICAgICAgICAgcmVzdWx0ID0gbjEgLyBuMjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgIm1vZHVsbyI6CiAgICAgICAgICByZXN1bHQgPSBuMSAlIG4yOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiZ3JlYXRlclRoYW4iOgogICAgICAgICAgcmVzdWx0ID0gbjEgPiBuMjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgImdyZWF0ZXJUaGFuT3JFcXVhbCI6CiAgICAgICAgICByZXN1bHQgPSBuMSA+PSBuMjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgImxlc3NUaGFuIjoKICAgICAgICAgIHJlc3VsdCA9IG4xIDwgbjI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJsZXNzVGhhbk9yRXF1YWwiOgogICAgICAgICAgcmVzdWx0ID0gbjEgPD0gbjI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgLy8gVW5hcnkgb3BlcmF0aW9ucwogICAgICAgIGNhc2UgImFicyI6CiAgICAgICAgICByZXN1bHQgPSBNYXRoLmFicyhuKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgImNlaWxpbmciOgogICAgICAgICAgcmVzdWx0ID0gTWF0aC5jZWlsKG4pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiZmxvb3IiOgogICAgICAgICAgcmVzdWx0ID0gTWF0aC5mbG9vcihuKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgInJvdW5kIjoKICAgICAgICAgIHJlc3VsdCA9IE1hdGgucm91bmQobik7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJ0cnVuY2F0ZSI6CiAgICAgICAgICByZXN1bHQgPSBNYXRoLnRydW5jKG4pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAic2luIjoKICAgICAgICAgIHJlc3VsdCA9IE1hdGguc2luKG4pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiY29zIjoKICAgICAgICAgIHJlc3VsdCA9IE1hdGguY29zKG4pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAic3FydCI6CiAgICAgICAgICBpZiAobiA8IDApIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgY2FsY3VsYXRlIHNxdWFyZSByb290IG9mIG5lZ2F0aXZlIG51bWJlciIpOwogICAgICAgICAgfQogICAgICAgICAgcmVzdWx0ID0gTWF0aC5zcXJ0KG4pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAicGFyc2VJbnQiOgogICAgICAgICAgcmVzdWx0ID0gcGFyc2VJbnQoU3RyaW5nKG4pLCAxMCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJwYXJzZUZsb2F0IjoKICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoU3RyaW5nKG4pKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICAvLyBMaXN0IG9wZXJhdGlvbnMKICAgICAgICBjYXNlICJzdW1MaXN0IjoKICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShsaXN0KSkgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkxpc3QgbXVzdCBiZSBhbiBhcnJheSIpOwogICAgICAgICAgfQogICAgICAgICAgcmVzdWx0ID0gbGlzdC5yZWR1Y2UoKGFjYywgY3VycikgPT4gYWNjICsgY3VyciwgMCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJtaW4iOgogICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGxpc3QpIHx8IGxpc3QubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiTGlzdCBtdXN0IGJlIGEgbm9uLWVtcHR5IGFycmF5Iik7CiAgICAgICAgICB9CiAgICAgICAgICByZXN1bHQgPSBNYXRoLm1pbiguLi5saXN0KTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgIm1heCI6CiAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkobGlzdCkgfHwgbGlzdC5sZW5ndGggPT09IDApIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJMaXN0IG11c3QgYmUgYSBub24tZW1wdHkgYXJyYXkiKTsKICAgICAgICAgIH0KICAgICAgICAgIHJlc3VsdCA9IE1hdGgubWF4KC4uLmxpc3QpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgICAgIGBVbnN1cHBvcnRlZCBvcGVyYXRpb246ICR7SlNPTi5zdHJpbmdpZnkoeyBvcGVyYXRpb24sIG4xLCBuMiwgbiB9KX1gCiAgICAgICAgICApOwogICAgICB9CgogICAgICBvdXRwdXRzLnJlc3VsdC5uZXh0KHJlc3VsdCk7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBhZHYub25FcnJvcihgTWF0aCBvcGVyYXRpb24gZXJyb3I6ICR7KGVycm9yIGFzIEVycm9yKS5tZXNzYWdlfWApOwogICAgfQogIH0sCiAgYWxpYXNlczogWwogICAgImFkZCIsCiAgICAic3VidHJhY3QiLAogICAgIm11bHRpcGx5IiwKICAgICJkaXZpZGUiLAogICAgIm1vZHVsbyIsCiAgICAiZ3JlYXRlclRoYW4iLAogICAgImdyZWF0ZXJUaGFuT3JFcXVhbCIsCiAgICAibGVzc1RoYW4iLAogICAgImxlc3NUaGFuT3JFcXVhbCIsCiAgICAiYWJzIiwKICAgICJjZWlsaW5nIiwKICAgICJmbG9vciIsCiAgICAicm91bmQiLAogICAgInRydW5jYXRlIiwKICAgICJzaW4iLAogICAgImNvcyIsCiAgICAic3FydCIsCiAgICAicGFyc2VJbnQiLAogICAgInBhcnNlRmxvYXQiLAogICAgInN1bUxpc3QiLAogICAgIm1pbiIsCiAgICAibWF4IiwKICBdLAp9Owo=",
  "Note": "aW1wb3J0IHsgbm9kZUlucHV0LCBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmV4cG9ydCBpbnRlcmZhY2UgTm90ZUNvbmZpZyB7CiAgY29udGVudDogc3RyaW5nOwp9CgpleHBvcnQgY29uc3QgTm90ZTogQ29kZU5vZGUgPSB7CiAgaWQ6ICJOb3RlIiwKICBkaXNwbGF5TmFtZTogIk5vdGUiLAogIGljb246ICJjb21tZW50IiwKICBkZWZhdWx0U3R5bGU6IHsKICAgIGNzc092ZXJyaWRlOiB7CiAgICAgIHBhZGRpbmc6ICI2cHggOHB4IiwKICAgIH0sCiAgfSwKICBkZXNjcmlwdGlvbjogIkEgbm90ZSBub2RlIGZvciBkb2N1bWVudGF0aW9uIHB1cnBvc2VzIiwKICBvdmVycmlkZU5vZGVCb2R5SHRtbDogKGNvbmZpZykgPT4gcGFyc2VNYXJrZG93bihjb25maWcuY29udGVudCksCiAgcnVuOiAoKSA9PiB7IH0sCiAgaW5wdXRzOiB7CiAgICBuZXZlcjogbm9kZUlucHV0KCksIC8vIHRoaXMgaXMgYSBoYWNrIHRvIG1ha2UgdGhlIG5vZGUgbmV2ZXIgdHJpZ2dlcgogIH0sCiAgb3V0cHV0czoge30sCiAgbW9kZTogImFkdmFuY2VkIiwKICBkZWZhdWx0Q29uZmlnOiB7CiAgICBjb250ZW50OiAiRW50ZXIgeW91ciBjb21tZW50IGhlcmUiLAogIH0sCiAgZWRpdG9yQ29uZmlnOiB7CiAgICB0eXBlOiAiY3VzdG9tIiwKICAgIGVkaXRvckNvbXBvbmVudEJ1bmRsZVBhdGg6ICIuLi8uLi9kaXN0L3VpL05vdGUuanMiLAogIH0sCn07CgpmdW5jdGlvbiBwYXJzZU1hcmtkb3duKG1hcmtkb3duOiBzdHJpbmcpOiBzdHJpbmcgewogIC8vIFJlcGxhY2UgaGVhZGVycwogIG1hcmtkb3duID0gbWFya2Rvd24ucmVwbGFjZSgvXigjezEsNn0pXHMoLispJC9nbSwgKF8sIGhhc2hlcywgY29udGVudCkgPT4gewogICAgY29uc3QgbGV2ZWwgPSBoYXNoZXMubGVuZ3RoOwogICAgbGV0IGZvbnRTaXplOwoKICAgIC8vIFNwZWNpZmljIHNpemUgZm9yIGVhY2ggaGVhZGluZyBsZXZlbAogICAgc3dpdGNoIChsZXZlbCkgewogICAgICBjYXNlIDE6IGZvbnRTaXplID0gMjQ7IGJyZWFrOwogICAgICBjYXNlIDI6IGZvbnRTaXplID0gMjA7IGJyZWFrOwogICAgICBjYXNlIDM6IGZvbnRTaXplID0gMTY7IGJyZWFrOwogICAgICBjYXNlIDQ6IGNhc2UgNTogY2FzZSA2OiBmb250U2l6ZSA9IDE0OyBicmVhazsKICAgICAgZGVmYXVsdDogZm9udFNpemUgPSAxNDsKICAgIH0KCiAgICAvLyBBZGQgYSBzcGVjaWFsIG1hcmtlciB0byBpbmRpY2F0ZSB0aGlzIGxpbmUgc2hvdWxkbid0IGhhdmUgYSA8YnI+IGFkZGVkCiAgICByZXR1cm4gYDxoJHtsZXZlbH0gc3R5bGU9ImZvbnQtZmFtaWx5OiBJbnRlciwgc2Fucy1zZXJpZjsgZm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtc2l6ZTogJHtmb250U2l6ZX1weDsgbWFyZ2luLWJvdHRvbTogNXB4OyI+JHtjb250ZW50fTwvaCR7bGV2ZWx9PjwhLS1uby1icmVhay0tPmA7CiAgfSk7CgogIC8vIFJlcGxhY2UgYm9sZAogIG1hcmtkb3duID0gbWFya2Rvd24ucmVwbGFjZSgvXCpcKiguKz8pXCpcKi9nLCAiPHN0cm9uZz4kMTwvc3Ryb25nPiIpOwoKICAvLyBSZXBsYWNlIGl0YWxpYwogIG1hcmtkb3duID0gbWFya2Rvd24ucmVwbGFjZSgvXCooLis/KVwqL2csICI8ZW0+JDE8L2VtPiIpOwoKICAvLyBSZXBsYWNlIGxpbmtzCiAgbWFya2Rvd24gPSBtYXJrZG93bi5yZXBsYWNlKAogICAgL1xbKC4rPylcXVwoKC4rPylcKS9nLAogICAgJzxhIGhyZWY9IiQyIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4kMTwvYT4nCiAgKTsKCiAgLy8gUmVwbGFjZSBjb2RlCiAgbWFya2Rvd24gPSBtYXJrZG93bi5yZXBsYWNlKC9gKC4rPylgL2csICI8Y29kZT4kMTwvY29kZT4iKTsKCiAgLy8gUmVwbGFjZSBob3Jpem9udGFsIHJ1bGUKICBtYXJrZG93biA9IG1hcmtkb3duLnJlcGxhY2UoL14tezMsfSQvZ20sICI8aHI+Iik7CgogIC8vIFJlcGxhY2Ugc3RyaWtldGhyb3VnaAogIG1hcmtkb3duID0gbWFya2Rvd24ucmVwbGFjZSgvfn4oLis/KX5+L2csICI8ZGVsPiQxPC9kZWw+Iik7CgogIC8vIEhhbmRsZSB1bm9yZGVyZWQgbGlzdHMKICBjb25zdCB1bFJlZ2V4ID0gL15bIFx0XSpbLSorXVsgXHRdKyguKykkL2dtOwogIGlmICh1bFJlZ2V4LnRlc3QobWFya2Rvd24pKSB7CiAgICBsZXQgaW5MaXN0ID0gZmFsc2U7CiAgICBsZXQgcmVzdWx0ID0gIiI7CiAgICBjb25zdCBsaW5lcyA9IG1hcmtkb3duLnNwbGl0KCJcbiIpOwoKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHsKICAgICAgY29uc3QgbGluZSA9IGxpbmVzW2ldOwogICAgICBjb25zdCBtYXRjaCA9IGxpbmUubWF0Y2goL15bIFx0XSpbLSorXVsgXHRdKyguKykkLyk7CgogICAgICBpZiAobWF0Y2gpIHsKICAgICAgICBpZiAoIWluTGlzdCkgewogICAgICAgICAgcmVzdWx0ICs9ICI8dWwgc3R5bGU9J21hcmdpbi1sZWZ0OiAxNXB4OyBtYXJnaW4tdG9wOiA1cHg7IG1hcmdpbi1ib3R0b206IDVweDsnPiI7CiAgICAgICAgICBpbkxpc3QgPSB0cnVlOwogICAgICAgIH0KICAgICAgICByZXN1bHQgKz0gYDxsaSBzdHlsZT0iZm9udC1mYW1pbHk6IEludGVyLCBzYW5zLXNlcmlmOyBmb250LXNpemU6IDE0cHg7Ij4ke21hdGNoWzFdfTwvbGk+YDsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoaW5MaXN0KSB7CiAgICAgICAgICByZXN1bHQgKz0gIjwvdWw+IjsKICAgICAgICAgIGluTGlzdCA9IGZhbHNlOwogICAgICAgIH0KICAgICAgICByZXN1bHQgKz0gbGluZSArICJcbiI7CiAgICAgIH0KICAgIH0KCiAgICBpZiAoaW5MaXN0KSB7CiAgICAgIHJlc3VsdCArPSAiPC91bD4iOwogICAgfQoKICAgIG1hcmtkb3duID0gcmVzdWx0OwogIH0KCiAgLy8gSGFuZGxlIG9yZGVyZWQgbGlzdHMKICBjb25zdCBvbFJlZ2V4ID0gL15bIFx0XSooXGQrKVwuWyBcdF0rKC4rKSQvZ207CiAgaWYgKG9sUmVnZXgudGVzdChtYXJrZG93bikpIHsKICAgIGxldCBpbkxpc3QgPSBmYWxzZTsKICAgIGxldCByZXN1bHQgPSAiIjsKICAgIGNvbnN0IGxpbmVzID0gbWFya2Rvd24uc3BsaXQoIlxuIik7CgogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykgewogICAgICBjb25zdCBsaW5lID0gbGluZXNbaV07CiAgICAgIGNvbnN0IG1hdGNoID0gbGluZS5tYXRjaCgvXlsgXHRdKihcZCspXC5bIFx0XSsoLispJC8pOwoKICAgICAgaWYgKG1hdGNoKSB7CiAgICAgICAgaWYgKCFpbkxpc3QpIHsKICAgICAgICAgIHJlc3VsdCArPSAiPG9sIHN0eWxlPSdtYXJnaW4tbGVmdDogMTVweDsgbWFyZ2luLXRvcDogNXB4OyBtYXJnaW4tYm90dG9tOiA1cHg7Jz4iOwogICAgICAgICAgaW5MaXN0ID0gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmVzdWx0ICs9IGA8bGkgc3R5bGU9ImZvbnQtZmFtaWx5OiBJbnRlciwgc2Fucy1zZXJpZjsgZm9udC1zaXplOiAxNHB4OyI+JHttYXRjaFsyXX08L2xpPmA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKGluTGlzdCkgewogICAgICAgICAgcmVzdWx0ICs9ICI8L29sPiI7CiAgICAgICAgICBpbkxpc3QgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgcmVzdWx0ICs9IGxpbmUgKyAiXG4iOwogICAgICB9CiAgICB9CgogICAgaWYgKGluTGlzdCkgewogICAgICByZXN1bHQgKz0gIjwvb2w+IjsKICAgIH0KCiAgICBtYXJrZG93biA9IHJlc3VsdDsKICB9CgogIC8vIFJlcGxhY2UgbGluZSBicmVha3MgKGRvIHRoaXMgbGFzdCB0byBhdm9pZCBpbnRlcmZlcmluZyB3aXRoIGxpc3QgcHJvY2Vzc2luZykKICAvLyBTa2lwIGxpbmUgYnJlYWtzIGFmdGVyIGhlYWRpbmdzIGJ5IGxvb2tpbmcgZm9yIHRoZSBzcGVjaWFsIG1hcmtlcgogIG1hcmtkb3duID0gbWFya2Rvd24ucmVwbGFjZSgvPCEtLW5vLWJyZWFrLS0+XG4vZywgJzwhLS1uby1icmVhay0tPicpOwogIG1hcmtkb3duID0gbWFya2Rvd24ucmVwbGFjZSgvXG4vZywgIjxicj4iKTsKICBtYXJrZG93biA9IG1hcmtkb3duLnJlcGxhY2UoLzwhLS1uby1icmVhay0tPi9nLCAnJyk7IC8vIENsZWFuIHVwIG1hcmtlcnMKCiAgLy8gV3JhcCBhbnkgcGxhaW4gdGV4dCBpbiBhIHBhcmFncmFwaCB3aXRoIHRoZSBjb3JyZWN0IHN0eWxpbmcKICBpZiAoIW1hcmtkb3duLmluY2x1ZGVzKCI8cCIpICYmIG1hcmtkb3duLmxlbmd0aCA+IDApIHsKICAgIG1hcmtkb3duID0gYDxkaXYgc3R5bGU9ImZvbnQtZmFtaWx5OiBJbnRlciwgc2Fucy1zZXJpZjsgZm9udC1zaXplOiAxNHB4OyI+JHttYXJrZG93bn08L2Rpdj5gOwogIH0KCiAgcmV0dXJuIG1hcmtkb3duOwp9Cg==",
  "Notion": "",
  "OpenAI": "",
  "OpenAIResponsesAPI": "",
  "OpenAIStub": "",
  "PostgreSQL": "",
  "Prepend": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgUHJlcGVuZDogSW50ZXJuYWxDb2RlTm9kZSA9IHsKICBpZDogIlByZXBlbmQiLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIlByZXBlbmRzIGFuIGl0ZW0gdG8gYSBsaXN0IiwKICBpbnB1dHM6IHsKICAgIGxpc3Q6IHsgZGVzY3JpcHRpb246ICJUaGUgbGlzdCIgfSwKICAgIGl0ZW06IHsgZGVzY3JpcHRpb246ICJUaGUgaXRlbSB0byBwcmVwZW5kIiB9LAogIH0sCiAgb3V0cHV0czogeyBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIHJlc3VsdGluZyBsaXN0IiB9IH0sCiAgcnVuOiAoeyBsaXN0LCBpdGVtIH0sIHsgbGlzdDogb3V0cHV0TGlzdCB9KSA9PiB7CiAgICBvdXRwdXRMaXN0Lm5leHQoW2l0ZW0sIC4uLmxpc3RdKTsKICB9LAogIGljb246ICJmYS1hcnJvdy11cCIsCn07Cg==",
  "Publish": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlcwpjb25zdCBQdWJTdWIgPSByZXF1aXJlKCJwdWJzdWItanMiKTsKCmNvbnN0IG5hbWVzcGFjZSA9ICJDb250cm9sIEZsb3ciOwoKZXhwb3J0IGNvbnN0IFB1Ymxpc2g6IENvZGVOb2RlID0gewogIGlkOiAiUHVibGlzaCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOgogICAgIlB1Ymxpc2hlcyBhIHZhbHVlIGJ5IGEga2V5IHRvIGFsbCBsaXN0ZW5lcnMgaW4gdGhlIGN1cnJlbnQgZmxvdy4gVXNlICdTdWJzY3JpYmUnIHRvIGxpc3RlbiB0byBldmVudHMuIiwKICBpbnB1dHM6IHsKICAgIGtleTogewogICAgICBtb2RlOiAicmVxdWlyZWQiLAogICAgICBkZXNjcmlwdGlvbjogIkEga2V5IHRvIHVzZSB0byBzdWJzY3JpYmUgdG8gdmFsdWVzIiwKICAgIH0sCiAgICB2YWx1ZTogeyBtb2RlOiAicmVxdWlyZWQiIH0sCiAgfSwKICBvdXRwdXRzOiB7fSwKICBydW46IGZ1bmN0aW9uIChpbnB1dHMsIF8sIGFkdikgewogICAgY29uc3QgbnNLZXkgPSBgJHthZHYuYW5jZXN0b3JzSW5zSWRzfV9fJHtpbnB1dHMua2V5fWA7CgogICAgY29uc29sZS5sb2coIlB1Ymxpc2hpbmciLCBuc0tleSwgaW5wdXRzLnZhbHVlKTsKICAgIFB1YlN1Yi5wdWJsaXNoKG5zS2V5LCBpbnB1dHMudmFsdWUpOwogIH0sCn07Cg==",
  "Read File": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0ICogYXMgZnMgZnJvbSAiZnMiOwoKZXhwb3J0IGNvbnN0IFJlYWRGaWxlOiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiUmVhZCBGaWxlIiwKICBpY29uOiAiZmEtZmlsZSIsCiAgbmFtZXNwYWNlOiAiRmlsZSBTeXN0ZW0iLAogIGRlc2NyaXB0aW9uOiAiUmVhZHMgYSBmaWxlIGZyb20gdGhlIGZpbGUgc3lzdGVtIiwKICBpbnB1dHM6IHsKICAgIHBhdGg6IHsgZGVzY3JpcHRpb246ICJQYXRoIHRvIHRoZSBmaWxlIiB9LAogICAgZW5jb2Rpbmc6IHsKICAgICAgZGVzY3JpcHRpb246ICJFbmNvZGluZyBvZiB0aGUgZmlsZSIsCiAgICAgIG1vZGU6ICJvcHRpb25hbCIsCiAgICB9LAogIH0sCiAgb3V0cHV0czogeyBjb250ZW50czogeyBkZXNjcmlwdGlvbjogIkNvbnRlbnRzIG9mIHRoZSBmaWxlIiB9IH0sCiAgcnVuOiBhc3luYyAoeyBwYXRoLCBlbmNvZGluZyB9LCB7IGNvbnRlbnRzIH0pID0+IHsKICAgIHJldHVybiBjb250ZW50cy5uZXh0KGF3YWl0IGZzLnByb21pc2VzLnJlYWRGaWxlKHBhdGgsIGVuY29kaW5nKSk7CiAgfSwKfTsK",
  "Remove Item": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgUmVtb3ZlOiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiUmVtb3ZlIEl0ZW0iLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIlJlbW92ZXMgYW4gaXRlbSBmcm9tIGEgbGlzdCIsCiAgaW5wdXRzOiB7CiAgICBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIGxpc3QiIH0sCiAgICBpdGVtOiB7IGRlc2NyaXB0aW9uOiAiVGhlIGl0ZW0gdG8gcmVtb3ZlIiB9LAogIH0sCiAgb3V0cHV0czogeyBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIHJlc3VsdGluZyBsaXN0IiB9IH0sCiAgcnVuOiAoeyBsaXN0LCBpdGVtIH0sIHsgbGlzdDogb3V0cHV0TGlzdCB9KSA9PiB7CiAgICBvdXRwdXRMaXN0Lm5leHQobGlzdC5maWx0ZXIoKGkpID0+IGkgIT09IGl0ZW0pKTsKICB9LAogIGljb246ICJmYS1taW51cyIsCn07Cg==",
  "Remove Item At": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgUmVtb3ZlQXQ6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJSZW1vdmUgSXRlbSBBdCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiUmVtb3ZlcyBhbiBpdGVtIGZyb20gYSBsaXN0IGF0IHRoZSBzcGVjaWZpZWQgaW5kZXgiLAogIGlucHV0czogewogICAgbGlzdDogeyBkZXNjcmlwdGlvbjogIlRoZSBsaXN0IiB9LAogICAgaW5kZXg6IHsgZGVzY3JpcHRpb246ICJUaGUgaW5kZXggb2YgdGhlIGl0ZW0gdG8gcmVtb3ZlIiB9LAogIH0sCiAgb3V0cHV0czogeyBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIHJlc3VsdGluZyBsaXN0IiB9IH0sCiAgcnVuOiAoeyBsaXN0LCBpbmRleCB9LCB7IGxpc3Q6IG91dHB1dExpc3QgfSkgPT4gewogICAgb3V0cHV0TGlzdC5uZXh0KGxpc3QuZmlsdGVyKChfLCBpZHgpID0+IGlkeCAhPT0gaW5kZXgpKTsKICB9LAogIGljb246ICJmYS10aW1lcyIsCn07Cg==",
  "Repeat": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgUmVwZWF0OiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiUmVwZWF0IiwKICBpY29uOiAiZmEtbGlzdCIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiUmVwZWF0cyBhIHZhbHVlIGEgbnVtYmVyIG9mIHRpbWVzIiwKICBpbnB1dHM6IHsKICAgIHZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiVmFsdWUgdG8gcmVwZWF0IiB9LAogICAgdGltZXM6IHsgZGVzY3JpcHRpb246ICJIb3cgbWFueSB0aW1lcyB3aWxsIHRoZSB2YWx1ZSBiZSByZXBlYXRlZCIgfSwKICB9LAogIG91dHB1dHM6IHsgbGlzdDogeyBkZXNjcmlwdGlvbjogIkxpc3QiIH0gfSwKICBydW46ICh7IHZhbHVlLCB0aW1lcyB9LCB7IGxpc3QgfSkgPT4gewogICAgY29uc3QgcmVzdWx0ID0gW107CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRpbWVzOyBpKyspIHsKICAgICAgcmVzdWx0LnB1c2godmFsdWUpOwogICAgfQogICAgcmV0dXJuIGxpc3QubmV4dChyZXN1bHQpOwogIH0sCn07Cg==",
  "Resend": "aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgppbnRlcmZhY2UgUmVzZW5kRXJyb3JSZXNwb25zZSB7CiAgZXJyb3I6IHsKICAgIG1lc3NhZ2U6IHN0cmluZzsKICAgIGNvZGU6IHN0cmluZzsKICB9Owp9CgpleHBvcnQgY29uc3QgUmVzZW5kOiBDb2RlTm9kZSA9IHsKICBpZDogIlJlc2VuZCIsCiAgbWVudURpc3BsYXlOYW1lOiAiUmVzZW5kIiwKICBuYW1lc3BhY2U6ICJlbWFpbCIsCiAgaWNvbjogYAo8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDYwMCA2MDAiIGZpbGw9ImN1cnJlbnRDb2xvciIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTE4NiA0NDcuNDcxVjE1NEgzMTguMDYyQzMzNi43ODggMTU0IDM1My42OTcgMTU4LjA1MyAzNjguNzkgMTY2LjE1OEMzODQuMTYzIDE3NC4yNjMgMzk2LjE4MSAxODUuNDQzIDQwNC44NDUgMTk5LjY5OEM0MTMuNTEgMjEzLjY3MiA0MTcuODQyIDIyOS42MDQgNDE3Ljg0MiAyNDcuNDkxQzQxNy44NDIgMjY1LjkzOCA0MTMuNTEgMjgyLjU2OCA0MDQuODQ1IDI5Ny4zODFDMzk2LjE4MSAzMTEuOTE1IDM4NC4zMDIgMzIzLjM3NSAzNjkuMjA5IDMzMS43NTlDMzU0LjExNyAzNDAuMTQ0IDMzNy4wNjcgMzQ0LjMzNyAzMTguMDYyIDM0NC4zMzdIMjUzLjkxN1Y0NDcuNDcxSDE4NlpNMzQ4LjY2NyA0NDcuNDcxTDI3NC4wNDEgMzE0Ljk5TDM0Ni45OSAzMDQuNTA5TDQzMCA0NDcuNDcxSDM0OC42NjdaTTI1My45MTcgMjg5LjgzNUgzMTEuNzczQzMxOS4wNCAyODkuODM1IDMyNS4zMjkgMjg4LjI5OCAzMzAuNjM5IDI4NS4yMjNDMzM2LjIyOSAyODEuODY5IDM0MC40MjEgMjc3LjI1OCAzNDMuMjE2IDI3MS4zODhDMzQ2LjI5MSAyNjUuNTE5IDM0Ny44MjggMjU4LjgxMSAzNDcuODI4IDI1MS4yNjVDMzQ3LjgyOCAyNDMuNzE4IDM0Ni4xNTEgMjM3LjE1IDM0Mi43OTcgMjMxLjU2QzMzOS40NDMgMjI1LjY5MSAzMzQuNTUyIDIyMS4yMTkgMzI4LjEyNCAyMTguMTQ0QzMyMS45NzUgMjE1LjA3IDMxNC40MjggMjEzLjUzMyAzMDUuNDg0IDIxMy41MzNIMjUzLjkxN1YyODkuODM1WiIvPgo8L3N2Zz4KYCwKICBkaXNwbGF5TmFtZTogIlJlc2VuZCIsCiAgZGVzY3JpcHRpb246ICJTZW5kIGVtYWlscyB1c2luZyBSZXNlbmQiLAogIGlucHV0czogewogICAgYXBpS2V5OiB7CiAgICAgIGVkaXRvclR5cGU6ICJzZWNyZXQiLAogICAgICBlZGl0b3JUeXBlRGF0YTogewogICAgICAgIGRlZmF1bHROYW1lOiAiUkVTRU5EX0FQSV9LRVkiLAogICAgICB9LAogICAgICBkZXNjcmlwdGlvbjogIlJlc2VuZCBBUEkgS2V5IiwKICAgIH0sCiAgICBmcm9tOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIiIsCiAgICAgIGVkaXRvclR5cGU6ICJzdHJpbmciLAogICAgICBkZXNjcmlwdGlvbjogIlNlbmRlciBlbWFpbCBhZGRyZXNzIiwKICAgIH0sCiAgICB0bzogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJSZWNpcGllbnQgZW1haWwgYWRkcmVzcyIsCiAgICB9LAogICAgc3ViamVjdDogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJFbWFpbCBzdWJqZWN0IiwKICAgIH0sCiAgICBodG1sOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIiIsCiAgICAgIGVkaXRvclR5cGU6ICJsb25ndGV4dCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiSFRNTCBjb250ZW50IG9mIHRoZSBlbWFpbCIsCiAgICB9LAogICAgdGV4dDogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAibG9uZ3RleHQiLAogICAgICBkZXNjcmlwdGlvbjogIlBsYWluIHRleHQgY29udGVudCBvZiB0aGUgZW1haWwiLAogICAgfSwKICAgIGNjOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogIiIsCiAgICAgIGVkaXRvclR5cGU6ICJzdHJpbmciLAogICAgICBkZXNjcmlwdGlvbjogIkNDIHJlY2lwaWVudHMgKGNvbW1hLXNlcGFyYXRlZCkiLAogICAgfSwKICAgIGJjYzogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJCQ0MgcmVjaXBpZW50cyAoY29tbWEtc2VwYXJhdGVkKSIsCiAgICB9LAogICAgcmVwbHlUbzogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJSZXBseS10byBlbWFpbCBhZGRyZXNzIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICBzdWNjZXNzOiB7CiAgICAgIGRlc2NyaXB0aW9uOiAiRW1haWwgc2VudCBzdWNjZXNzZnVsbHkiLAogICAgfSwKICB9LAogIHJ1bjogYXN5bmMgKGlucHV0cywgb3V0cHV0cykgPT4gewogICAgY29uc3QgeyBhcGlLZXksIGZyb20sIHRvLCBzdWJqZWN0LCBodG1sLCB0ZXh0LCBjYywgYmNjLCByZXBseVRvIH0gPSBpbnB1dHM7CgogICAgY29uc3QgaGVhZGVycyA9IHsKICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FwaUtleX1gLAogICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgfTsKCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueQogICAgY29uc3QgZGF0YTogYW55ID0gewogICAgICBmcm9tLAogICAgICB0bywKICAgICAgc3ViamVjdCwKICAgIH07CgogICAgaWYgKGh0bWwpIHsKICAgICAgZGF0YS5odG1sID0gaHRtbDsKICAgIH0KICAgIGlmICh0ZXh0KSB7CiAgICAgIGRhdGEudGV4dCA9IHRleHQ7CiAgICB9CiAgICBpZiAoY2MpIHsKICAgICAgZGF0YS5jYyA9IGNjLnNwbGl0KCIsIikubWFwKChlbWFpbDogc3RyaW5nKSA9PiBlbWFpbC50cmltKCkpOwogICAgfQogICAgaWYgKGJjYykgewogICAgICBkYXRhLmJjYyA9IGJjYy5zcGxpdCgiLCIpLm1hcCgoZW1haWw6IHN0cmluZykgPT4gZW1haWwudHJpbSgpKTsKICAgIH0KICAgIGlmIChyZXBseVRvKSB7CiAgICAgIGRhdGEucmVwbHlfdG8gPSByZXBseVRvOwogICAgfQoKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLnBvc3QoImh0dHBzOi8vYXBpLnJlc2VuZC5jb20vZW1haWxzIiwgZGF0YSwgewogICAgICAgIGhlYWRlcnMsCiAgICAgIH0pOwogICAgICBvdXRwdXRzLnN1Y2Nlc3MubmV4dChyZXMuZGF0YSk7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICBpZiAoYXhpb3MuaXNBeGlvc0Vycm9yKGVycm9yKSAmJiBlcnJvci5yZXNwb25zZSkgewogICAgICAgIGNvbnN0IGVycm9yRGF0YSA9IGVycm9yLnJlc3BvbnNlLmRhdGEgYXMgUmVzZW5kRXJyb3JSZXNwb25zZTsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yRGF0YSk7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKAogICAgICAgICAgYFJlc2VuZCBBUEkgRXJyb3IgJHtlcnJvci5yZXNwb25zZS5zdGF0dXN9OiAke2Vycm9yRGF0YS5lcnJvcj8ubWVzc2FnZSB8fCBlcnJvci5yZXNwb25zZS5zdGF0dXNUZXh0CiAgICAgICAgICB9YAogICAgICAgICk7CiAgICAgIH0KICAgICAgdGhyb3cgZXJyb3I7CiAgICB9CiAgfSwKfTsK",
  "Reverse": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgUmV2ZXJzZTogSW50ZXJuYWxDb2RlTm9kZSA9IHsKICBpZDogIlJldmVyc2UiLAogIGljb246ICJmYS1saXN0IiwKICBuYW1lc3BhY2UsCiAgZGVzY3JpcHRpb246ICJSZXZlcnNlcyBhIGxpc3QiLAogIGlucHV0czogeyBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiTGlzdCIgfSB9LAogIG91dHB1dHM6IHsgcmV2ZXJzZWQ6IHsgZGVzY3JpcHRpb246ICJSZXZlcnNlZCBsaXN0IiB9IH0sCiAgcnVuOiAoeyBsaXN0IH0sIHsgcmV2ZXJzZWQgfSkgPT4gcmV2ZXJzZWQubmV4dChsaXN0LnJldmVyc2UoKSksCn07Cg==",
  "RoundRobin": "aW1wb3J0IHsKICBjb25maWd1cmFibGVWYWx1ZSwKICBDb25maWd1cmFibGVWYWx1ZSwKICBPdXRwdXRQaW4sCn0gZnJvbSAiQGZseWRlL2NvcmUiOwppbXBvcnQgeyBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJDb250cm9sIEZsb3ciOwoKZXhwb3J0IGludGVyZmFjZSBSb3VuZFJvYmluQ29uZmlnIHsKICBjb3VudDogQ29uZmlndXJhYmxlVmFsdWU7Cn0KCmV4cG9ydCBjb25zdCBSb3VuZFJvYmluOiBDb2RlTm9kZTxSb3VuZFJvYmluQ29uZmlnPiA9IHsKICBtb2RlOiAiYWR2YW5jZWQiLAogIGlkOiAiUm91bmRSb2JpbiIsCiAgZGVmYXVsdENvbmZpZzogeyBjb3VudDogY29uZmlndXJhYmxlVmFsdWUoIm51bWJlciIsIDMpIH0sCiAgbmFtZXNwYWNlLAogIG1lbnVEaXNwbGF5TmFtZTogIlJvdW5kIFJvYmluIiwKICBtZW51RGVzY3JpcHRpb246CiAgICAiSXRlbSB3aWxsIGJlIGVtaXR0ZWQgdG8gb25lIG9mIHRoZSBvdXRwdXRzIGluIGEgcm91bmQgcm9iaW4gZmFzaGlvbiIsCiAgaWNvbjogInJvdGF0ZSIsCgogIGlucHV0czogewogICAgdmFsdWU6IHsgbW9kZTogInJlcXVpcmVkIiwgZGVzY3JpcHRpb246ICJUaGUgdmFsdWUgdG8gZW1pdCIgfSwKICB9LAogIG91dHB1dHM6IChjb25maWcpID0+CiAgICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBjb25maWcuY291bnQudmFsdWUgfSkucmVkdWNlPAogICAgICBSZWNvcmQ8c3RyaW5nLCBPdXRwdXRQaW4+CiAgICA+KAogICAgICAob2JqLCBfLCBpKSA9PiAoewogICAgICAgIC4uLm9iaiwKICAgICAgICBbYHIke2kgKyAxfWBdOiB7CiAgICAgICAgICBkZXNjcmlwdGlvbjogYFRoZSAke2kgKyAxCiAgICAgICAgICAgIH0gb3V0cHV0IGluIG9yZGVyIHRvIGVtaXQgdGhlIHZhbHVlIHJlY2VpdmVkLiBBZnRlciBlbWl0dGluZyBhIHZhbHVlLCBpdCBtb3ZlcyB0byAiciR7KGkgKyAyKSAlIGNvbmZpZy5jb3VudC52YWx1ZQogICAgICAgICAgICB9IidzIHR1cm4uYCwKICAgICAgICB9LAogICAgICB9KSwKICAgICAge30KICAgICksCiAgY29tcGxldGlvbk91dHB1dHM6IFtdLAogIHJlYWN0aXZlSW5wdXRzOiBbInZhbHVlIl0sCiAgZGlzcGxheU5hbWU6IChjb25maWcpID0+IGBSb3VuZCBSb2JpbiAke2NvbmZpZy5jb3VudC52YWx1ZX1gLAogIGRlc2NyaXB0aW9uOiAoY29uZmlnKSA9PgogICAgYEl0ZW0gd2lsbCBiZSBlbWl0dGVkIHRvIG9uZSBvZiB0aGUgJHtjb25maWcuY291bnQudmFsdWV9IG91dHB1dHMgaW4gYSByb3VuZCByb2JpbiBmYXNoaW9uYCwKICBlZGl0b3JDb25maWc6IHsKICAgIHR5cGU6ICJzdHJ1Y3R1cmVkIiwKICAgIGZpZWxkczogWwogICAgICB7CiAgICAgICAgdHlwZTogIm51bWJlciIsCiAgICAgICAgY29uZmlnS2V5OiAiY291bnQiLAogICAgICAgIGxhYmVsOiAiQ291bnQiLAogICAgICAgIC8vIHR5cGVDb25maWd1cmFibGU6IGZhbHNlLAogICAgICB9LAogICAgXSwKICB9LAogIHJ1bjogKGlucHV0cywgb3V0cHV0cywgYWR2KSA9PiB7CiAgICBjb25zdCB7IHN0YXRlIH0gPSBhZHY7CiAgICBjb25zdCB7IGNvdW50IH0gPSBhZHYuY29udGV4dC5jb25maWc7CgogICAgY29uc3Qgb3V0cHV0S2V5cyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGNvdW50LnZhbHVlIH0pLm1hcCgKICAgICAgKF8sIGkpID0+IGByJHtpICsgMX1gCiAgICApOwoKICAgIGNvbnN0IGN1cnIgPSBzdGF0ZS5nZXQoImN1cnIiKSB8fCAwOwoKICAgIGNvbnN0IG8gPSBvdXRwdXRzW291dHB1dEtleXNbY3Vycl1dOwogICAgY29uc3QgbmV4dEN1cnIgPSAoY3VyciArIDEpICUgY291bnQudmFsdWU7CgogICAgc3RhdGUuc2V0KCJjdXJyIiwgbmV4dEN1cnIpOwogICAgby5uZXh0KGlucHV0cy52YWx1ZSk7CiAgfSwKfTsK",
  "ScrapingBee": "",
  "SendGrid": "aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgppbnRlcmZhY2UgU2VuZEdyaWRFcnJvclJlc3BvbnNlIHsKICBlcnJvcjogewogICAgbWVzc2FnZTogc3RyaW5nOwogICAgY29kZTogc3RyaW5nOwogIH07Cn0KCmV4cG9ydCBjb25zdCBTZW5kR3JpZDogQ29kZU5vZGUgPSB7CiAgaWQ6ICJTZW5kR3JpZCIsCiAgbWVudURpc3BsYXlOYW1lOiAiU2VuZEdyaWQiLAogIG5hbWVzcGFjZTogImVtYWlsIiwKICBpY29uOiBgZW52ZWxvcGVgLAogIGRpc3BsYXlOYW1lOiAiU2VuZEdyaWQiLAogIGRlc2NyaXB0aW9uOiAiU2VuZCBlbWFpbHMgdXNpbmcgU2VuZEdyaWQiLAogIGlucHV0czogewogICAgYXBpS2V5OiB7CiAgICAgIGVkaXRvclR5cGU6ICJzZWNyZXQiLAogICAgICBlZGl0b3JUeXBlRGF0YTogewogICAgICAgIGRlZmF1bHROYW1lOiAiU0VOREdSSURfQVBJX0tFWSIsCiAgICAgIH0sCiAgICAgIGRlc2NyaXB0aW9uOiAiU2VuZEdyaWQgQVBJIEtleSIsCiAgICB9LAogICAgZnJvbTogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJTZW5kZXIgZW1haWwgYWRkcmVzcyIsCiAgICB9LAogICAgdG86IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiUmVjaXBpZW50IGVtYWlsIGFkZHJlc3MiLAogICAgfSwKICAgIHN1YmplY3Q6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiRW1haWwgc3ViamVjdCIsCiAgICB9LAogICAgaHRtbDogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAibG9uZ3RleHQiLAogICAgICBkZXNjcmlwdGlvbjogIkhUTUwgY29udGVudCBvZiB0aGUgZW1haWwiLAogICAgfSwKICAgIHRleHQ6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogImxvbmd0ZXh0IiwKICAgICAgZGVzY3JpcHRpb246ICJQbGFpbiB0ZXh0IGNvbnRlbnQgb2YgdGhlIGVtYWlsIiwKICAgIH0sCiAgICBjYzogewogICAgICBkZWZhdWx0VmFsdWU6ICIiLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgICAgZGVzY3JpcHRpb246ICJDQyByZWNpcGllbnRzIChjb21tYS1zZXBhcmF0ZWQpIiwKICAgIH0sCiAgICBiY2M6IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQkNDIHJlY2lwaWVudHMgKGNvbW1hLXNlcGFyYXRlZCkiLAogICAgfSwKICAgIHJlcGx5VG86IHsKICAgICAgZGVmYXVsdFZhbHVlOiAiIiwKICAgICAgZWRpdG9yVHlwZTogInN0cmluZyIsCiAgICAgIGRlc2NyaXB0aW9uOiAiUmVwbHktdG8gZW1haWwgYWRkcmVzcyIsCiAgICB9LAogICAgYXR0YWNobWVudHM6IHsKICAgICAgZGVmYXVsdFZhbHVlOiBbXSwKICAgICAgZWRpdG9yVHlwZTogImpzb24iLAogICAgICBkZXNjcmlwdGlvbjoKICAgICAgICAiQXJyYXkgb2YgYXR0YWNobWVudCBvYmplY3RzIHdpdGggY29udGVudCwgZmlsZW5hbWUsIHR5cGUsIGFuZCBkaXNwb3NpdGlvbiIsCiAgICB9LAogIH0sCiAgb3V0cHV0czogewogICAgc3VjY2VzczogewogICAgICBkZXNjcmlwdGlvbjogIkVtYWlsIHNlbnQgc3VjY2Vzc2Z1bGx5IiwKICAgIH0sCiAgfSwKICBydW46IGFzeW5jIChpbnB1dHMsIG91dHB1dHMpID0+IHsKICAgIGNvbnN0IHsKICAgICAgYXBpS2V5LAogICAgICBmcm9tLAogICAgICB0bywKICAgICAgc3ViamVjdCwKICAgICAgaHRtbCwKICAgICAgdGV4dCwKICAgICAgY2MsCiAgICAgIGJjYywKICAgICAgcmVwbHlUbywKICAgICAgYXR0YWNobWVudHMsCiAgICB9ID0gaW5wdXRzOwoKICAgIGNvbnN0IGhlYWRlcnMgPSB7CiAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YCwKICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgIH07CgogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkKICAgIGNvbnN0IGRhdGE6IGFueSA9IHsKICAgICAgcGVyc29uYWxpemF0aW9uczogWwogICAgICAgIHsKICAgICAgICAgIHRvOiB0by5zcGxpdCgiLCIpLm1hcCgoZW1haWw6IHN0cmluZykgPT4gKHsgZW1haWw6IGVtYWlsLnRyaW0oKSB9KSksCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgZnJvbTogeyBlbWFpbDogZnJvbSB9LAogICAgICBzdWJqZWN0LAogICAgfTsKCiAgICBpZiAoaHRtbCkgewogICAgICBkYXRhLmNvbnRlbnQgPSBkYXRhLmNvbnRlbnQgfHwgW107CiAgICAgIGRhdGEuY29udGVudC5wdXNoKHsKICAgICAgICB0eXBlOiAidGV4dC9odG1sIiwKICAgICAgICB2YWx1ZTogaHRtbCwKICAgICAgfSk7CiAgICB9CgogICAgaWYgKHRleHQpIHsKICAgICAgZGF0YS5jb250ZW50ID0gZGF0YS5jb250ZW50IHx8IFtdOwogICAgICBkYXRhLmNvbnRlbnQucHVzaCh7CiAgICAgICAgdHlwZTogInRleHQvcGxhaW4iLAogICAgICAgIHZhbHVlOiB0ZXh0LAogICAgICB9KTsKICAgIH0KCiAgICBpZiAoY2MpIHsKICAgICAgZGF0YS5wZXJzb25hbGl6YXRpb25zWzBdLmNjID0gY2MKICAgICAgICAuc3BsaXQoIiwiKQogICAgICAgIC5tYXAoKGVtYWlsOiBzdHJpbmcpID0+ICh7IGVtYWlsOiBlbWFpbC50cmltKCkgfSkpOwogICAgfQoKICAgIGlmIChiY2MpIHsKICAgICAgZGF0YS5wZXJzb25hbGl6YXRpb25zWzBdLmJjYyA9IGJjYwogICAgICAgIC5zcGxpdCgiLCIpCiAgICAgICAgLm1hcCgoZW1haWw6IHN0cmluZykgPT4gKHsgZW1haWw6IGVtYWlsLnRyaW0oKSB9KSk7CiAgICB9CgogICAgaWYgKHJlcGx5VG8pIHsKICAgICAgZGF0YS5yZXBseV90byA9IHsgZW1haWw6IHJlcGx5VG8gfTsKICAgIH0KCiAgICBpZiAoYXR0YWNobWVudHMgJiYgYXR0YWNobWVudHMubGVuZ3RoID4gMCkgewogICAgICBkYXRhLmF0dGFjaG1lbnRzID0gYXR0YWNobWVudHM7CiAgICB9CgogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucG9zdCgKICAgICAgICAiaHR0cHM6Ly9hcGkuc2VuZGdyaWQuY29tL3YzL21haWwvc2VuZCIsCiAgICAgICAgZGF0YSwKICAgICAgICB7CiAgICAgICAgICBoZWFkZXJzLAogICAgICAgIH0KICAgICAgKTsKICAgICAgb3V0cHV0cy5zdWNjZXNzLm5leHQocmVzLmRhdGEpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgaWYgKGF4aW9zLmlzQXhpb3NFcnJvcihlcnJvcikgJiYgZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBlcnJvci5yZXNwb25zZS5kYXRhIGFzIFNlbmRHcmlkRXJyb3JSZXNwb25zZTsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgICBgU2VuZEdyaWQgQVBJIEVycm9yICR7ZXJyb3IucmVzcG9uc2Uuc3RhdHVzfTogJHtlcnJvckRhdGEuZXJyb3I/Lm1lc3NhZ2UgfHwgZXJyb3IucmVzcG9uc2Uuc3RhdHVzVGV4dAogICAgICAgICAgfWAKICAgICAgICApOwogICAgICB9CiAgICAgIHRocm93IGVycm9yOwogICAgfQogIH0sCn07Cgo=",
  "Set State": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJTdGF0ZSI7CgpleHBvcnQgY29uc3QgU2V0R2xvYmFsU3RhdGU6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJTZXQgU3RhdGUiLAogIGljb246ICJmYS1wZW4iLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIlNldHMgYSB2YWx1ZSBpbiB0aGUgZ2xvYmFsIHN0YXRlIiwKICBpbnB1dHM6IHsKICAgIGtleTogeyBkZXNjcmlwdGlvbjogIktleSB0byBzZXQiIH0sCiAgICB2YWx1ZTogeyBkZXNjcmlwdGlvbjogIlZhbHVlIHRvIHNldCIgfSwKICB9LAogIG91dHB1dHM6IHsKICAgIHNldFZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiVmFsdWUgdGhhdCB3YXMgc2V0IiB9LAogIH0sCiAgcnVuOiAoeyBrZXksIHZhbHVlIH0sIHsgc2V0VmFsdWUgfSwgeyBnbG9iYWxTdGF0ZSB9KSA9PiB7CiAgICBnbG9iYWxTdGF0ZS5zZXQoa2V5LCB2YWx1ZSk7CiAgICBzZXRWYWx1ZS5uZXh0KHZhbHVlKTsKICB9LAp9Owo=",
  "SetAttribute": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBuYW1lc3BhY2UgPSAiT2JqZWN0cyI7CgpleHBvcnQgY29uc3QgU2V0QXR0cmlidXRlOiBDb2RlTm9kZSA9IHsKICBpZDogIlNldEF0dHJpYnV0ZSIsCiAgbmFtZXNwYWNlLAogIG1lbnVEaXNwbGF5TmFtZTogIlNldCBBdHRyaWJ1dGUiLAogIG1lbnVEZXNjcmlwdGlvbjogIlNldHMgYW4gYXR0cmlidXRlIG9uIGFuIG9iamVjdCIsCiAgaWNvbjogImZhLWJveCIsCiAgaW5wdXRzOiB7CiAgICBvYmplY3Q6IHsKICAgICAgZGVzY3JpcHRpb246ICJPYmplY3QgdG8gc2V0IGF0dHJpYnV0ZSBvbiIsCiAgICB9LAogICAga2V5OiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogInNvbWVLZXkiLAogICAgICBkZXNjcmlwdGlvbjogIktleSBvZiB0aGUgYXR0cmlidXRlIHRvIHNldCIsCiAgICAgIGVkaXRvclR5cGU6ICJzdHJpbmciLAogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogInNvbWVWYWx1ZSIsCiAgICAgIGRlc2NyaXB0aW9uOiAiVmFsdWUgdG8gc2V0IHRoZSBhdHRyaWJ1dGUgdG8iLAogICAgICBlZGl0b3JUeXBlOiAic3RyaW5nIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICBvYmplY3Q6IHsKICAgICAgZGVzY3JpcHRpb246ICJUaGUgb2JqZWN0IHdpdGggdGhlIGF0dHJpYnV0ZSBzZXQiLAogICAgfSwKICB9LAogIHJ1bjogKGlucHV0cywgb3V0cHV0cykgPT4gewogICAgY29uc3QgeyBrZXksIHZhbHVlLCBvYmplY3QgfSA9IGlucHV0czsKCiAgICBjb25zdCBhdHRyaWJ1dGVzID0ga2V5LnNwbGl0KCIuIik7CiAgICBjb25zdCBsYXN0ID0gYXR0cmlidXRlcy5wb3AoKTsKICAgIGNvbnN0IHRhcmdldCA9IGF0dHJpYnV0ZXMucmVkdWNlKChvYmosIGkpID0+IG9ialtpXSwgb2JqZWN0KTsKICAgIHRhcmdldFtsYXN0XSA9IHZhbHVlOwoKICAgIG91dHB1dHMub2JqZWN0Lm5leHQob2JqZWN0KTsKICB9LAp9Owo=",
  "Slack": "",
  "Slice": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJMaXN0cyI7CgpleHBvcnQgY29uc3QgU2xpY2U6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJTbGljZSIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOgogICAgIlJldHVybnMgYSBzbGljZSBvZiBhIGxpc3QgZnJvbSB0aGUgc3BlY2lmaWVkIHN0YXJ0IGluZGV4IHRvIHRoZSBzcGVjaWZpZWQgZW5kIGluZGV4IiwKICBpbnB1dHM6IHsKICAgIGxpc3Q6IHsgZGVzY3JpcHRpb246ICJUaGUgbGlzdCIgfSwKICAgIHN0YXJ0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIGluZGV4IHRvIHN0YXJ0IHNsaWNpbmcgZnJvbSIgfSwKICAgIGVuZDogeyBkZXNjcmlwdGlvbjogIlRoZSBpbmRleCB0byBlbmQgc2xpY2luZyBhdCIgfSwKICB9LAogIG91dHB1dHM6IHsgbGlzdDogeyBkZXNjcmlwdGlvbjogIlRoZSByZXN1bHRpbmcgbGlzdCIgfSB9LAogIHJ1bjogKHsgbGlzdCwgc3RhcnQsIGVuZCB9LCB7IGxpc3Q6IG91dHB1dExpc3QgfSkgPT4gewogICAgb3V0cHV0TGlzdC5uZXh0KGxpc3Quc2xpY2Uoc3RhcnQsIGVuZCkpOwogIH0sCiAgaWNvbjogImZhLWN1dCIsCn07Cg==",
  "Split": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgY29uc3QgU3BsaXQ6IENvZGVOb2RlID0gewogIGlkOiAiU3BsaXQiLAogIGljb246ICJmYS1mb250IiwKICBkZXNjcmlwdGlvbjogIlNwbGl0cyBhIHN0cmluZyIsCiAgaW5wdXRzOiB7CiAgICBzdHJpbmc6IHsgZGVzY3JpcHRpb246ICJTdHJpbmcgdG8gc3BsaXQiIH0sCiAgICBzZXBhcmF0b3I6IHsgZGVzY3JpcHRpb246ICJTZXBhcmF0b3IiIH0sCiAgfSwKICBvdXRwdXRzOiB7IHZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiU3BsaXR0ZWQgdmFsdWUiIH0gfSwKICBydW46ICh7IHN0cmluZywgc2VwYXJhdG9yIH0sIHsgdmFsdWUgfSkgPT4KICAgIHZhbHVlLm5leHQoc3RyaW5nLnNwbGl0KHNlcGFyYXRvcikpLAp9Owo=",
  "SpreadList": "aW1wb3J0IHsgY29uZmlndXJhYmxlVmFsdWUsIENvbmZpZ3VyYWJsZVZhbHVlIH0gZnJvbSAiQGZseWRlL2NvcmUiOwppbXBvcnQgeyBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmV4cG9ydCBpbnRlcmZhY2UgU3ByZWFkTGlzdENvbmZpZyB7CiAgY291bnQ6IENvbmZpZ3VyYWJsZVZhbHVlOwp9CgpleHBvcnQgY29uc3QgU3ByZWFkTGlzdDogQ29kZU5vZGU8U3ByZWFkTGlzdENvbmZpZz4gPSB7CiAgaWQ6ICJTcHJlYWRMaXN0IiwKICBuYW1lc3BhY2U6ICJMaXN0cyIsCiAgbW9kZTogImFkdmFuY2VkIiwKICBtZW51RGlzcGxheU5hbWU6ICJTcHJlYWQgTGlzdCIsCiAgZGVmYXVsdENvbmZpZzogewogICAgY291bnQ6IGNvbmZpZ3VyYWJsZVZhbHVlKCJudW1iZXIiLCAzKSwKICB9LAogIG1lbnVEZXNjcmlwdGlvbjogIlJlY2VpdmVzIGFuIGFycmF5IGFuZCBlbWl0cyBpdHMgdmFsdWVzIGFzIHNlcGFyYXRlIG91dHB1dHMiLAogIGRpc3BsYXlOYW1lOiAoY29uZmlnKSA9PiBgU3ByZWFkcyBMaXN0IG9mICR7Y29uZmlnLmNvdW50fWAsCiAgZGVzY3JpcHRpb246IChjb25maWcpID0+CiAgICBgUmVjZWl2ZXMgYSBsaXN0IHdpdGggJHtjb25maWcuY291bnR9IGl0ZW1zIGFuZCBlbWl0cyAke2NvbmZpZy5jb3VudH0gb3V0cHV0czogdGhlIGZpcnN0IGl0ZW0sIHRoZSBzZWNvbmQgaXRlbSwgYW5kIHNvIG9uYCwKICBpY29uOiAic2l0ZW1hcCIsCiAgaW5wdXRzOiB7CiAgICBsaXN0OiB7IGRlc2NyaXB0aW9uOiAiVGhlIGxpc3QiIH0sCiAgfSwKICBvdXRwdXRzOiAoY29uZmlnKSA9PgogICAgT2JqZWN0LmZyb21FbnRyaWVzKAogICAgICBBcnJheS5mcm9tKHsgbGVuZ3RoOiBjb25maWcuY291bnQudmFsdWUgfSwgKF8sIGkpID0+IFtgaXRlbSR7aSArIDF9YCwge31dKQogICAgKSwKICBydW46IChpbnB1dHMsIG91dHB1dHMsIGFkdikgPT4gewogICAgY29uc3QgeyBjb3VudCB9ID0gYWR2LmNvbnRleHQuY29uZmlnOwogICAgY29uc3QgeyBsaXN0IH0gPSBpbnB1dHM7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKICAgICAgb3V0cHV0c1tgaXRlbSR7aSArIDF9YF0ubmV4dChsaXN0W2ldKTsKICAgIH0KICB9LAogIGVkaXRvckNvbmZpZzogewogICAgdHlwZTogInN0cnVjdHVyZWQiLAogICAgZmllbGRzOiBbCiAgICAgIHsKICAgICAgICBjb25maWdLZXk6ICJjb3VudCIsCiAgICAgICAgbGFiZWw6ICJDb3VudCIsCiAgICAgICAgdHlwZTogIm51bWJlciIsCiAgICAgICAgdHlwZUNvbmZpZ3VyYWJsZTogZmFsc2UsCiAgICAgICAgdHlwZURhdGE6IHsKICAgICAgICAgIG1pbjogMSwKICAgICAgICAgIG1heDogNwogICAgICAgIH0sCiAgICAgIH0sCiAgICBdLAogIH0sCn07Cg==",
  "StringOps": "",
  "Subscribe": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzCmNvbnN0IFB1YlN1YiA9IHJlcXVpcmUoInB1YnN1Yi1qcyIpOwoKY29uc3QgbmFtZXNwYWNlID0gIkNvbnRyb2wgRmxvdyI7CgpleHBvcnQgY29uc3QgU3Vic2NyaWJlOiBJbnRlcm5hbENvZGVOb2RlID0gewogIGlkOiAiU3Vic2NyaWJlIiwKICBuYW1lc3BhY2UsCiAgZGVzY3JpcHRpb246CiAgICAiU3Vic2NyaWJlcyB0byBhIHZhbHVlIHB1Ymxpc2hlZCBieSBhIGtleS4gVXNlICdQdWJsaXNoJyB0byBwdWJsaXNoIHZhbHVlcy4iLAogIGlucHV0czogewogICAga2V5OiB7CiAgICAgIG1vZGU6ICJyZXF1aXJlZCIsCiAgICAgIGRlc2NyaXB0aW9uOiAiQSBrZXkgdG8gdXNlIHRvIHN1YnNjcmliZSB0byB2YWx1ZXMiLAogICAgfSwKICB9LAogIGNvbXBsZXRpb25PdXRwdXRzOiBbXSwKICBvdXRwdXRzOiB7IHZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiVGhlIHZhbHVlIHB1Ymxpc2hlZCBieSB0aGUga2V5IiB9IH0sCiAgcnVuOiBmdW5jdGlvbiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpIHsKICAgIGNvbnN0IHsgdmFsdWUgfSA9IG91dHB1dHM7CiAgICBjb25zdCBuc0tleSA9IGAke2Fkdi5hbmNlc3RvcnNJbnNJZHN9X18ke2lucHV0cy5rZXl9YDsKICAgIGNvbnN0IHRva2VuID0gUHViU3ViLnN1YnNjcmliZShuc0tleSwgKF8sIGRhdGEpID0+IHsKICAgICAgdmFsdWUubmV4dChkYXRhKTsKICAgIH0pOwoKICAgIGFkdi5vbkNsZWFudXAoKCkgPT4gewogICAgICBQdWJTdWIudW5zdWJzY3JpYmUodG9rZW4pOwogICAgfSk7CiAgfSwKfTsK",
  "Subtract": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgovLyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkKZXhwb3J0IGNvbnN0IFN1YnRyYWN0OiBDb2RlTm9kZSA9IHsKICBpZDogIlN1YnRyYWN0IiwKICBkZXNjcmlwdGlvbjogIlN1YnRyYWN0IHR3byBudW1iZXJzIiwKICBpbnB1dHM6IHsKICAgIG4xOiB7fSwKICAgIG4yOiB7fSwKICB9LAogIG91dHB1dHM6IHsKICAgIGRpZmZlcmVuY2U6IHsKICAgICAgZGVzY3JpcHRpb246ICJUaGUgZGlmZmVyZW5jZSBvZiB0aGUgdHdvIG51bWJlcnMiLAogICAgfSwKICB9LAogIHJ1bjogKGlucHV0cywgeyBkaWZmZXJlbmNlIH0pID0+IHsKICAgIGRpZmZlcmVuY2UubmV4dChpbnB1dHMubjEgLSBpbnB1dHMubjIpOwogIH0sCn07Cg==",
  "SumList": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7Cgpjb25zdCBuYW1lc3BhY2UgPSAiTnVtYmVycyI7CmV4cG9ydCBjb25zdCBTdW1MaXN0OiBDb2RlTm9kZSA9IHsKICBpZDogIlN1bSBMaXN0IiwKICBpY29uOiAiZmEtcGx1cyIsCiAgbmFtZXNwYWNlLAogIGRlc2NyaXB0aW9uOiAiRW1pdHMgdGhlIHN1bSBvZiBhIGxpc3Qgb2YgbnVtYmVycyIsCiAgaW5wdXRzOiB7IGxpc3Q6IHsgZGVzY3JpcHRpb246ICJMaXN0IG9mIG51bWJlcnMiIH0gfSwKICBvdXRwdXRzOiB7IHN1bTogeyBkZXNjcmlwdGlvbjogIlRoZSBzdW0gb2YgdGhlIG51bWJlcnMgaW4gbGlzdCIgfSB9LAogIHJ1bjogKHsgbGlzdCB9LCB7IHN1bSB9KSA9PiBzdW0ubmV4dChsaXN0LnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApKSwKfTsK",
  "Supabase": "",
  "Switch": "aW1wb3J0IHsgQ29kZU5vZGUgfSBmcm9tICJAZmx5ZGUvY29yZSI7CgpleHBvcnQgaW50ZXJmYWNlIFN3aXRjaENvbmZpZyB7CiAgaW5wdXRzOiBzdHJpbmdbXTsKICBjYXNlczogewogICAgbmFtZTogc3RyaW5nOwogICAgY29uZGl0aW9uRXhwcmVzc2lvbjogc3RyaW5nOwogICAgb3V0cHV0RXhwcmVzc2lvbjogc3RyaW5nOwogIH1bXTsKICBkZWZhdWx0Q2FzZToKICB8IHsKICAgIGVuYWJsZWQ6IHRydWU7CiAgICBvdXRwdXRFeHByZXNzaW9uOiBzdHJpbmc7CiAgfQogIHwgewogICAgZW5hYmxlZDogZmFsc2U7CiAgfTsKfQoKZXhwb3J0IGNvbnN0IFN3aXRjaDogQ29kZU5vZGU8U3dpdGNoQ29uZmlnPiA9IHsKICBpZDogIlN3aXRjaCIsCiAgbmFtZXNwYWNlOiAiQ29udHJvbCBGbG93IiwKICBtb2RlOiAiYWR2YW5jZWQiLAogIGljb246ICJzaXRlbWFwIiwKCiAgbWVudURpc3BsYXlOYW1lOiAiU3dpdGNoIiwKICBtZW51RGVzY3JpcHRpb246CiAgICAiQWxsb3dzIHlvdSB0byBzd2l0Y2ggYmV0d2VlbiBtdWx0aXBsZSBvdXRwdXRzIGJhc2VkIG9uIHRoZSB2YWx1ZSBvZiBvbmUgaW5wdXQgb3IgbW9yZSwgdXNpbmcgY29kZSBleHByZXNzaW9ucyIsCiAgZGlzcGxheU5hbWU6ICgpID0+ICJTd2l0Y2giLAogIGRlc2NyaXB0aW9uOiAoY29uZmlnKSA9PgogICAgYFN3aXRjaCBiZXR3ZWVuICR7Y29uZmlnLmNhc2VzLmxlbmd0aH0gY2FzZXMgYmFzZWQgb24gY29uZGl0aW9uc2AsCiAgZGVmYXVsdENvbmZpZzogewogICAgaW5wdXRzOiBbInZhbHVlIl0sCiAgICBjYXNlczogWwogICAgICB7CiAgICAgICAgbmFtZTogImNhc2UxIiwKICAgICAgICBjb25kaXRpb25FeHByZXNzaW9uOiAiaW5wdXRzLnZhbHVlID09PSAnY2FzZTEnIiwKICAgICAgICBvdXRwdXRFeHByZXNzaW9uOiAiaW5wdXRzLnZhbHVlIiwKICAgICAgfSwKICAgIF0sCiAgICBkZWZhdWx0Q2FzZTogewogICAgICBlbmFibGVkOiB0cnVlLAogICAgICBvdXRwdXRFeHByZXNzaW9uOiAiaW5wdXRzLnZhbHVlIiwKICAgIH0sCiAgfSwKICBpbnB1dHM6IChjb25maWcpID0+CiAgICBjb25maWcuaW5wdXRzLnJlZHVjZSgoYWNjLCBuYW1lLCBpKSA9PiB7CiAgICAgIGFjY1tuYW1lXSA9IHsgZGVzY3JpcHRpb246IGBTd2l0Y2ggaW5wdXQgbm8uICR7aSArIDF9YCB9OwogICAgICByZXR1cm4gYWNjOwogICAgfSwge30pLAogIG91dHB1dHM6IChjb25maWcpID0+IHsKICAgIGNvbnN0IG91dHB1dHMgPSBjb25maWcuY2FzZXMucmVkdWNlKChhY2MsIHsgbmFtZSB9LCBpKSA9PiB7CiAgICAgIGFjY1tuYW1lXSA9IHsgZGVzY3JpcHRpb246IGBTd2l0Y2ggb3V0cHV0IG5vLiAke2kgKyAxfWAgfTsKICAgICAgcmV0dXJuIGFjYzsKICAgIH0sIHt9KTsKCiAgICBpZiAoY29uZmlnLmRlZmF1bHRDYXNlLmVuYWJsZWQpIHsKICAgICAgb3V0cHV0c1siZGVmYXVsdCJdID0geyBkZXNjcmlwdGlvbjogIlN3aXRjaCBkZWZhdWx0IGNhc2Ugb3V0cHV0IiB9OwogICAgfQoKICAgIHJldHVybiBvdXRwdXRzOwogIH0sCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgZGVmYXVsdENhc2UsIGNhc2VzIH0gPSBhZHYuY29udGV4dC5jb25maWc7CgogICAgbGV0IGZvdW5kQ2FzZSA9IGZhbHNlOwoKICAgIGZvciAoY29uc3QgeyBuYW1lLCBjb25kaXRpb25FeHByZXNzaW9uLCBvdXRwdXRFeHByZXNzaW9uIH0gb2YgY2FzZXMpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBjb25kaXRpb24gPSBldmFsRXhwcmVzc2lvbihjb25kaXRpb25FeHByZXNzaW9uLCBpbnB1dHMpOwogICAgICAgIGlmIChjb25kaXRpb24pIHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIG91dHB1dHNbbmFtZV0ubmV4dChldmFsRXhwcmVzc2lvbihvdXRwdXRFeHByZXNzaW9uLCBpbnB1dHMpKTsKICAgICAgICAgICAgZm91bmRDYXNlID0gdHJ1ZTsKICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgYWR2Lm9uRXJyb3IoZSk7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBhZHYub25FcnJvcihlKTsKICAgICAgfQogICAgfQoKICAgIGlmICghZm91bmRDYXNlICYmIGRlZmF1bHRDYXNlLmVuYWJsZWQpIHsKICAgICAgb3V0cHV0cy5kZWZhdWx0Lm5leHQoCiAgICAgICAgZXZhbEV4cHJlc3Npb24oZGVmYXVsdENhc2Uub3V0cHV0RXhwcmVzc2lvbiwgaW5wdXRzKQogICAgICApOwogICAgfQogIH0sCiAgZWRpdG9yQ29uZmlnOiB7CiAgICB0eXBlOiAiY3VzdG9tIiwKICAgIGVkaXRvckNvbXBvbmVudEJ1bmRsZVBhdGg6ICIuLi8uLi9kaXN0L3VpL1N3aXRjaC5qcyIsCiAgfSwKfTsKCmZ1bmN0aW9uIGV2YWxFeHByZXNzaW9uKGV4cHJlc3Npb246IHN0cmluZywgaW5wdXRzOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPikgewogIHJldHVybiBldmFsKGAoaW5wdXRzKSA9PiAoJHtleHByZXNzaW9ufSlgKShpbnB1dHMpOwp9Cg==",
  "Tavily": "",
  "Throttle": "aW1wb3J0IHsgVElNSU5HX05BTUVTUEFDRSwgdGltZVRvU3RyaW5nIH0gZnJvbSAiLi9jb21tb24iOwppbXBvcnQgeyBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9IFRJTUlOR19OQU1FU1BBQ0U7CgpleHBvcnQgY29uc3QgVGhyb3R0bGU6IENvZGVOb2RlID0gewogIGlkOiAiVGhyb3R0bGUiLAogIG5hbWVzcGFjZSwKICBtZW51RGlzcGxheU5hbWU6ICJUaHJvdHRsZSIsCiAgaWNvbjogImZhLWhhbmQiLAogIGRpc3BsYXlOYW1lOiAiVGhyb3R0bGUge3tkZWxheU1zfX1tcyIsCiAgbWVudURlc2NyaXB0aW9uOgogICAgIkxpbWl0cyB0aGUgbnVtYmVyIG9mIHRpbWVzIGEgdmFsdWUgaXMgZW1pdHRlZCB0byBvbmNlIHBlciB0aW1lIGNvbmZpZ3VyZWQuIFN1cHBvcnRzIGJvdGggc3RhdGljIGFuZCBkeW5hbWljIGludGVydmFscy4iLAogIGRlc2NyaXB0aW9uOiAoY29uZmlnKSA9PiB7CiAgICByZXR1cm4gYFRocm90dGxlcyBpbnB1dCB2YWx1ZXMgd2l0aCBhbiBpbnRlcnZhbCBvZiAke3RpbWVUb1N0cmluZygKICAgICAgY29uZmlnLmRlbGF5TXMKICAgICl9LmA7CiAgfSwKICBpbnB1dHM6IHsKICAgIHZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiVmFsdWUgdG8gdGhyb3R0bGUiLCBtb2RlOiAicmVhY3RpdmUiIH0sCiAgICBkZWxheU1zOiB7CiAgICAgIGRlZmF1bHRWYWx1ZTogNDIwLAogICAgICBkZXNjcmlwdGlvbjogIlRocm90dGxlIGludGVydmFsIGluIG1pbGxpc2Vjb25kcyIsCiAgICAgIGVkaXRvclR5cGU6ICJudW1iZXIiLAogICAgICBlZGl0b3JUeXBlRGF0YTogeyBtaW46IDAgfSwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7CiAgICB1bnRocm90dGxlZFZhbHVlOiB7IGRlc2NyaXB0aW9uOiAiVW50aHJvdHRsZWQgdmFsdWUiIH0sCiAgfSwKICBjb21wbGV0aW9uT3V0cHV0czogW10sCiAgcnVuOiBhc3luYyAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgdW50aHJvdHRsZWRWYWx1ZSB9ID0gb3V0cHV0czsKICAgIGNvbnN0IHsgdmFsdWUsIGRlbGF5TXMgfSA9IGlucHV0czsKCiAgICBjb25zdCBwcm9taXNlID0gYWR2LnN0YXRlLmdldCgicHJvbWlzZSIpOwogICAgaWYgKHByb21pc2UpIHsKICAgICAgYWR2Lm9uRXJyb3IobmV3IEVycm9yKGBUaHJvdHRsZTogVmFsdWUgZHJvcHBlZGApKTsKICAgICAgcmV0dXJuOwogICAgfSBlbHNlIHsKICAgICAgdW50aHJvdHRsZWRWYWx1ZS5uZXh0KHZhbHVlKTsKICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlKSA9PiB7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSwgZGVsYXlNcyk7CiAgICAgIH0pOwogICAgICBhZHYuc3RhdGUuc2V0KCJwcm9taXNlIiwgcHJvbWlzZSk7CgogICAgICBhd2FpdCBwcm9taXNlOwogICAgICBhZHYuc3RhdGUuc2V0KCJwcm9taXNlIiwgdW5kZWZpbmVkKTsKICAgIH0KICB9LAp9Owo=",
  "Values": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmNvbnN0IG5hbWVzcGFjZSA9ICJPYmplY3RzIjsKCmV4cG9ydCBjb25zdCBPYmplY3RWYWx1ZXM6IEludGVybmFsQ29kZU5vZGUgPSB7CiAgaWQ6ICJWYWx1ZXMiLAogIG5hbWVzcGFjZSwKICBkZXNjcmlwdGlvbjogIkVtaXRzIHRoZSB2YWx1ZXMgb2YgYW4gb2JqZWN0IiwKICBpbnB1dHM6IHsgb2JqZWN0OiB7IGRlc2NyaXB0aW9uOiAiT2JqZWN0IHRvIGdldCB2YWx1ZXMgb2YiIH0gfSwKICBvdXRwdXRzOiB7IHZhbHVlczogeyBkZXNjcmlwdGlvbjogIlRoZSB2YWx1ZXMgb2Ygb2JqZWN0IiB9IH0sCiAgcnVuOiAoeyBvYmplY3QgfSwgeyB2YWx1ZXMgfSkgPT4gdmFsdWVzLm5leHQoT2JqZWN0LnZhbHVlcyhvYmplY3QpKSwKfTsK",
  "Write File": "aW1wb3J0IHsgSW50ZXJuYWxDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKaW1wb3J0ICogYXMgZnMgZnJvbSAiZnMiOwoKZXhwb3J0IGNvbnN0IFdyaXRlRmlsZTogSW50ZXJuYWxDb2RlTm9kZSA9IHsKICBpZDogIldyaXRlIEZpbGUiLAogIGljb246ICJmYS1maWxlIiwKICBuYW1lc3BhY2U6ICJGaWxlIFN5c3RlbSIsCiAgZGVzY3JpcHRpb246ICJXcml0ZXMgYSBmaWxlIHRvIHRoZSBmaWxlIHN5c3RlbSIsCiAgaW5wdXRzOiB7CiAgICBwYXRoOiB7IGRlc2NyaXB0aW9uOiAiUGF0aCB0byB0aGUgZmlsZSIgfSwKICAgIGNvbnRlbnRzOiB7IGRlc2NyaXB0aW9uOiAiQ29udGVudHMgb2YgdGhlIGZpbGUiIH0sCiAgICBlbmNvZGluZzogewogICAgICBkZXNjcmlwdGlvbjogIkVuY29kaW5nIG9mIHRoZSBmaWxlIiwKICAgICAgbW9kZTogIm9wdGlvbmFsIiwKICAgIH0sCiAgfSwKICBvdXRwdXRzOiB7fSwKICBydW46ICh7IHBhdGgsIGNvbnRlbnRzLCBlbmNvZGluZyB9KSA9PiB7CiAgICByZXR1cm4gZnMucHJvbWlzZXMud3JpdGVGaWxlKHBhdGgsIGNvbnRlbnRzLCBlbmNvZGluZyk7CiAgfSwKfTsK",
  "listFrom": "aW1wb3J0IHsgY29uZmlndXJhYmxlVmFsdWUsIENvbmZpZ3VyYWJsZVZhbHVlIH0gZnJvbSAiQGZseWRlL2NvcmUiOwppbXBvcnQgeyBDb2RlTm9kZSB9IGZyb20gIkBmbHlkZS9jb3JlIjsKCmV4cG9ydCBpbnRlcmZhY2UgTGlzdEZyb21Db25maWcgewogIGNvdW50OiBDb25maWd1cmFibGVWYWx1ZTsKfQoKZXhwb3J0IGNvbnN0IGxpc3RGcm9tOiBDb2RlTm9kZTxMaXN0RnJvbUNvbmZpZz4gPSB7CiAgaWQ6ICJMaXN0RnJvbSIsCiAgbmFtZXNwYWNlOiAiTGlzdHMiLAogIG1vZGU6ICJhZHZhbmNlZCIsCiAgbWVudURpc3BsYXlOYW1lOiAiTWVyZ2UgdG8gTGlzdCIsCiAgZGVmYXVsdENvbmZpZzogewogICAgY291bnQ6IGNvbmZpZ3VyYWJsZVZhbHVlKCJudW1iZXIiLCAyKSwKICB9LAogIG1lbnVEZXNjcmlwdGlvbjoKICAgICJSZWNlaXZlcyBhIGxpc3Qgb2YgdmFsdWVzIGFuZCBjcmVhdGVzIGEgbGlzdCAoYXJyYXkpIGZyb20gdGhlbSIsCiAgZGlzcGxheU5hbWU6IChjb25maWcpID0+IGBMaXN0IGZyb20gJHtjb25maWcuY291bnR9YCwKICBkZXNjcmlwdGlvbjogKGNvbmZpZykgPT4gYENyZWF0ZXMgYSBsaXN0IGZyb20gJHtjb25maWcuY291bnR9IHZhbHVlc2AsCiAgaWNvbjogImxpc3QiLAogIGlucHV0czogKGNvbmZpZykgPT4KICAgIE9iamVjdC5mcm9tRW50cmllcygKICAgICAgQXJyYXkuZnJvbSh7IGxlbmd0aDogY29uZmlnLmNvdW50LnZhbHVlIH0sIChfLCBpKSA9PiBbYGl0ZW0ke2kgKyAxfWAsIHt9XSkKICAgICksCiAgb3V0cHV0czogewogICAgbGlzdDogeyBkZXNjcmlwdGlvbjogIkxpc3QgY29udGFpbmluZyBhbGwgdmFsdWVzIiB9LAogIH0sCiAgcnVuOiAoaW5wdXRzLCBvdXRwdXRzLCBhZHYpID0+IHsKICAgIGNvbnN0IHsgY291bnQgfSA9IGFkdi5jb250ZXh0LmNvbmZpZzsKICAgIGNvbnN0IHJlc3VsdCA9IFtdOwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CiAgICAgIHJlc3VsdC5wdXNoKGlucHV0c1tgaXRlbSR7aSArIDF9YF0pOwogICAgfQogICAgb3V0cHV0cy5saXN0Lm5leHQocmVzdWx0KTsKICB9LAogIGVkaXRvckNvbmZpZzogewogICAgdHlwZTogInN0cnVjdHVyZWQiLAogICAgZmllbGRzOiBbCiAgICAgIHsKICAgICAgICB0eXBlOiAibnVtYmVyIiwKICAgICAgICBsYWJlbDogIkNvdW50IiwKICAgICAgICBkZXNjcmlwdGlvbjogIk51bWJlciBvZiBpdGVtcyB0byBjcmVhdGUiLAogICAgICAgIGNvbmZpZ0tleTogImNvdW50IiwKICAgICAgICB0eXBlQ29uZmlndXJhYmxlOiBmYWxzZSwKICAgICAgfSwKICAgIF0sCiAgfSwKfTsK"
};

export function getNodeSource(nodeId: string): string | undefined {
  const encoded = flydeSources[nodeId];
  if (!encoded) {
    return undefined;
  }
  
  try {
    // Decode from base64 - use atob in browser, Buffer in Node.js
    if (typeof atob !== 'undefined') {
      return atob(encoded);
    } else if (typeof Buffer !== 'undefined') {
      return Buffer.from(encoded, 'base64').toString('utf-8');
    } else {
      throw new Error('No base64 decoder available');
    }
  } catch (e) {
    console.error(`Failed to decode source for node ${nodeId}:`, e);
    return undefined;
  }
}
