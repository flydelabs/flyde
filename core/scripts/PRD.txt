# Visual AI Flows: In Your Codebase
## Product Requirements Document

### Overview
Flyde is creating a new website to showcase its visual AI flows builder, enabling developers and non-developers to collaborate on AI workflows. The website will demonstrate Flyde's capabilities, provide educational resources, and offer interactive experiences.

### Brand Identity
- **Primary Color**: #2887F4
- **Look and Feel**: Modern, tech-forward, simple
- **Theme**: Dark mode first, light mode optional
- **Design Inspiration**: Supabase/Vercel-like aesthetics with clean interfaces and minimal distractions

### Product Vision
Flyde is the missing link between developers and non-developers working on AI workflows.

It provides a holistic solution for prototyping, integrating, evaluating, and iterating on AI-heavy backend logic, such as AI agents, prompt chains, and agentic workflows.

Unlike existing tools, it runs in-codebase, via a library, with access to runtime code and is integrated as a library into existing frameworks, tools, and CI/CD pipelines. It is a visual extension of TypeScript that lowers the collaboration barrier.

### Target Audience
1. **Developers**: Software engineers working with AI and ML technologies
2. **Technical Product Managers**: Coordinating AI feature development
3. **AI/ML Specialists**: Looking for tools to streamline their workflow
4. **Non-technical Stakeholders**: Needing to collaborate on AI systems without coding

### Website Structure

#### 1. Home Page
**Purpose**: Create a compelling first impression and demonstrate Flyde's capabilities.

**Requirements**:
- Hero section with concise value proposition and clear CTA
- Embedded interactive Flyde demo component (`<EmbeddedFlyde />`)
- Benefits section highlighting key value propositions
- Use cases/success stories
- Feature highlights with visual examples
- "Getting Started" section with quick installation instructions
- Newsletter signup

**Technical Requirements**:
- Responsive design for all device sizes
- Optimized loading for embedded Flyde demo
- SEO optimization for AI workflow-related keywords

#### 2. Blog
**Purpose**: Provide thought leadership, tutorials, and updates on Flyde.

**Requirements**:
- Clean, readable article layout
- Categories for different content types (Tutorials, Case Studies, Updates, etc.)
- Author profiles
- Social sharing functionality
- Related posts suggestions
- Search functionality
- Comment system (optional)

**Technical Requirements**:
- Markdown/MDX support for easy content creation
- Syntax highlighting for code blocks
- Image optimization
- RSS feed generation

#### 3. Playground (Placeholder)
**Purpose**: Provide a full-featured environment for users to experiment with Flyde.

**Requirements for MVP**:
- Placeholder page explaining the upcoming playground feature
- Email capture for notifications when the playground launches
- Preview screenshots/videos of the playground functionality

**Future Requirements**:
- Interactive Flyde environment with preset templates
- Ability to save and share creations
- Integration examples with popular frameworks
- Export functionality for created flows

#### 4. Documentation
**Purpose**: Comprehensive reference for using Flyde.

**Requirements**:
- Clear navigation structure with logical categorization
- Getting started guide
- Installation instructions
- API reference
- Component library documentation
- Examples and tutorials
- Troubleshooting section
- Search functionality
- Version selector

**Technical Requirements**:
- MDX-based documentation system
- Easy process for adding new documentation
- Code snippet copying functionality
- Automatic sidebar generation based on file structure
- Versioning support

### General Website Requirements

**Design Requirements**:
- Consistent application of brand colors and style
- Dark mode by default with light mode toggle
- Smooth animations and transitions
- Custom illustrations to explain concepts
- Mobile-responsive design

**Technical Requirements**:
- Built with Next.js for performance and SEO
- TypeScript for type safety
- Component library (e.g., Tailwind, Radix UI)
- Analytics integration (e.g., Google Analytics, Plausible)
- Performance optimization (Core Web Vitals)
- Accessibility compliance (WCAG 2.1 AA)

**SEO Requirements**:
- Meta tags and Open Graph support
- Structured data for rich snippets
- Sitemap generation
- Optimized page titles and descriptions
- Alt text for all images

**Deployment and Infrastructure**:
- CI/CD pipeline for automated deployments
- Vercel/Netlify hosting
- Environment-based configuration
- Monitoring and error tracking

### Success Metrics
- Website traffic and engagement metrics
- Demo usage statistics
- Documentation usefulness (time on page, feedback)
- Newsletter signups
- GitHub stars, forks, and contributions
- Conversion rate to installations/downloads

### Development Phases

**Phase 1: MVP Launch**
- Home page with embedded demo
- Basic documentation structure
- Simple blog with initial posts
- Placeholder for playground

**Phase 2: Content Expansion**
- Expanded documentation with more examples
- Additional blog content
- Improved demos and examples

**Phase 3: Full Feature Set**
- Interactive playground launch
- Advanced documentation features
- Community showcase section
- Integration guides for popular frameworks

### Timeline
- Design approval: [TBD]
- Development start: [TBD]
- Alpha release: [TBD]
- Beta testing: [TBD]
- Production launch: [TBD]

### Maintenance Plan
- Regular content updates (blog posts, documentation)
- Quarterly design reviews
- Monthly analytics reviews
- Continuous performance optimization 